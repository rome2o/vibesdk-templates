var Bp=Object.defineProperty;var Dp=(r,o,i)=>o in r?Bp(r,o,{enumerable:!0,configurable:!0,writable:!0,value:i}):r[o]=i;var Wt=(r,o,i)=>Dp(r,typeof o!="symbol"?o+"":o,i);function ym(r,o){for(var i=0;i<o.length;i++){const l=o[i];if(typeof l!="string"&&!Array.isArray(l)){for(const c in l)if(c!=="default"&&!(c in r)){const d=Object.getOwnPropertyDescriptor(l,c);d&&Object.defineProperty(r,c,d.get?d:{enumerable:!0,get:()=>l[c]})}}}return Object.freeze(Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}))}(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const c of document.querySelectorAll('link[rel="modulepreload"]'))l(c);new MutationObserver(c=>{for(const d of c)if(d.type==="childList")for(const f of d.addedNodes)f.tagName==="LINK"&&f.rel==="modulepreload"&&l(f)}).observe(document,{childList:!0,subtree:!0});function i(c){const d={};return c.integrity&&(d.integrity=c.integrity),c.referrerPolicy&&(d.referrerPolicy=c.referrerPolicy),c.crossOrigin==="use-credentials"?d.credentials="include":c.crossOrigin==="anonymous"?d.credentials="omit":d.credentials="same-origin",d}function l(c){if(c.ep)return;c.ep=!0;const d=i(c);fetch(c.href,d)}})();function xm(r){return r&&r.__esModule&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r}var wc={exports:{}},Li={},Sc={exports:{}},je={},qf;function jp(){if(qf)return je;qf=1;/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=Symbol.for("react.element"),o=Symbol.for("react.portal"),i=Symbol.for("react.fragment"),l=Symbol.for("react.strict_mode"),c=Symbol.for("react.profiler"),d=Symbol.for("react.provider"),f=Symbol.for("react.context"),h=Symbol.for("react.forward_ref"),m=Symbol.for("react.suspense"),v=Symbol.for("react.memo"),b=Symbol.for("react.lazy"),y=Symbol.iterator;function S(k){return k===null||typeof k!="object"?null:(k=y&&k[y]||k["@@iterator"],typeof k=="function"?k:null)}var C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},L=Object.assign,M={};function z(k,j,ve){this.props=k,this.context=j,this.refs=M,this.updater=ve||C}z.prototype.isReactComponent={},z.prototype.setState=function(k,j){if(typeof k!="object"&&typeof k!="function"&&k!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,k,j,"setState")},z.prototype.forceUpdate=function(k){this.updater.enqueueForceUpdate(this,k,"forceUpdate")};function B(){}B.prototype=z.prototype;function R(k,j,ve){this.props=k,this.context=j,this.refs=M,this.updater=ve||C}var H=R.prototype=new B;H.constructor=R,L(H,z.prototype),H.isPureReactComponent=!0;var Z=Array.isArray,X=Object.prototype.hasOwnProperty,te={current:null},I={key:!0,ref:!0,__self:!0,__source:!0};function D(k,j,ve){var ye,we={},Ce=null,_e=null;if(j!=null)for(ye in j.ref!==void 0&&(_e=j.ref),j.key!==void 0&&(Ce=""+j.key),j)X.call(j,ye)&&!I.hasOwnProperty(ye)&&(we[ye]=j[ye]);var Fe=arguments.length-2;if(Fe===1)we.children=ve;else if(1<Fe){for(var Ae=Array(Fe),Xe=0;Xe<Fe;Xe++)Ae[Xe]=arguments[Xe+2];we.children=Ae}if(k&&k.defaultProps)for(ye in Fe=k.defaultProps,Fe)we[ye]===void 0&&(we[ye]=Fe[ye]);return{$$typeof:r,type:k,key:Ce,ref:_e,props:we,_owner:te.current}}function U(k,j){return{$$typeof:r,type:k.type,key:j,ref:k.ref,props:k.props,_owner:k._owner}}function V(k){return typeof k=="object"&&k!==null&&k.$$typeof===r}function re(k){var j={"=":"=0",":":"=2"};return"$"+k.replace(/[=:]/g,function(ve){return j[ve]})}var ne=/\/+/g;function fe(k,j){return typeof k=="object"&&k!==null&&k.key!=null?re(""+k.key):j.toString(36)}function oe(k,j,ve,ye,we){var Ce=typeof k;(Ce==="undefined"||Ce==="boolean")&&(k=null);var _e=!1;if(k===null)_e=!0;else switch(Ce){case"string":case"number":_e=!0;break;case"object":switch(k.$$typeof){case r:case o:_e=!0}}if(_e)return _e=k,we=we(_e),k=ye===""?"."+fe(_e,0):ye,Z(we)?(ve="",k!=null&&(ve=k.replace(ne,"$&/")+"/"),oe(we,j,ve,"",function(Xe){return Xe})):we!=null&&(V(we)&&(we=U(we,ve+(!we.key||_e&&_e.key===we.key?"":(""+we.key).replace(ne,"$&/")+"/")+k)),j.push(we)),1;if(_e=0,ye=ye===""?".":ye+":",Z(k))for(var Fe=0;Fe<k.length;Fe++){Ce=k[Fe];var Ae=ye+fe(Ce,Fe);_e+=oe(Ce,j,ve,Ae,we)}else if(Ae=S(k),typeof Ae=="function")for(k=Ae.call(k),Fe=0;!(Ce=k.next()).done;)Ce=Ce.value,Ae=ye+fe(Ce,Fe++),_e+=oe(Ce,j,ve,Ae,we);else if(Ce==="object")throw j=String(k),Error("Objects are not valid as a React child (found: "+(j==="[object Object]"?"object with keys {"+Object.keys(k).join(", ")+"}":j)+"). If you meant to render a collection of children, use an array instead.");return _e}function Ee(k,j,ve){if(k==null)return k;var ye=[],we=0;return oe(k,ye,"","",function(Ce){return j.call(ve,Ce,we++)}),ye}function Ne(k){if(k._status===-1){var j=k._result;j=j(),j.then(function(ve){(k._status===0||k._status===-1)&&(k._status=1,k._result=ve)},function(ve){(k._status===0||k._status===-1)&&(k._status=2,k._result=ve)}),k._status===-1&&(k._status=0,k._result=j)}if(k._status===1)return k._result.default;throw k._result}var xe={current:null},W={transition:null},ie={ReactCurrentDispatcher:xe,ReactCurrentBatchConfig:W,ReactCurrentOwner:te};function q(){throw Error("act(...) is not supported in production builds of React.")}return je.Children={map:Ee,forEach:function(k,j,ve){Ee(k,function(){j.apply(this,arguments)},ve)},count:function(k){var j=0;return Ee(k,function(){j++}),j},toArray:function(k){return Ee(k,function(j){return j})||[]},only:function(k){if(!V(k))throw Error("React.Children.only expected to receive a single React element child.");return k}},je.Component=z,je.Fragment=i,je.Profiler=c,je.PureComponent=R,je.StrictMode=l,je.Suspense=m,je.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ie,je.act=q,je.cloneElement=function(k,j,ve){if(k==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+k+".");var ye=L({},k.props),we=k.key,Ce=k.ref,_e=k._owner;if(j!=null){if(j.ref!==void 0&&(Ce=j.ref,_e=te.current),j.key!==void 0&&(we=""+j.key),k.type&&k.type.defaultProps)var Fe=k.type.defaultProps;for(Ae in j)X.call(j,Ae)&&!I.hasOwnProperty(Ae)&&(ye[Ae]=j[Ae]===void 0&&Fe!==void 0?Fe[Ae]:j[Ae])}var Ae=arguments.length-2;if(Ae===1)ye.children=ve;else if(1<Ae){Fe=Array(Ae);for(var Xe=0;Xe<Ae;Xe++)Fe[Xe]=arguments[Xe+2];ye.children=Fe}return{$$typeof:r,type:k.type,key:we,ref:Ce,props:ye,_owner:_e}},je.createContext=function(k){return k={$$typeof:f,_currentValue:k,_currentValue2:k,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},k.Provider={$$typeof:d,_context:k},k.Consumer=k},je.createElement=D,je.createFactory=function(k){var j=D.bind(null,k);return j.type=k,j},je.createRef=function(){return{current:null}},je.forwardRef=function(k){return{$$typeof:h,render:k}},je.isValidElement=V,je.lazy=function(k){return{$$typeof:b,_payload:{_status:-1,_result:k},_init:Ne}},je.memo=function(k,j){return{$$typeof:v,type:k,compare:j===void 0?null:j}},je.startTransition=function(k){var j=W.transition;W.transition={};try{k()}finally{W.transition=j}},je.unstable_act=q,je.useCallback=function(k,j){return xe.current.useCallback(k,j)},je.useContext=function(k){return xe.current.useContext(k)},je.useDebugValue=function(){},je.useDeferredValue=function(k){return xe.current.useDeferredValue(k)},je.useEffect=function(k,j){return xe.current.useEffect(k,j)},je.useId=function(){return xe.current.useId()},je.useImperativeHandle=function(k,j,ve){return xe.current.useImperativeHandle(k,j,ve)},je.useInsertionEffect=function(k,j){return xe.current.useInsertionEffect(k,j)},je.useLayoutEffect=function(k,j){return xe.current.useLayoutEffect(k,j)},je.useMemo=function(k,j){return xe.current.useMemo(k,j)},je.useReducer=function(k,j,ve){return xe.current.useReducer(k,j,ve)},je.useRef=function(k){return xe.current.useRef(k)},je.useState=function(k){return xe.current.useState(k)},je.useSyncExternalStore=function(k,j,ve){return xe.current.useSyncExternalStore(k,j,ve)},je.useTransition=function(){return xe.current.useTransition()},je.version="18.3.1",je}var Kf;function tu(){return Kf||(Kf=1,Sc.exports=jp()),Sc.exports}/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var e0;function Up(){if(e0)return Li;e0=1;var r=tu(),o=Symbol.for("react.element"),i=Symbol.for("react.fragment"),l=Object.prototype.hasOwnProperty,c=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,d={key:!0,ref:!0,__self:!0,__source:!0};function f(h,m,v){var b,y={},S=null,C=null;v!==void 0&&(S=""+v),m.key!==void 0&&(S=""+m.key),m.ref!==void 0&&(C=m.ref);for(b in m)l.call(m,b)&&!d.hasOwnProperty(b)&&(y[b]=m[b]);if(h&&h.defaultProps)for(b in m=h.defaultProps,m)y[b]===void 0&&(y[b]=m[b]);return{$$typeof:o,type:h,key:S,ref:C,props:y,_owner:c.current}}return Li.Fragment=i,Li.jsx=f,Li.jsxs=f,Li}var t0;function Hp(){return t0||(t0=1,wc.exports=Up()),wc.exports}var se=Hp(),wm=Symbol.for("immer-nothing"),r0=Symbol.for("immer-draftable"),qe=Symbol.for("immer-state");function Cr(r,...o){throw new Error(`[Immer] minified error nr: ${r}. Full error at: https://bit.ly/3cXEKWf`)}var Yo=Object.getPrototypeOf;function Xo(r){return!!r&&!!r[qe]}function gn(r){var o;return r?Sm(r)||Array.isArray(r)||!!r[r0]||!!((o=r.constructor)!=null&&o[r0])||na(r)||Al(r):!1}var Wp=Object.prototype.constructor.toString();function Sm(r){if(!r||typeof r!="object")return!1;const o=Yo(r);if(o===null)return!0;const i=Object.hasOwnProperty.call(o,"constructor")&&o.constructor;return i===Object?!0:typeof i=="function"&&Function.toString.call(i)===Wp}function Qi(r,o){zl(r)===0?Reflect.ownKeys(r).forEach(i=>{o(i,r[i],r)}):r.forEach((i,l)=>o(l,i,r))}function zl(r){const o=r[qe];return o?o.type_:Array.isArray(r)?1:na(r)?2:Al(r)?3:0}function Uc(r,o){return zl(r)===2?r.has(o):Object.prototype.hasOwnProperty.call(r,o)}function Em(r,o,i){const l=zl(r);l===2?r.set(o,i):l===3?r.add(i):r[o]=i}function $p(r,o){return r===o?r!==0||1/r===1/o:r!==r&&o!==o}function na(r){return r instanceof Map}function Al(r){return r instanceof Set}function Et(r){return r.copy_||r.base_}function Hc(r,o){if(na(r))return new Map(r);if(Al(r))return new Set(r);if(Array.isArray(r))return Array.prototype.slice.call(r);const i=Sm(r);if(o===!0||o==="class_only"&&!i){const l=Object.getOwnPropertyDescriptors(r);delete l[qe];let c=Reflect.ownKeys(l);for(let d=0;d<c.length;d++){const f=c[d],h=l[f];h.writable===!1&&(h.writable=!0,h.configurable=!0),(h.get||h.set)&&(l[f]={configurable:!0,writable:!0,enumerable:h.enumerable,value:r[f]})}return Object.create(Yo(r),l)}else{const l=Yo(r);if(l!==null&&i)return{...r};const c=Object.create(l);return Object.assign(c,r)}}function ru(r,o=!1){return Ol(r)||Xo(r)||!gn(r)||(zl(r)>1&&Object.defineProperties(r,{set:{value:ul},add:{value:ul},clear:{value:ul},delete:{value:ul}}),Object.freeze(r),o&&Object.values(r).forEach(i=>ru(i,!0))),r}function ul(){Cr(2)}function Ol(r){return Object.isFrozen(r)}var Wc={};function vo(r){const o=Wc[r];return o||Cr(0,r),o}function Vp(r,o){Wc[r]||(Wc[r]=o)}var Zi;function Cl(){return Zi}function Gp(r,o){return{drafts_:[],parent_:r,immer_:o,canAutoFreeze_:!0,unfinalizedDrafts_:0}}function n0(r,o){o&&(vo("Patches"),r.patches_=[],r.inversePatches_=[],r.patchListener_=o)}function $c(r){Vc(r),r.drafts_.forEach(Qp),r.drafts_=null}function Vc(r){r===Zi&&(Zi=r.parent_)}function o0(r){return Zi=Gp(Zi,r)}function Qp(r){const o=r[qe];o.type_===0||o.type_===1?o.revoke_():o.revoked_=!0}function i0(r,o){o.unfinalizedDrafts_=o.drafts_.length;const i=o.drafts_[0];return r!==void 0&&r!==i?(i[qe].modified_&&($c(o),Cr(4)),gn(r)&&(r=_l(o,r),o.parent_||Il(o,r)),o.patches_&&vo("Patches").generateReplacementPatches_(i[qe].base_,r,o.patches_,o.inversePatches_)):r=_l(o,i,[]),$c(o),o.patches_&&o.patchListener_(o.patches_,o.inversePatches_),r!==wm?r:void 0}function _l(r,o,i){if(Ol(o))return o;const l=o[qe];if(!l)return Qi(o,(c,d)=>a0(r,l,o,c,d,i)),o;if(l.scope_!==r)return o;if(!l.modified_)return Il(r,l.base_,!0),l.base_;if(!l.finalized_){l.finalized_=!0,l.scope_.unfinalizedDrafts_--;const c=l.copy_;let d=c,f=!1;l.type_===3&&(d=new Set(c),c.clear(),f=!0),Qi(d,(h,m)=>a0(r,l,c,h,m,i,f)),Il(r,c,!1),i&&r.patches_&&vo("Patches").generatePatches_(l,i,r.patches_,r.inversePatches_)}return l.copy_}function a0(r,o,i,l,c,d,f){if(Xo(c)){const h=d&&o&&o.type_!==3&&!Uc(o.assigned_,l)?d.concat(l):void 0,m=_l(r,c,h);if(Em(i,l,m),Xo(m))r.canAutoFreeze_=!1;else return}else f&&i.add(c);if(gn(c)&&!Ol(c)){if(!r.immer_.autoFreeze_&&r.unfinalizedDrafts_<1)return;_l(r,c),(!o||!o.scope_.parent_)&&typeof l!="symbol"&&(na(i)?i.has(l):Object.prototype.propertyIsEnumerable.call(i,l))&&Il(r,c)}}function Il(r,o,i=!1){!r.parent_&&r.immer_.autoFreeze_&&r.canAutoFreeze_&&ru(o,i)}function Zp(r,o){const i=Array.isArray(r),l={type_:i?1:0,scope_:o?o.scope_:Cl(),modified_:!1,finalized_:!1,assigned_:{},parent_:o,base_:r,draft_:null,copy_:null,revoke_:null,isManual_:!1};let c=l,d=nu;i&&(c=[l],d=Yi);const{revoke:f,proxy:h}=Proxy.revocable(c,d);return l.draft_=h,l.revoke_=f,h}var nu={get(r,o){if(o===qe)return r;const i=Et(r);if(!Uc(i,o))return Yp(r,i,o);const l=i[o];return r.finalized_||!gn(l)?l:l===Ec(r.base_,o)?(Pc(r),r.copy_[o]=Xi(l,r)):l},has(r,o){return o in Et(r)},ownKeys(r){return Reflect.ownKeys(Et(r))},set(r,o,i){const l=Pm(Et(r),o);if(l!=null&&l.set)return l.set.call(r.draft_,i),!0;if(!r.modified_){const c=Ec(Et(r),o),d=c==null?void 0:c[qe];if(d&&d.base_===i)return r.copy_[o]=i,r.assigned_[o]=!1,!0;if($p(i,c)&&(i!==void 0||Uc(r.base_,o)))return!0;Pc(r),dn(r)}return r.copy_[o]===i&&(i!==void 0||o in r.copy_)||Number.isNaN(i)&&Number.isNaN(r.copy_[o])||(r.copy_[o]=i,r.assigned_[o]=!0),!0},deleteProperty(r,o){return Ec(r.base_,o)!==void 0||o in r.base_?(r.assigned_[o]=!1,Pc(r),dn(r)):delete r.assigned_[o],r.copy_&&delete r.copy_[o],!0},getOwnPropertyDescriptor(r,o){const i=Et(r),l=Reflect.getOwnPropertyDescriptor(i,o);return l&&{writable:!0,configurable:r.type_!==1||o!=="length",enumerable:l.enumerable,value:i[o]}},defineProperty(){Cr(11)},getPrototypeOf(r){return Yo(r.base_)},setPrototypeOf(){Cr(12)}},Yi={};Qi(nu,(r,o)=>{Yi[r]=function(){return arguments[0]=arguments[0][0],o.apply(this,arguments)}});Yi.deleteProperty=function(r,o){return Yi.set.call(this,r,o,void 0)};Yi.set=function(r,o,i){return nu.set.call(this,r[0],o,i,r[0])};function Ec(r,o){const i=r[qe];return(i?Et(i):r)[o]}function Yp(r,o,i){var c;const l=Pm(o,i);return l?"value"in l?l.value:(c=l.get)==null?void 0:c.call(r.draft_):void 0}function Pm(r,o){if(!(o in r))return;let i=Yo(r);for(;i;){const l=Object.getOwnPropertyDescriptor(i,o);if(l)return l;i=Yo(i)}}function dn(r){r.modified_||(r.modified_=!0,r.parent_&&dn(r.parent_))}function Pc(r){r.copy_||(r.copy_=Hc(r.base_,r.scope_.immer_.useStrictShallowCopy_))}var Xp=class{constructor(r){this.autoFreeze_=!0,this.useStrictShallowCopy_=!1,this.produce=(o,i,l)=>{if(typeof o=="function"&&typeof i!="function"){const d=i;i=o;const f=this;return function(m=d,...v){return f.produce(m,b=>i.call(this,b,...v))}}typeof i!="function"&&Cr(6),l!==void 0&&typeof l!="function"&&Cr(7);let c;if(gn(o)){const d=o0(this),f=Xi(o,void 0);let h=!0;try{c=i(f),h=!1}finally{h?$c(d):Vc(d)}return n0(d,l),i0(c,d)}else if(!o||typeof o!="object"){if(c=i(o),c===void 0&&(c=o),c===wm&&(c=void 0),this.autoFreeze_&&ru(c,!0),l){const d=[],f=[];vo("Patches").generateReplacementPatches_(o,c,d,f),l(d,f)}return c}else Cr(1,o)},this.produceWithPatches=(o,i)=>{if(typeof o=="function")return(f,...h)=>this.produceWithPatches(f,m=>o(m,...h));let l,c;return[this.produce(o,i,(f,h)=>{l=f,c=h}),l,c]},typeof(r==null?void 0:r.autoFreeze)=="boolean"&&this.setAutoFreeze(r.autoFreeze),typeof(r==null?void 0:r.useStrictShallowCopy)=="boolean"&&this.setUseStrictShallowCopy(r.useStrictShallowCopy)}createDraft(r){gn(r)||Cr(8),Xo(r)&&(r=Jp(r));const o=o0(this),i=Xi(r,void 0);return i[qe].isManual_=!0,Vc(o),i}finishDraft(r,o){const i=r&&r[qe];(!i||!i.isManual_)&&Cr(9);const{scope_:l}=i;return n0(l,o),i0(void 0,l)}setAutoFreeze(r){this.autoFreeze_=r}setUseStrictShallowCopy(r){this.useStrictShallowCopy_=r}applyPatches(r,o){let i;for(i=o.length-1;i>=0;i--){const c=o[i];if(c.path.length===0&&c.op==="replace"){r=c.value;break}}i>-1&&(o=o.slice(i+1));const l=vo("Patches").applyPatches_;return Xo(r)?l(r,o):this.produce(r,c=>l(c,o))}};function Xi(r,o){const i=na(r)?vo("MapSet").proxyMap_(r,o):Al(r)?vo("MapSet").proxySet_(r,o):Zp(r,o);return(o?o.scope_:Cl()).drafts_.push(i),i}function Jp(r){return Xo(r)||Cr(10,r),km(r)}function km(r){if(!gn(r)||Ol(r))return r;const o=r[qe];let i;if(o){if(!o.modified_)return o.base_;o.finalized_=!0,i=Hc(r,o.scope_.immer_.useStrictShallowCopy_)}else i=Hc(r,!0);return Qi(i,(l,c)=>{Em(i,l,km(c))}),o&&(o.finalized_=!1),i}function qp(){class r extends Map{constructor(m,v){super(),this[qe]={type_:2,parent_:v,scope_:v?v.scope_:Cl(),modified_:!1,finalized_:!1,copy_:void 0,assigned_:void 0,base_:m,draft_:this,isManual_:!1,revoked_:!1}}get size(){return Et(this[qe]).size}has(m){return Et(this[qe]).has(m)}set(m,v){const b=this[qe];return f(b),(!Et(b).has(m)||Et(b).get(m)!==v)&&(i(b),dn(b),b.assigned_.set(m,!0),b.copy_.set(m,v),b.assigned_.set(m,!0)),this}delete(m){if(!this.has(m))return!1;const v=this[qe];return f(v),i(v),dn(v),v.base_.has(m)?v.assigned_.set(m,!1):v.assigned_.delete(m),v.copy_.delete(m),!0}clear(){const m=this[qe];f(m),Et(m).size&&(i(m),dn(m),m.assigned_=new Map,Qi(m.base_,v=>{m.assigned_.set(v,!1)}),m.copy_.clear())}forEach(m,v){const b=this[qe];Et(b).forEach((y,S,C)=>{m.call(v,this.get(S),S,this)})}get(m){const v=this[qe];f(v);const b=Et(v).get(m);if(v.finalized_||!gn(b)||b!==v.base_.get(m))return b;const y=Xi(b,v);return i(v),v.copy_.set(m,y),y}keys(){return Et(this[qe]).keys()}values(){const m=this.keys();return{[Symbol.iterator]:()=>this.values(),next:()=>{const v=m.next();return v.done?v:{done:!1,value:this.get(v.value)}}}}entries(){const m=this.keys();return{[Symbol.iterator]:()=>this.entries(),next:()=>{const v=m.next();if(v.done)return v;const b=this.get(v.value);return{done:!1,value:[v.value,b]}}}}[Symbol.iterator](){return this.entries()}}function o(h,m){return new r(h,m)}function i(h){h.copy_||(h.assigned_=new Map,h.copy_=new Map(h.base_))}class l extends Set{constructor(m,v){super(),this[qe]={type_:3,parent_:v,scope_:v?v.scope_:Cl(),modified_:!1,finalized_:!1,copy_:void 0,base_:m,draft_:this,drafts_:new Map,revoked_:!1,isManual_:!1}}get size(){return Et(this[qe]).size}has(m){const v=this[qe];return f(v),v.copy_?!!(v.copy_.has(m)||v.drafts_.has(m)&&v.copy_.has(v.drafts_.get(m))):v.base_.has(m)}add(m){const v=this[qe];return f(v),this.has(m)||(d(v),dn(v),v.copy_.add(m)),this}delete(m){if(!this.has(m))return!1;const v=this[qe];return f(v),d(v),dn(v),v.copy_.delete(m)||(v.drafts_.has(m)?v.copy_.delete(v.drafts_.get(m)):!1)}clear(){const m=this[qe];f(m),Et(m).size&&(d(m),dn(m),m.copy_.clear())}values(){const m=this[qe];return f(m),d(m),m.copy_.values()}entries(){const m=this[qe];return f(m),d(m),m.copy_.entries()}keys(){return this.values()}[Symbol.iterator](){return this.values()}forEach(m,v){const b=this.values();let y=b.next();for(;!y.done;)m.call(v,y.value,y.value,this),y=b.next()}}function c(h,m){return new l(h,m)}function d(h){h.copy_||(h.copy_=new Set,h.base_.forEach(m=>{if(gn(m)){const v=Xi(m,h);h.drafts_.set(m,v),h.copy_.add(v)}else h.copy_.add(m)}))}function f(h){h.revoked_&&Cr(3,JSON.stringify(Et(h)))}Vp("MapSet",{proxyMap_:o,proxySet_:c})}var Kp=new Xp;Kp.produce;var w=tu();const g=xm(w),e1=ym({__proto__:null,default:g},[w]);var dl={},kc={exports:{}},er={},Cc={exports:{}},_c={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var l0;function t1(){return l0||(l0=1,(function(r){function o(W,ie){var q=W.length;W.push(ie);e:for(;0<q;){var k=q-1>>>1,j=W[k];if(0<c(j,ie))W[k]=ie,W[q]=j,q=k;else break e}}function i(W){return W.length===0?null:W[0]}function l(W){if(W.length===0)return null;var ie=W[0],q=W.pop();if(q!==ie){W[0]=q;e:for(var k=0,j=W.length,ve=j>>>1;k<ve;){var ye=2*(k+1)-1,we=W[ye],Ce=ye+1,_e=W[Ce];if(0>c(we,q))Ce<j&&0>c(_e,we)?(W[k]=_e,W[Ce]=q,k=Ce):(W[k]=we,W[ye]=q,k=ye);else if(Ce<j&&0>c(_e,q))W[k]=_e,W[Ce]=q,k=Ce;else break e}}return ie}function c(W,ie){var q=W.sortIndex-ie.sortIndex;return q!==0?q:W.id-ie.id}if(typeof performance=="object"&&typeof performance.now=="function"){var d=performance;r.unstable_now=function(){return d.now()}}else{var f=Date,h=f.now();r.unstable_now=function(){return f.now()-h}}var m=[],v=[],b=1,y=null,S=3,C=!1,L=!1,M=!1,z=typeof setTimeout=="function"?setTimeout:null,B=typeof clearTimeout=="function"?clearTimeout:null,R=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function H(W){for(var ie=i(v);ie!==null;){if(ie.callback===null)l(v);else if(ie.startTime<=W)l(v),ie.sortIndex=ie.expirationTime,o(m,ie);else break;ie=i(v)}}function Z(W){if(M=!1,H(W),!L)if(i(m)!==null)L=!0,Ne(X);else{var ie=i(v);ie!==null&&xe(Z,ie.startTime-W)}}function X(W,ie){L=!1,M&&(M=!1,B(D),D=-1),C=!0;var q=S;try{for(H(ie),y=i(m);y!==null&&(!(y.expirationTime>ie)||W&&!re());){var k=y.callback;if(typeof k=="function"){y.callback=null,S=y.priorityLevel;var j=k(y.expirationTime<=ie);ie=r.unstable_now(),typeof j=="function"?y.callback=j:y===i(m)&&l(m),H(ie)}else l(m);y=i(m)}if(y!==null)var ve=!0;else{var ye=i(v);ye!==null&&xe(Z,ye.startTime-ie),ve=!1}return ve}finally{y=null,S=q,C=!1}}var te=!1,I=null,D=-1,U=5,V=-1;function re(){return!(r.unstable_now()-V<U)}function ne(){if(I!==null){var W=r.unstable_now();V=W;var ie=!0;try{ie=I(!0,W)}finally{ie?fe():(te=!1,I=null)}}else te=!1}var fe;if(typeof R=="function")fe=function(){R(ne)};else if(typeof MessageChannel<"u"){var oe=new MessageChannel,Ee=oe.port2;oe.port1.onmessage=ne,fe=function(){Ee.postMessage(null)}}else fe=function(){z(ne,0)};function Ne(W){I=W,te||(te=!0,fe())}function xe(W,ie){D=z(function(){W(r.unstable_now())},ie)}r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(W){W.callback=null},r.unstable_continueExecution=function(){L||C||(L=!0,Ne(X))},r.unstable_forceFrameRate=function(W){0>W||125<W?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):U=0<W?Math.floor(1e3/W):5},r.unstable_getCurrentPriorityLevel=function(){return S},r.unstable_getFirstCallbackNode=function(){return i(m)},r.unstable_next=function(W){switch(S){case 1:case 2:case 3:var ie=3;break;default:ie=S}var q=S;S=ie;try{return W()}finally{S=q}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=function(){},r.unstable_runWithPriority=function(W,ie){switch(W){case 1:case 2:case 3:case 4:case 5:break;default:W=3}var q=S;S=W;try{return ie()}finally{S=q}},r.unstable_scheduleCallback=function(W,ie,q){var k=r.unstable_now();switch(typeof q=="object"&&q!==null?(q=q.delay,q=typeof q=="number"&&0<q?k+q:k):q=k,W){case 1:var j=-1;break;case 2:j=250;break;case 5:j=1073741823;break;case 4:j=1e4;break;default:j=5e3}return j=q+j,W={id:b++,callback:ie,priorityLevel:W,startTime:q,expirationTime:j,sortIndex:-1},q>k?(W.sortIndex=q,o(v,W),i(m)===null&&W===i(v)&&(M?(B(D),D=-1):M=!0,xe(Z,q-k))):(W.sortIndex=j,o(m,W),L||C||(L=!0,Ne(X))),W},r.unstable_shouldYield=re,r.unstable_wrapCallback=function(W){var ie=S;return function(){var q=S;S=ie;try{return W.apply(this,arguments)}finally{S=q}}}})(_c)),_c}var s0;function r1(){return s0||(s0=1,Cc.exports=t1()),Cc.exports}/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var c0;function n1(){if(c0)return er;c0=1;var r=tu(),o=r1();function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var l=new Set,c={};function d(e,t){f(e,t),f(e+"Capture",t)}function f(e,t){for(c[e]=t,e=0;e<t.length;e++)l.add(t[e])}var h=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),m=Object.prototype.hasOwnProperty,v=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,b={},y={};function S(e){return m.call(y,e)?!0:m.call(b,e)?!1:v.test(e)?y[e]=!0:(b[e]=!0,!1)}function C(e,t,n,a){if(n!==null&&n.type===0)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return a?!1:n!==null?!n.acceptsBooleans:(e=e.toLowerCase().slice(0,5),e!=="data-"&&e!=="aria-");default:return!1}}function L(e,t,n,a){if(t===null||typeof t>"u"||C(e,t,n,a))return!0;if(a)return!1;if(n!==null)switch(n.type){case 3:return!t;case 4:return t===!1;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}function M(e,t,n,a,s,u,p){this.acceptsBooleans=t===2||t===3||t===4,this.attributeName=a,this.attributeNamespace=s,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=u,this.removeEmptyString=p}var z={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){z[e]=new M(e,0,!1,e,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];z[t]=new M(t,1,!1,e[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){z[e]=new M(e,2,!1,e.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){z[e]=new M(e,2,!1,e,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){z[e]=new M(e,3,!1,e.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(e){z[e]=new M(e,3,!0,e,null,!1,!1)}),["capture","download"].forEach(function(e){z[e]=new M(e,4,!1,e,null,!1,!1)}),["cols","rows","size","span"].forEach(function(e){z[e]=new M(e,6,!1,e,null,!1,!1)}),["rowSpan","start"].forEach(function(e){z[e]=new M(e,5,!1,e.toLowerCase(),null,!1,!1)});var B=/[\-:]([a-z])/g;function R(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(B,R);z[t]=new M(t,1,!1,e,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(B,R);z[t]=new M(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(B,R);z[t]=new M(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(e){z[e]=new M(e,1,!1,e.toLowerCase(),null,!1,!1)}),z.xlinkHref=new M("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(e){z[e]=new M(e,1,!1,e.toLowerCase(),null,!0,!0)});function H(e,t,n,a){var s=z.hasOwnProperty(t)?z[t]:null;(s!==null?s.type!==0:a||!(2<t.length)||t[0]!=="o"&&t[0]!=="O"||t[1]!=="n"&&t[1]!=="N")&&(L(t,n,s,a)&&(n=null),a||s===null?S(t)&&(n===null?e.removeAttribute(t):e.setAttribute(t,""+n)):s.mustUseProperty?e[s.propertyName]=n===null?s.type===3?!1:"":n:(t=s.attributeName,a=s.attributeNamespace,n===null?e.removeAttribute(t):(s=s.type,n=s===3||s===4&&n===!0?"":""+n,a?e.setAttributeNS(a,t,n):e.setAttribute(t,n))))}var Z=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,X=Symbol.for("react.element"),te=Symbol.for("react.portal"),I=Symbol.for("react.fragment"),D=Symbol.for("react.strict_mode"),U=Symbol.for("react.profiler"),V=Symbol.for("react.provider"),re=Symbol.for("react.context"),ne=Symbol.for("react.forward_ref"),fe=Symbol.for("react.suspense"),oe=Symbol.for("react.suspense_list"),Ee=Symbol.for("react.memo"),Ne=Symbol.for("react.lazy"),xe=Symbol.for("react.offscreen"),W=Symbol.iterator;function ie(e){return e===null||typeof e!="object"?null:(e=W&&e[W]||e["@@iterator"],typeof e=="function"?e:null)}var q=Object.assign,k;function j(e){if(k===void 0)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);k=t&&t[1]||""}return`
`+k+e}var ve=!1;function ye(e,t){if(!e||ve)return"";ve=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(t,[])}catch(A){var a=A}Reflect.construct(e,[],t)}else{try{t.call()}catch(A){a=A}e.call(t.prototype)}else{try{throw Error()}catch(A){a=A}e()}}catch(A){if(A&&a&&typeof A.stack=="string"){for(var s=A.stack.split(`
`),u=a.stack.split(`
`),p=s.length-1,x=u.length-1;1<=p&&0<=x&&s[p]!==u[x];)x--;for(;1<=p&&0<=x;p--,x--)if(s[p]!==u[x]){if(p!==1||x!==1)do if(p--,x--,0>x||s[p]!==u[x]){var P=`
`+s[p].replace(" at new "," at ");return e.displayName&&P.includes("<anonymous>")&&(P=P.replace("<anonymous>",e.displayName)),P}while(1<=p&&0<=x);break}}}finally{ve=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?j(e):""}function we(e){switch(e.tag){case 5:return j(e.type);case 16:return j("Lazy");case 13:return j("Suspense");case 19:return j("SuspenseList");case 0:case 2:case 15:return e=ye(e.type,!1),e;case 11:return e=ye(e.type.render,!1),e;case 1:return e=ye(e.type,!0),e;default:return""}}function Ce(e){if(e==null)return null;if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e;switch(e){case I:return"Fragment";case te:return"Portal";case U:return"Profiler";case D:return"StrictMode";case fe:return"Suspense";case oe:return"SuspenseList"}if(typeof e=="object")switch(e.$$typeof){case re:return(e.displayName||"Context")+".Consumer";case V:return(e._context.displayName||"Context")+".Provider";case ne:var t=e.render;return e=e.displayName,e||(e=t.displayName||t.name||"",e=e!==""?"ForwardRef("+e+")":"ForwardRef"),e;case Ee:return t=e.displayName||null,t!==null?t:Ce(e.type)||"Memo";case Ne:t=e._payload,e=e._init;try{return Ce(e(t))}catch{}}return null}function _e(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=t.render,e=e.displayName||e.name||"",t.displayName||(e!==""?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Ce(t);case 8:return t===D?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof t=="function")return t.displayName||t.name||null;if(typeof t=="string")return t}return null}function Fe(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":return e;case"object":return e;default:return""}}function Ae(e){var t=e.type;return(e=e.nodeName)&&e.toLowerCase()==="input"&&(t==="checkbox"||t==="radio")}function Xe(e){var t=Ae(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),a=""+e[t];if(!e.hasOwnProperty(t)&&typeof n<"u"&&typeof n.get=="function"&&typeof n.set=="function"){var s=n.get,u=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return s.call(this)},set:function(p){a=""+p,u.call(this,p)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return a},setValue:function(p){a=""+p},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}function ft(e){e._valueTracker||(e._valueTracker=Xe(e))}function Ze(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),a="";return e&&(a=Ae(e)?e.checked?"true":"false":e.value),e=a,e!==n?(t.setValue(e),!0):!1}function Pt(e){if(e=e||(typeof document<"u"?document:void 0),typeof e>"u")return null;try{return e.activeElement||e.body}catch{return e.body}}function Ir(e,t){var n=t.checked;return q({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:n??e._wrapperState.initialChecked})}function $n(e,t){var n=t.defaultValue==null?"":t.defaultValue,a=t.checked!=null?t.checked:t.defaultChecked;n=Fe(t.value!=null?t.value:n),e._wrapperState={initialChecked:a,initialValue:n,controlled:t.type==="checkbox"||t.type==="radio"?t.checked!=null:t.value!=null}}function Vt(e,t){t=t.checked,t!=null&&H(e,"checked",t,!1)}function Vn(e,t){Vt(e,t);var n=Fe(t.value),a=t.type;if(n!=null)a==="number"?(n===0&&e.value===""||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if(a==="submit"||a==="reset"){e.removeAttribute("value");return}t.hasOwnProperty("value")?jr(e,t.type,n):t.hasOwnProperty("defaultValue")&&jr(e,t.type,Fe(t.defaultValue)),t.checked==null&&t.defaultChecked!=null&&(e.defaultChecked=!!t.defaultChecked)}function hn(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var a=t.type;if(!(a!=="submit"&&a!=="reset"||t.value!==void 0&&t.value!==null))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}n=e.name,n!==""&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,n!==""&&(e.name=n)}function jr(e,t,n){(t!=="number"||Pt(e.ownerDocument)!==e)&&(n==null?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var Yr=Array.isArray;function Gt(e,t,n,a){if(e=e.options,t){t={};for(var s=0;s<n.length;s++)t["$"+n[s]]=!0;for(n=0;n<e.length;n++)s=t.hasOwnProperty("$"+e[n].value),e[n].selected!==s&&(e[n].selected=s),s&&a&&(e[n].defaultSelected=!0)}else{for(n=""+Fe(n),t=null,s=0;s<e.length;s++){if(e[s].value===n){e[s].selected=!0,a&&(e[s].defaultSelected=!0);return}t!==null||e[s].disabled||(t=e[s])}t!==null&&(t.selected=!0)}}function Xr(e,t){if(t.dangerouslySetInnerHTML!=null)throw Error(i(91));return q({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function xo(e,t){var n=t.value;if(n==null){if(n=t.children,t=t.defaultValue,n!=null){if(t!=null)throw Error(i(92));if(Yr(n)){if(1<n.length)throw Error(i(93));n=n[0]}t=n}t==null&&(t=""),n=t}e._wrapperState={initialValue:Fe(n)}}function dr(e,t){var n=Fe(t.value),a=Fe(t.defaultValue);n!=null&&(n=""+n,n!==e.value&&(e.value=n),t.defaultValue==null&&e.defaultValue!==n&&(e.defaultValue=n)),a!=null&&(e.defaultValue=""+a)}function Ve(e){var t=e.textContent;t===e._wrapperState.initialValue&&t!==""&&t!==null&&(e.value=t)}function pn(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function kt(e,t){return e==null||e==="http://www.w3.org/1999/xhtml"?pn(t):e==="http://www.w3.org/2000/svg"&&t==="foreignObject"?"http://www.w3.org/1999/xhtml":e}var Mt,Nt=(function(e){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(t,n,a,s){MSApp.execUnsafeLocalFunction(function(){return e(t,n,a,s)})}:e})(function(e,t){if(e.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in e)e.innerHTML=t;else{for(Mt=Mt||document.createElement("div"),Mt.innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Mt.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}});function fr(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&n.nodeType===3){n.nodeValue=t;return}}e.textContent=t}var Qt={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},vn=["Webkit","ms","Moz","O"];Object.keys(Qt).forEach(function(e){vn.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Qt[t]=Qt[e]})});function Bt(e,t,n){return t==null||typeof t=="boolean"||t===""?"":n||typeof t!="number"||t===0||Qt.hasOwnProperty(e)&&Qt[e]?(""+t).trim():t+"px"}function Jr(e,t){e=e.style;for(var n in t)if(t.hasOwnProperty(n)){var a=n.indexOf("--")===0,s=Bt(n,t[n],a);n==="float"&&(n="cssFloat"),a?e.setProperty(n,s):e[n]=s}}var Rr=q({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function mr(e,t){if(t){if(Rr[e]&&(t.children!=null||t.dangerouslySetInnerHTML!=null))throw Error(i(137,e));if(t.dangerouslySetInnerHTML!=null){if(t.children!=null)throw Error(i(60));if(typeof t.dangerouslySetInnerHTML!="object"||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(t.style!=null&&typeof t.style!="object")throw Error(i(62))}}function bn(e,t){if(e.indexOf("-")===-1)return typeof t.is=="string";switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var qr=null;function Tr(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),e.nodeType===3?e.parentNode:e}var yn=null,gr=null,Dt=null;function wo(e){if(e=bi(e)){if(typeof yn!="function")throw Error(i(280));var t=e.stateNode;t&&(t=ka(t),yn(e.stateNode,e.type,t))}}function Gn(e){gr?Dt?Dt.push(e):Dt=[e]:gr=e}function Qn(){if(gr){var e=gr,t=Dt;if(Dt=gr=null,wo(e),t)for(e=0;e<t.length;e++)wo(t[e])}}function Zn(e,t){return e(t)}function Ur(){}var Kr=!1;function So(e,t,n){if(Kr)return e(t,n);Kr=!0;try{return Zn(e,t,n)}finally{Kr=!1,(gr!==null||Dt!==null)&&(Ur(),Qn())}}function rr(e,t){var n=e.stateNode;if(n===null)return null;var a=ka(n);if(a===null)return null;n=a[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(e=e.type,a=!(e==="button"||e==="input"||e==="select"||e==="textarea")),e=!a;break e;default:e=!1}if(e)return null;if(n&&typeof n!="function")throw Error(i(231,t,typeof n));return n}var E=!1;if(h)try{var T={};Object.defineProperty(T,"passive",{get:function(){E=!0}}),window.addEventListener("test",T,T),window.removeEventListener("test",T,T)}catch{E=!1}function O(e,t,n,a,s,u,p,x,P){var A=Array.prototype.slice.call(arguments,3);try{t.apply(n,A)}catch(Q){this.onError(Q)}}var $=!1,K=null,pe=!1,Se=null,ae={onError:function(e){$=!0,K=e}};function me(e,t,n,a,s,u,p,x,P){$=!1,K=null,O.apply(ae,arguments)}function ce(e,t,n,a,s,u,p,x,P){if(me.apply(this,arguments),$){if($){var A=K;$=!1,K=null}else throw Error(i(198));pe||(pe=!0,Se=A)}}function ue(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do t=e,(t.flags&4098)!==0&&(n=t.return),e=t.return;while(e)}return t.tag===3?n:null}function Re(e){if(e.tag===13){var t=e.memoizedState;if(t===null&&(e=e.alternate,e!==null&&(t=e.memoizedState)),t!==null)return t.dehydrated}return null}function Oe(e){if(ue(e)!==e)throw Error(i(188))}function ut(e){var t=e.alternate;if(!t){if(t=ue(e),t===null)throw Error(i(188));return t!==e?null:e}for(var n=e,a=t;;){var s=n.return;if(s===null)break;var u=s.alternate;if(u===null){if(a=s.return,a!==null){n=a;continue}break}if(s.child===u.child){for(u=s.child;u;){if(u===n)return Oe(s),e;if(u===a)return Oe(s),t;u=u.sibling}throw Error(i(188))}if(n.return!==a.return)n=s,a=u;else{for(var p=!1,x=s.child;x;){if(x===n){p=!0,n=s,a=u;break}if(x===a){p=!0,a=s,n=u;break}x=x.sibling}if(!p){for(x=u.child;x;){if(x===n){p=!0,n=u,a=s;break}if(x===a){p=!0,a=u,n=s;break}x=x.sibling}if(!p)throw Error(i(189))}}if(n.alternate!==a)throw Error(i(190))}if(n.tag!==3)throw Error(i(188));return n.stateNode.current===n?e:t}function Ye(e){return e=ut(e),e!==null?Ue(e):null}function Ue(e){if(e.tag===5||e.tag===6)return e;for(e=e.child;e!==null;){var t=Ue(e);if(t!==null)return t;e=e.sibling}return null}var tt=o.unstable_scheduleCallback,Mr=o.unstable_cancelCallback,hr=o.unstable_shouldYield,nr=o.unstable_requestPaint,He=o.unstable_now,Yn=o.unstable_getCurrentPriorityLevel,pr=o.unstable_ImmediatePriority,Zt=o.unstable_UserBlockingPriority,vr=o.unstable_NormalPriority,en=o.unstable_LowPriority,De=o.unstable_IdlePriority,Je=null,ee=null;function Me(e){if(ee&&typeof ee.onCommitFiberRoot=="function")try{ee.onCommitFiberRoot(Je,e,void 0,(e.current.flags&128)===128)}catch{}}var Ie=Math.clz32?Math.clz32:tn,it=Math.log,jt=Math.LN2;function tn(e){return e>>>=0,e===0?32:31-(it(e)/jt|0)|0}var Eo=64,sa=4194304;function ei(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return e&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function ca(e,t){var n=e.pendingLanes;if(n===0)return 0;var a=0,s=e.suspendedLanes,u=e.pingedLanes,p=n&268435455;if(p!==0){var x=p&~s;x!==0?a=ei(x):(u&=p,u!==0&&(a=ei(u)))}else p=n&~s,p!==0?a=ei(p):u!==0&&(a=ei(u));if(a===0)return 0;if(t!==0&&t!==a&&(t&s)===0&&(s=a&-a,u=t&-t,s>=u||s===16&&(u&4194240)!==0))return t;if((a&4)!==0&&(a|=n&16),t=e.entangledLanes,t!==0)for(e=e.entanglements,t&=a;0<t;)n=31-Ie(t),s=1<<n,a|=e[n],t&=~s;return a}function nh(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function oh(e,t){for(var n=e.suspendedLanes,a=e.pingedLanes,s=e.expirationTimes,u=e.pendingLanes;0<u;){var p=31-Ie(u),x=1<<p,P=s[p];P===-1?((x&n)===0||(x&a)!==0)&&(s[p]=nh(x,t)):P<=t&&(e.expiredLanes|=x),u&=~x}}function Hl(e){return e=e.pendingLanes&-1073741825,e!==0?e:e&1073741824?1073741824:0}function Iu(){var e=Eo;return Eo<<=1,(Eo&4194240)===0&&(Eo=64),e}function Wl(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function ti(e,t,n){e.pendingLanes|=t,t!==536870912&&(e.suspendedLanes=0,e.pingedLanes=0),e=e.eventTimes,t=31-Ie(t),e[t]=n}function ih(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var a=e.eventTimes;for(e=e.expirationTimes;0<n;){var s=31-Ie(n),u=1<<s;t[s]=0,a[s]=-1,e[s]=-1,n&=~u}}function $l(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var a=31-Ie(n),s=1<<a;s&t|e[a]&t&&(e[a]|=t),n&=~s}}var Ke=0;function Ru(e){return e&=-e,1<e?4<e?(e&268435455)!==0?16:536870912:4:1}var Tu,Vl,Mu,Nu,Lu,Gl=!1,ua=[],xn=null,wn=null,Sn=null,ri=new Map,ni=new Map,En=[],ah="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Fu(e,t){switch(e){case"focusin":case"focusout":xn=null;break;case"dragenter":case"dragleave":wn=null;break;case"mouseover":case"mouseout":Sn=null;break;case"pointerover":case"pointerout":ri.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ni.delete(t.pointerId)}}function oi(e,t,n,a,s,u){return e===null||e.nativeEvent!==u?(e={blockedOn:t,domEventName:n,eventSystemFlags:a,nativeEvent:u,targetContainers:[s]},t!==null&&(t=bi(t),t!==null&&Vl(t)),e):(e.eventSystemFlags|=a,t=e.targetContainers,s!==null&&t.indexOf(s)===-1&&t.push(s),e)}function lh(e,t,n,a,s){switch(t){case"focusin":return xn=oi(xn,e,t,n,a,s),!0;case"dragenter":return wn=oi(wn,e,t,n,a,s),!0;case"mouseover":return Sn=oi(Sn,e,t,n,a,s),!0;case"pointerover":var u=s.pointerId;return ri.set(u,oi(ri.get(u)||null,e,t,n,a,s)),!0;case"gotpointercapture":return u=s.pointerId,ni.set(u,oi(ni.get(u)||null,e,t,n,a,s)),!0}return!1}function zu(e){var t=Xn(e.target);if(t!==null){var n=ue(t);if(n!==null){if(t=n.tag,t===13){if(t=Re(n),t!==null){e.blockedOn=t,Lu(e.priority,function(){Mu(n)});return}}else if(t===3&&n.stateNode.current.memoizedState.isDehydrated){e.blockedOn=n.tag===3?n.stateNode.containerInfo:null;return}}}e.blockedOn=null}function da(e){if(e.blockedOn!==null)return!1;for(var t=e.targetContainers;0<t.length;){var n=Zl(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(n===null){n=e.nativeEvent;var a=new n.constructor(n.type,n);qr=a,n.target.dispatchEvent(a),qr=null}else return t=bi(n),t!==null&&Vl(t),e.blockedOn=n,!1;t.shift()}return!0}function Au(e,t,n){da(e)&&n.delete(t)}function sh(){Gl=!1,xn!==null&&da(xn)&&(xn=null),wn!==null&&da(wn)&&(wn=null),Sn!==null&&da(Sn)&&(Sn=null),ri.forEach(Au),ni.forEach(Au)}function ii(e,t){e.blockedOn===t&&(e.blockedOn=null,Gl||(Gl=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,sh)))}function ai(e){function t(s){return ii(s,e)}if(0<ua.length){ii(ua[0],e);for(var n=1;n<ua.length;n++){var a=ua[n];a.blockedOn===e&&(a.blockedOn=null)}}for(xn!==null&&ii(xn,e),wn!==null&&ii(wn,e),Sn!==null&&ii(Sn,e),ri.forEach(t),ni.forEach(t),n=0;n<En.length;n++)a=En[n],a.blockedOn===e&&(a.blockedOn=null);for(;0<En.length&&(n=En[0],n.blockedOn===null);)zu(n),n.blockedOn===null&&En.shift()}var Po=Z.ReactCurrentBatchConfig,fa=!0;function ch(e,t,n,a){var s=Ke,u=Po.transition;Po.transition=null;try{Ke=1,Ql(e,t,n,a)}finally{Ke=s,Po.transition=u}}function uh(e,t,n,a){var s=Ke,u=Po.transition;Po.transition=null;try{Ke=4,Ql(e,t,n,a)}finally{Ke=s,Po.transition=u}}function Ql(e,t,n,a){if(fa){var s=Zl(e,t,n,a);if(s===null)ds(e,t,a,ma,n),Fu(e,a);else if(lh(s,e,t,n,a))a.stopPropagation();else if(Fu(e,a),t&4&&-1<ah.indexOf(e)){for(;s!==null;){var u=bi(s);if(u!==null&&Tu(u),u=Zl(e,t,n,a),u===null&&ds(e,t,a,ma,n),u===s)break;s=u}s!==null&&a.stopPropagation()}else ds(e,t,a,null,n)}}var ma=null;function Zl(e,t,n,a){if(ma=null,e=Tr(a),e=Xn(e),e!==null)if(t=ue(e),t===null)e=null;else if(n=t.tag,n===13){if(e=Re(t),e!==null)return e;e=null}else if(n===3){if(t.stateNode.current.memoizedState.isDehydrated)return t.tag===3?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return ma=e,null}function Ou(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Yn()){case pr:return 1;case Zt:return 4;case vr:case en:return 16;case De:return 536870912;default:return 16}default:return 16}}var Pn=null,Yl=null,ga=null;function Bu(){if(ga)return ga;var e,t=Yl,n=t.length,a,s="value"in Pn?Pn.value:Pn.textContent,u=s.length;for(e=0;e<n&&t[e]===s[e];e++);var p=n-e;for(a=1;a<=p&&t[n-a]===s[u-a];a++);return ga=s.slice(e,1<a?1-a:void 0)}function ha(e){var t=e.keyCode;return"charCode"in e?(e=e.charCode,e===0&&t===13&&(e=13)):e=t,e===10&&(e=13),32<=e||e===13?e:0}function pa(){return!0}function Du(){return!1}function or(e){function t(n,a,s,u,p){this._reactName=n,this._targetInst=s,this.type=a,this.nativeEvent=u,this.target=p,this.currentTarget=null;for(var x in e)e.hasOwnProperty(x)&&(n=e[x],this[x]=n?n(u):u[x]);return this.isDefaultPrevented=(u.defaultPrevented!=null?u.defaultPrevented:u.returnValue===!1)?pa:Du,this.isPropagationStopped=Du,this}return q(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var n=this.nativeEvent;n&&(n.preventDefault?n.preventDefault():typeof n.returnValue!="unknown"&&(n.returnValue=!1),this.isDefaultPrevented=pa)},stopPropagation:function(){var n=this.nativeEvent;n&&(n.stopPropagation?n.stopPropagation():typeof n.cancelBubble!="unknown"&&(n.cancelBubble=!0),this.isPropagationStopped=pa)},persist:function(){},isPersistent:pa}),t}var ko={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},Xl=or(ko),li=q({},ko,{view:0,detail:0}),dh=or(li),Jl,ql,si,va=q({},li,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:es,button:0,buttons:0,relatedTarget:function(e){return e.relatedTarget===void 0?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==si&&(si&&e.type==="mousemove"?(Jl=e.screenX-si.screenX,ql=e.screenY-si.screenY):ql=Jl=0,si=e),Jl)},movementY:function(e){return"movementY"in e?e.movementY:ql}}),ju=or(va),fh=q({},va,{dataTransfer:0}),mh=or(fh),gh=q({},li,{relatedTarget:0}),Kl=or(gh),hh=q({},ko,{animationName:0,elapsedTime:0,pseudoElement:0}),ph=or(hh),vh=q({},ko,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),bh=or(vh),yh=q({},ko,{data:0}),Uu=or(yh),xh={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},wh={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sh={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Eh(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):(e=Sh[e])?!!t[e]:!1}function es(){return Eh}var Ph=q({},li,{key:function(e){if(e.key){var t=xh[e.key]||e.key;if(t!=="Unidentified")return t}return e.type==="keypress"?(e=ha(e),e===13?"Enter":String.fromCharCode(e)):e.type==="keydown"||e.type==="keyup"?wh[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:es,charCode:function(e){return e.type==="keypress"?ha(e):0},keyCode:function(e){return e.type==="keydown"||e.type==="keyup"?e.keyCode:0},which:function(e){return e.type==="keypress"?ha(e):e.type==="keydown"||e.type==="keyup"?e.keyCode:0}}),kh=or(Ph),Ch=q({},va,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Hu=or(Ch),_h=q({},li,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:es}),Ih=or(_h),Rh=q({},ko,{propertyName:0,elapsedTime:0,pseudoElement:0}),Th=or(Rh),Mh=q({},va,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Nh=or(Mh),Lh=[9,13,27,32],ts=h&&"CompositionEvent"in window,ci=null;h&&"documentMode"in document&&(ci=document.documentMode);var Fh=h&&"TextEvent"in window&&!ci,Wu=h&&(!ts||ci&&8<ci&&11>=ci),$u=" ",Vu=!1;function Gu(e,t){switch(e){case"keyup":return Lh.indexOf(t.keyCode)!==-1;case"keydown":return t.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Qu(e){return e=e.detail,typeof e=="object"&&"data"in e?e.data:null}var Co=!1;function zh(e,t){switch(e){case"compositionend":return Qu(t);case"keypress":return t.which!==32?null:(Vu=!0,$u);case"textInput":return e=t.data,e===$u&&Vu?null:e;default:return null}}function Ah(e,t){if(Co)return e==="compositionend"||!ts&&Gu(e,t)?(e=Bu(),ga=Yl=Pn=null,Co=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Wu&&t.locale!=="ko"?null:t.data;default:return null}}var Oh={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Zu(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t==="input"?!!Oh[e.type]:t==="textarea"}function Yu(e,t,n,a){Gn(a),t=Sa(t,"onChange"),0<t.length&&(n=new Xl("onChange","change",null,n,a),e.push({event:n,listeners:t}))}var ui=null,di=null;function Bh(e){md(e,0)}function ba(e){var t=Mo(e);if(Ze(t))return e}function Dh(e,t){if(e==="change")return t}var Xu=!1;if(h){var rs;if(h){var ns="oninput"in document;if(!ns){var Ju=document.createElement("div");Ju.setAttribute("oninput","return;"),ns=typeof Ju.oninput=="function"}rs=ns}else rs=!1;Xu=rs&&(!document.documentMode||9<document.documentMode)}function qu(){ui&&(ui.detachEvent("onpropertychange",Ku),di=ui=null)}function Ku(e){if(e.propertyName==="value"&&ba(di)){var t=[];Yu(t,di,e,Tr(e)),So(Bh,t)}}function jh(e,t,n){e==="focusin"?(qu(),ui=t,di=n,ui.attachEvent("onpropertychange",Ku)):e==="focusout"&&qu()}function Uh(e){if(e==="selectionchange"||e==="keyup"||e==="keydown")return ba(di)}function Hh(e,t){if(e==="click")return ba(t)}function Wh(e,t){if(e==="input"||e==="change")return ba(t)}function $h(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}var Nr=typeof Object.is=="function"?Object.is:$h;function fi(e,t){if(Nr(e,t))return!0;if(typeof e!="object"||e===null||typeof t!="object"||t===null)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(a=0;a<n.length;a++){var s=n[a];if(!m.call(t,s)||!Nr(e[s],t[s]))return!1}return!0}function ed(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function td(e,t){var n=ed(e);e=0;for(var a;n;){if(n.nodeType===3){if(a=e+n.textContent.length,e<=t&&a>=t)return{node:n,offset:t-e};e=a}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=ed(n)}}function rd(e,t){return e&&t?e===t?!0:e&&e.nodeType===3?!1:t&&t.nodeType===3?rd(e,t.parentNode):"contains"in e?e.contains(t):e.compareDocumentPosition?!!(e.compareDocumentPosition(t)&16):!1:!1}function nd(){for(var e=window,t=Pt();t instanceof e.HTMLIFrameElement;){try{var n=typeof t.contentWindow.location.href=="string"}catch{n=!1}if(n)e=t.contentWindow;else break;t=Pt(e.document)}return t}function os(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&(t==="input"&&(e.type==="text"||e.type==="search"||e.type==="tel"||e.type==="url"||e.type==="password")||t==="textarea"||e.contentEditable==="true")}function Vh(e){var t=nd(),n=e.focusedElem,a=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&rd(n.ownerDocument.documentElement,n)){if(a!==null&&os(n)){if(t=a.start,e=a.end,e===void 0&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if(e=(t=n.ownerDocument||document)&&t.defaultView||window,e.getSelection){e=e.getSelection();var s=n.textContent.length,u=Math.min(a.start,s);a=a.end===void 0?u:Math.min(a.end,s),!e.extend&&u>a&&(s=a,a=u,u=s),s=td(n,u);var p=td(n,a);s&&p&&(e.rangeCount!==1||e.anchorNode!==s.node||e.anchorOffset!==s.offset||e.focusNode!==p.node||e.focusOffset!==p.offset)&&(t=t.createRange(),t.setStart(s.node,s.offset),e.removeAllRanges(),u>a?(e.addRange(t),e.extend(p.node,p.offset)):(t.setEnd(p.node,p.offset),e.addRange(t)))}}for(t=[],e=n;e=e.parentNode;)e.nodeType===1&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for(typeof n.focus=="function"&&n.focus(),n=0;n<t.length;n++)e=t[n],e.element.scrollLeft=e.left,e.element.scrollTop=e.top}}var Gh=h&&"documentMode"in document&&11>=document.documentMode,_o=null,is=null,mi=null,as=!1;function od(e,t,n){var a=n.window===n?n.document:n.nodeType===9?n:n.ownerDocument;as||_o==null||_o!==Pt(a)||(a=_o,"selectionStart"in a&&os(a)?a={start:a.selectionStart,end:a.selectionEnd}:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection(),a={anchorNode:a.anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset}),mi&&fi(mi,a)||(mi=a,a=Sa(is,"onSelect"),0<a.length&&(t=new Xl("onSelect","select",null,t,n),e.push({event:t,listeners:a}),t.target=_o)))}function ya(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Io={animationend:ya("Animation","AnimationEnd"),animationiteration:ya("Animation","AnimationIteration"),animationstart:ya("Animation","AnimationStart"),transitionend:ya("Transition","TransitionEnd")},ls={},id={};h&&(id=document.createElement("div").style,"AnimationEvent"in window||(delete Io.animationend.animation,delete Io.animationiteration.animation,delete Io.animationstart.animation),"TransitionEvent"in window||delete Io.transitionend.transition);function xa(e){if(ls[e])return ls[e];if(!Io[e])return e;var t=Io[e],n;for(n in t)if(t.hasOwnProperty(n)&&n in id)return ls[e]=t[n];return e}var ad=xa("animationend"),ld=xa("animationiteration"),sd=xa("animationstart"),cd=xa("transitionend"),ud=new Map,dd="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function kn(e,t){ud.set(e,t),d(t,[e])}for(var ss=0;ss<dd.length;ss++){var cs=dd[ss],Qh=cs.toLowerCase(),Zh=cs[0].toUpperCase()+cs.slice(1);kn(Qh,"on"+Zh)}kn(ad,"onAnimationEnd"),kn(ld,"onAnimationIteration"),kn(sd,"onAnimationStart"),kn("dblclick","onDoubleClick"),kn("focusin","onFocus"),kn("focusout","onBlur"),kn(cd,"onTransitionEnd"),f("onMouseEnter",["mouseout","mouseover"]),f("onMouseLeave",["mouseout","mouseover"]),f("onPointerEnter",["pointerout","pointerover"]),f("onPointerLeave",["pointerout","pointerover"]),d("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),d("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),d("onBeforeInput",["compositionend","keypress","textInput","paste"]),d("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),d("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),d("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var gi="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Yh=new Set("cancel close invalid load scroll toggle".split(" ").concat(gi));function fd(e,t,n){var a=e.type||"unknown-event";e.currentTarget=n,ce(a,t,void 0,e),e.currentTarget=null}function md(e,t){t=(t&4)!==0;for(var n=0;n<e.length;n++){var a=e[n],s=a.event;a=a.listeners;e:{var u=void 0;if(t)for(var p=a.length-1;0<=p;p--){var x=a[p],P=x.instance,A=x.currentTarget;if(x=x.listener,P!==u&&s.isPropagationStopped())break e;fd(s,x,A),u=P}else for(p=0;p<a.length;p++){if(x=a[p],P=x.instance,A=x.currentTarget,x=x.listener,P!==u&&s.isPropagationStopped())break e;fd(s,x,A),u=P}}}if(pe)throw e=Se,pe=!1,Se=null,e}function nt(e,t){var n=t[vs];n===void 0&&(n=t[vs]=new Set);var a=e+"__bubble";n.has(a)||(gd(t,e,2,!1),n.add(a))}function us(e,t,n){var a=0;t&&(a|=4),gd(n,e,a,t)}var wa="_reactListening"+Math.random().toString(36).slice(2);function hi(e){if(!e[wa]){e[wa]=!0,l.forEach(function(n){n!=="selectionchange"&&(Yh.has(n)||us(n,!1,e),us(n,!0,e))});var t=e.nodeType===9?e:e.ownerDocument;t===null||t[wa]||(t[wa]=!0,us("selectionchange",!1,t))}}function gd(e,t,n,a){switch(Ou(t)){case 1:var s=ch;break;case 4:s=uh;break;default:s=Ql}n=s.bind(null,t,n,e),s=void 0,!E||t!=="touchstart"&&t!=="touchmove"&&t!=="wheel"||(s=!0),a?s!==void 0?e.addEventListener(t,n,{capture:!0,passive:s}):e.addEventListener(t,n,!0):s!==void 0?e.addEventListener(t,n,{passive:s}):e.addEventListener(t,n,!1)}function ds(e,t,n,a,s){var u=a;if((t&1)===0&&(t&2)===0&&a!==null)e:for(;;){if(a===null)return;var p=a.tag;if(p===3||p===4){var x=a.stateNode.containerInfo;if(x===s||x.nodeType===8&&x.parentNode===s)break;if(p===4)for(p=a.return;p!==null;){var P=p.tag;if((P===3||P===4)&&(P=p.stateNode.containerInfo,P===s||P.nodeType===8&&P.parentNode===s))return;p=p.return}for(;x!==null;){if(p=Xn(x),p===null)return;if(P=p.tag,P===5||P===6){a=u=p;continue e}x=x.parentNode}}a=a.return}So(function(){var A=u,Q=Tr(n),Y=[];e:{var G=ud.get(e);if(G!==void 0){var le=Xl,ge=e;switch(e){case"keypress":if(ha(n)===0)break e;case"keydown":case"keyup":le=kh;break;case"focusin":ge="focus",le=Kl;break;case"focusout":ge="blur",le=Kl;break;case"beforeblur":case"afterblur":le=Kl;break;case"click":if(n.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":le=ju;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":le=mh;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":le=Ih;break;case ad:case ld:case sd:le=ph;break;case cd:le=Th;break;case"scroll":le=dh;break;case"wheel":le=Nh;break;case"copy":case"cut":case"paste":le=bh;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":le=Hu}var he=(t&4)!==0,mt=!he&&e==="scroll",N=he?G!==null?G+"Capture":null:G;he=[];for(var _=A,F;_!==null;){F=_;var J=F.stateNode;if(F.tag===5&&J!==null&&(F=J,N!==null&&(J=rr(_,N),J!=null&&he.push(pi(_,J,F)))),mt)break;_=_.return}0<he.length&&(G=new le(G,ge,null,n,Q),Y.push({event:G,listeners:he}))}}if((t&7)===0){e:{if(G=e==="mouseover"||e==="pointerover",le=e==="mouseout"||e==="pointerout",G&&n!==qr&&(ge=n.relatedTarget||n.fromElement)&&(Xn(ge)||ge[rn]))break e;if((le||G)&&(G=Q.window===Q?Q:(G=Q.ownerDocument)?G.defaultView||G.parentWindow:window,le?(ge=n.relatedTarget||n.toElement,le=A,ge=ge?Xn(ge):null,ge!==null&&(mt=ue(ge),ge!==mt||ge.tag!==5&&ge.tag!==6)&&(ge=null)):(le=null,ge=A),le!==ge)){if(he=ju,J="onMouseLeave",N="onMouseEnter",_="mouse",(e==="pointerout"||e==="pointerover")&&(he=Hu,J="onPointerLeave",N="onPointerEnter",_="pointer"),mt=le==null?G:Mo(le),F=ge==null?G:Mo(ge),G=new he(J,_+"leave",le,n,Q),G.target=mt,G.relatedTarget=F,J=null,Xn(Q)===A&&(he=new he(N,_+"enter",ge,n,Q),he.target=F,he.relatedTarget=mt,J=he),mt=J,le&&ge)t:{for(he=le,N=ge,_=0,F=he;F;F=Ro(F))_++;for(F=0,J=N;J;J=Ro(J))F++;for(;0<_-F;)he=Ro(he),_--;for(;0<F-_;)N=Ro(N),F--;for(;_--;){if(he===N||N!==null&&he===N.alternate)break t;he=Ro(he),N=Ro(N)}he=null}else he=null;le!==null&&hd(Y,G,le,he,!1),ge!==null&&mt!==null&&hd(Y,mt,ge,he,!0)}}e:{if(G=A?Mo(A):window,le=G.nodeName&&G.nodeName.toLowerCase(),le==="select"||le==="input"&&G.type==="file")var be=Dh;else if(Zu(G))if(Xu)be=Wh;else{be=Uh;var Pe=jh}else(le=G.nodeName)&&le.toLowerCase()==="input"&&(G.type==="checkbox"||G.type==="radio")&&(be=Hh);if(be&&(be=be(e,A))){Yu(Y,be,n,Q);break e}Pe&&Pe(e,G,A),e==="focusout"&&(Pe=G._wrapperState)&&Pe.controlled&&G.type==="number"&&jr(G,"number",G.value)}switch(Pe=A?Mo(A):window,e){case"focusin":(Zu(Pe)||Pe.contentEditable==="true")&&(_o=Pe,is=A,mi=null);break;case"focusout":mi=is=_o=null;break;case"mousedown":as=!0;break;case"contextmenu":case"mouseup":case"dragend":as=!1,od(Y,n,Q);break;case"selectionchange":if(Gh)break;case"keydown":case"keyup":od(Y,n,Q)}var ke;if(ts)e:{switch(e){case"compositionstart":var Te="onCompositionStart";break e;case"compositionend":Te="onCompositionEnd";break e;case"compositionupdate":Te="onCompositionUpdate";break e}Te=void 0}else Co?Gu(e,n)&&(Te="onCompositionEnd"):e==="keydown"&&n.keyCode===229&&(Te="onCompositionStart");Te&&(Wu&&n.locale!=="ko"&&(Co||Te!=="onCompositionStart"?Te==="onCompositionEnd"&&Co&&(ke=Bu()):(Pn=Q,Yl="value"in Pn?Pn.value:Pn.textContent,Co=!0)),Pe=Sa(A,Te),0<Pe.length&&(Te=new Uu(Te,e,null,n,Q),Y.push({event:Te,listeners:Pe}),ke?Te.data=ke:(ke=Qu(n),ke!==null&&(Te.data=ke)))),(ke=Fh?zh(e,n):Ah(e,n))&&(A=Sa(A,"onBeforeInput"),0<A.length&&(Q=new Uu("onBeforeInput","beforeinput",null,n,Q),Y.push({event:Q,listeners:A}),Q.data=ke))}md(Y,t)})}function pi(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Sa(e,t){for(var n=t+"Capture",a=[];e!==null;){var s=e,u=s.stateNode;s.tag===5&&u!==null&&(s=u,u=rr(e,n),u!=null&&a.unshift(pi(e,u,s)),u=rr(e,t),u!=null&&a.push(pi(e,u,s))),e=e.return}return a}function Ro(e){if(e===null)return null;do e=e.return;while(e&&e.tag!==5);return e||null}function hd(e,t,n,a,s){for(var u=t._reactName,p=[];n!==null&&n!==a;){var x=n,P=x.alternate,A=x.stateNode;if(P!==null&&P===a)break;x.tag===5&&A!==null&&(x=A,s?(P=rr(n,u),P!=null&&p.unshift(pi(n,P,x))):s||(P=rr(n,u),P!=null&&p.push(pi(n,P,x)))),n=n.return}p.length!==0&&e.push({event:t,listeners:p})}var Xh=/\r\n?/g,Jh=/\u0000|\uFFFD/g;function pd(e){return(typeof e=="string"?e:""+e).replace(Xh,`
`).replace(Jh,"")}function Ea(e,t,n){if(t=pd(t),pd(e)!==t&&n)throw Error(i(425))}function Pa(){}var fs=null,ms=null;function gs(e,t){return e==="textarea"||e==="noscript"||typeof t.children=="string"||typeof t.children=="number"||typeof t.dangerouslySetInnerHTML=="object"&&t.dangerouslySetInnerHTML!==null&&t.dangerouslySetInnerHTML.__html!=null}var hs=typeof setTimeout=="function"?setTimeout:void 0,qh=typeof clearTimeout=="function"?clearTimeout:void 0,vd=typeof Promise=="function"?Promise:void 0,Kh=typeof queueMicrotask=="function"?queueMicrotask:typeof vd<"u"?function(e){return vd.resolve(null).then(e).catch(ep)}:hs;function ep(e){setTimeout(function(){throw e})}function ps(e,t){var n=t,a=0;do{var s=n.nextSibling;if(e.removeChild(n),s&&s.nodeType===8)if(n=s.data,n==="/$"){if(a===0){e.removeChild(s),ai(t);return}a--}else n!=="$"&&n!=="$?"&&n!=="$!"||a++;n=s}while(n);ai(t)}function Cn(e){for(;e!=null;e=e.nextSibling){var t=e.nodeType;if(t===1||t===3)break;if(t===8){if(t=e.data,t==="$"||t==="$!"||t==="$?")break;if(t==="/$")return null}}return e}function bd(e){e=e.previousSibling;for(var t=0;e;){if(e.nodeType===8){var n=e.data;if(n==="$"||n==="$!"||n==="$?"){if(t===0)return e;t--}else n==="/$"&&t++}e=e.previousSibling}return null}var To=Math.random().toString(36).slice(2),Hr="__reactFiber$"+To,vi="__reactProps$"+To,rn="__reactContainer$"+To,vs="__reactEvents$"+To,tp="__reactListeners$"+To,rp="__reactHandles$"+To;function Xn(e){var t=e[Hr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[rn]||n[Hr]){if(n=t.alternate,t.child!==null||n!==null&&n.child!==null)for(e=bd(e);e!==null;){if(n=e[Hr])return n;e=bd(e)}return t}e=n,n=e.parentNode}return null}function bi(e){return e=e[Hr]||e[rn],!e||e.tag!==5&&e.tag!==6&&e.tag!==13&&e.tag!==3?null:e}function Mo(e){if(e.tag===5||e.tag===6)return e.stateNode;throw Error(i(33))}function ka(e){return e[vi]||null}var bs=[],No=-1;function _n(e){return{current:e}}function ot(e){0>No||(e.current=bs[No],bs[No]=null,No--)}function rt(e,t){No++,bs[No]=e.current,e.current=t}var In={},Lt=_n(In),Yt=_n(!1),Jn=In;function Lo(e,t){var n=e.type.contextTypes;if(!n)return In;var a=e.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===t)return a.__reactInternalMemoizedMaskedChildContext;var s={},u;for(u in n)s[u]=t[u];return a&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=s),s}function Xt(e){return e=e.childContextTypes,e!=null}function Ca(){ot(Yt),ot(Lt)}function yd(e,t,n){if(Lt.current!==In)throw Error(i(168));rt(Lt,t),rt(Yt,n)}function xd(e,t,n){var a=e.stateNode;if(t=t.childContextTypes,typeof a.getChildContext!="function")return n;a=a.getChildContext();for(var s in a)if(!(s in t))throw Error(i(108,_e(e)||"Unknown",s));return q({},n,a)}function _a(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||In,Jn=Lt.current,rt(Lt,e),rt(Yt,Yt.current),!0}function wd(e,t,n){var a=e.stateNode;if(!a)throw Error(i(169));n?(e=xd(e,t,Jn),a.__reactInternalMemoizedMergedChildContext=e,ot(Yt),ot(Lt),rt(Lt,e)):ot(Yt),rt(Yt,n)}var nn=null,Ia=!1,ys=!1;function Sd(e){nn===null?nn=[e]:nn.push(e)}function np(e){Ia=!0,Sd(e)}function Rn(){if(!ys&&nn!==null){ys=!0;var e=0,t=Ke;try{var n=nn;for(Ke=1;e<n.length;e++){var a=n[e];do a=a(!0);while(a!==null)}nn=null,Ia=!1}catch(s){throw nn!==null&&(nn=nn.slice(e+1)),tt(pr,Rn),s}finally{Ke=t,ys=!1}}return null}var Fo=[],zo=0,Ra=null,Ta=0,br=[],yr=0,qn=null,on=1,an="";function Kn(e,t){Fo[zo++]=Ta,Fo[zo++]=Ra,Ra=e,Ta=t}function Ed(e,t,n){br[yr++]=on,br[yr++]=an,br[yr++]=qn,qn=e;var a=on;e=an;var s=32-Ie(a)-1;a&=~(1<<s),n+=1;var u=32-Ie(t)+s;if(30<u){var p=s-s%5;u=(a&(1<<p)-1).toString(32),a>>=p,s-=p,on=1<<32-Ie(t)+s|n<<s|a,an=u+e}else on=1<<u|n<<s|a,an=e}function xs(e){e.return!==null&&(Kn(e,1),Ed(e,1,0))}function ws(e){for(;e===Ra;)Ra=Fo[--zo],Fo[zo]=null,Ta=Fo[--zo],Fo[zo]=null;for(;e===qn;)qn=br[--yr],br[yr]=null,an=br[--yr],br[yr]=null,on=br[--yr],br[yr]=null}var ir=null,ar=null,at=!1,Lr=null;function Pd(e,t){var n=Er(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,t=e.deletions,t===null?(e.deletions=[n],e.flags|=16):t.push(n)}function kd(e,t){switch(e.tag){case 5:var n=e.type;return t=t.nodeType!==1||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t,t!==null?(e.stateNode=t,ir=e,ar=Cn(t.firstChild),!0):!1;case 6:return t=e.pendingProps===""||t.nodeType!==3?null:t,t!==null?(e.stateNode=t,ir=e,ar=null,!0):!1;case 13:return t=t.nodeType!==8?null:t,t!==null?(n=qn!==null?{id:on,overflow:an}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},n=Er(18,null,null,0),n.stateNode=t,n.return=e,e.child=n,ir=e,ar=null,!0):!1;default:return!1}}function Ss(e){return(e.mode&1)!==0&&(e.flags&128)===0}function Es(e){if(at){var t=ar;if(t){var n=t;if(!kd(e,t)){if(Ss(e))throw Error(i(418));t=Cn(n.nextSibling);var a=ir;t&&kd(e,t)?Pd(a,n):(e.flags=e.flags&-4097|2,at=!1,ir=e)}}else{if(Ss(e))throw Error(i(418));e.flags=e.flags&-4097|2,at=!1,ir=e}}}function Cd(e){for(e=e.return;e!==null&&e.tag!==5&&e.tag!==3&&e.tag!==13;)e=e.return;ir=e}function Ma(e){if(e!==ir)return!1;if(!at)return Cd(e),at=!0,!1;var t;if((t=e.tag!==3)&&!(t=e.tag!==5)&&(t=e.type,t=t!=="head"&&t!=="body"&&!gs(e.type,e.memoizedProps)),t&&(t=ar)){if(Ss(e))throw _d(),Error(i(418));for(;t;)Pd(e,t),t=Cn(t.nextSibling)}if(Cd(e),e.tag===13){if(e=e.memoizedState,e=e!==null?e.dehydrated:null,!e)throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(e.nodeType===8){var n=e.data;if(n==="/$"){if(t===0){ar=Cn(e.nextSibling);break e}t--}else n!=="$"&&n!=="$!"&&n!=="$?"||t++}e=e.nextSibling}ar=null}}else ar=ir?Cn(e.stateNode.nextSibling):null;return!0}function _d(){for(var e=ar;e;)e=Cn(e.nextSibling)}function Ao(){ar=ir=null,at=!1}function Ps(e){Lr===null?Lr=[e]:Lr.push(e)}var op=Z.ReactCurrentBatchConfig;function yi(e,t,n){if(e=n.ref,e!==null&&typeof e!="function"&&typeof e!="object"){if(n._owner){if(n=n._owner,n){if(n.tag!==1)throw Error(i(309));var a=n.stateNode}if(!a)throw Error(i(147,e));var s=a,u=""+e;return t!==null&&t.ref!==null&&typeof t.ref=="function"&&t.ref._stringRef===u?t.ref:(t=function(p){var x=s.refs;p===null?delete x[u]:x[u]=p},t._stringRef=u,t)}if(typeof e!="string")throw Error(i(284));if(!n._owner)throw Error(i(290,e))}return e}function Na(e,t){throw e=Object.prototype.toString.call(t),Error(i(31,e==="[object Object]"?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Id(e){var t=e._init;return t(e._payload)}function Rd(e){function t(N,_){if(e){var F=N.deletions;F===null?(N.deletions=[_],N.flags|=16):F.push(_)}}function n(N,_){if(!e)return null;for(;_!==null;)t(N,_),_=_.sibling;return null}function a(N,_){for(N=new Map;_!==null;)_.key!==null?N.set(_.key,_):N.set(_.index,_),_=_.sibling;return N}function s(N,_){return N=On(N,_),N.index=0,N.sibling=null,N}function u(N,_,F){return N.index=F,e?(F=N.alternate,F!==null?(F=F.index,F<_?(N.flags|=2,_):F):(N.flags|=2,_)):(N.flags|=1048576,_)}function p(N){return e&&N.alternate===null&&(N.flags|=2),N}function x(N,_,F,J){return _===null||_.tag!==6?(_=hc(F,N.mode,J),_.return=N,_):(_=s(_,F),_.return=N,_)}function P(N,_,F,J){var be=F.type;return be===I?Q(N,_,F.props.children,J,F.key):_!==null&&(_.elementType===be||typeof be=="object"&&be!==null&&be.$$typeof===Ne&&Id(be)===_.type)?(J=s(_,F.props),J.ref=yi(N,_,F),J.return=N,J):(J=rl(F.type,F.key,F.props,null,N.mode,J),J.ref=yi(N,_,F),J.return=N,J)}function A(N,_,F,J){return _===null||_.tag!==4||_.stateNode.containerInfo!==F.containerInfo||_.stateNode.implementation!==F.implementation?(_=pc(F,N.mode,J),_.return=N,_):(_=s(_,F.children||[]),_.return=N,_)}function Q(N,_,F,J,be){return _===null||_.tag!==7?(_=lo(F,N.mode,J,be),_.return=N,_):(_=s(_,F),_.return=N,_)}function Y(N,_,F){if(typeof _=="string"&&_!==""||typeof _=="number")return _=hc(""+_,N.mode,F),_.return=N,_;if(typeof _=="object"&&_!==null){switch(_.$$typeof){case X:return F=rl(_.type,_.key,_.props,null,N.mode,F),F.ref=yi(N,null,_),F.return=N,F;case te:return _=pc(_,N.mode,F),_.return=N,_;case Ne:var J=_._init;return Y(N,J(_._payload),F)}if(Yr(_)||ie(_))return _=lo(_,N.mode,F,null),_.return=N,_;Na(N,_)}return null}function G(N,_,F,J){var be=_!==null?_.key:null;if(typeof F=="string"&&F!==""||typeof F=="number")return be!==null?null:x(N,_,""+F,J);if(typeof F=="object"&&F!==null){switch(F.$$typeof){case X:return F.key===be?P(N,_,F,J):null;case te:return F.key===be?A(N,_,F,J):null;case Ne:return be=F._init,G(N,_,be(F._payload),J)}if(Yr(F)||ie(F))return be!==null?null:Q(N,_,F,J,null);Na(N,F)}return null}function le(N,_,F,J,be){if(typeof J=="string"&&J!==""||typeof J=="number")return N=N.get(F)||null,x(_,N,""+J,be);if(typeof J=="object"&&J!==null){switch(J.$$typeof){case X:return N=N.get(J.key===null?F:J.key)||null,P(_,N,J,be);case te:return N=N.get(J.key===null?F:J.key)||null,A(_,N,J,be);case Ne:var Pe=J._init;return le(N,_,F,Pe(J._payload),be)}if(Yr(J)||ie(J))return N=N.get(F)||null,Q(_,N,J,be,null);Na(_,J)}return null}function ge(N,_,F,J){for(var be=null,Pe=null,ke=_,Te=_=0,St=null;ke!==null&&Te<F.length;Te++){ke.index>Te?(St=ke,ke=null):St=ke.sibling;var Ge=G(N,ke,F[Te],J);if(Ge===null){ke===null&&(ke=St);break}e&&ke&&Ge.alternate===null&&t(N,ke),_=u(Ge,_,Te),Pe===null?be=Ge:Pe.sibling=Ge,Pe=Ge,ke=St}if(Te===F.length)return n(N,ke),at&&Kn(N,Te),be;if(ke===null){for(;Te<F.length;Te++)ke=Y(N,F[Te],J),ke!==null&&(_=u(ke,_,Te),Pe===null?be=ke:Pe.sibling=ke,Pe=ke);return at&&Kn(N,Te),be}for(ke=a(N,ke);Te<F.length;Te++)St=le(ke,N,Te,F[Te],J),St!==null&&(e&&St.alternate!==null&&ke.delete(St.key===null?Te:St.key),_=u(St,_,Te),Pe===null?be=St:Pe.sibling=St,Pe=St);return e&&ke.forEach(function(Bn){return t(N,Bn)}),at&&Kn(N,Te),be}function he(N,_,F,J){var be=ie(F);if(typeof be!="function")throw Error(i(150));if(F=be.call(F),F==null)throw Error(i(151));for(var Pe=be=null,ke=_,Te=_=0,St=null,Ge=F.next();ke!==null&&!Ge.done;Te++,Ge=F.next()){ke.index>Te?(St=ke,ke=null):St=ke.sibling;var Bn=G(N,ke,Ge.value,J);if(Bn===null){ke===null&&(ke=St);break}e&&ke&&Bn.alternate===null&&t(N,ke),_=u(Bn,_,Te),Pe===null?be=Bn:Pe.sibling=Bn,Pe=Bn,ke=St}if(Ge.done)return n(N,ke),at&&Kn(N,Te),be;if(ke===null){for(;!Ge.done;Te++,Ge=F.next())Ge=Y(N,Ge.value,J),Ge!==null&&(_=u(Ge,_,Te),Pe===null?be=Ge:Pe.sibling=Ge,Pe=Ge);return at&&Kn(N,Te),be}for(ke=a(N,ke);!Ge.done;Te++,Ge=F.next())Ge=le(ke,N,Te,Ge.value,J),Ge!==null&&(e&&Ge.alternate!==null&&ke.delete(Ge.key===null?Te:Ge.key),_=u(Ge,_,Te),Pe===null?be=Ge:Pe.sibling=Ge,Pe=Ge);return e&&ke.forEach(function(Op){return t(N,Op)}),at&&Kn(N,Te),be}function mt(N,_,F,J){if(typeof F=="object"&&F!==null&&F.type===I&&F.key===null&&(F=F.props.children),typeof F=="object"&&F!==null){switch(F.$$typeof){case X:e:{for(var be=F.key,Pe=_;Pe!==null;){if(Pe.key===be){if(be=F.type,be===I){if(Pe.tag===7){n(N,Pe.sibling),_=s(Pe,F.props.children),_.return=N,N=_;break e}}else if(Pe.elementType===be||typeof be=="object"&&be!==null&&be.$$typeof===Ne&&Id(be)===Pe.type){n(N,Pe.sibling),_=s(Pe,F.props),_.ref=yi(N,Pe,F),_.return=N,N=_;break e}n(N,Pe);break}else t(N,Pe);Pe=Pe.sibling}F.type===I?(_=lo(F.props.children,N.mode,J,F.key),_.return=N,N=_):(J=rl(F.type,F.key,F.props,null,N.mode,J),J.ref=yi(N,_,F),J.return=N,N=J)}return p(N);case te:e:{for(Pe=F.key;_!==null;){if(_.key===Pe)if(_.tag===4&&_.stateNode.containerInfo===F.containerInfo&&_.stateNode.implementation===F.implementation){n(N,_.sibling),_=s(_,F.children||[]),_.return=N,N=_;break e}else{n(N,_);break}else t(N,_);_=_.sibling}_=pc(F,N.mode,J),_.return=N,N=_}return p(N);case Ne:return Pe=F._init,mt(N,_,Pe(F._payload),J)}if(Yr(F))return ge(N,_,F,J);if(ie(F))return he(N,_,F,J);Na(N,F)}return typeof F=="string"&&F!==""||typeof F=="number"?(F=""+F,_!==null&&_.tag===6?(n(N,_.sibling),_=s(_,F),_.return=N,N=_):(n(N,_),_=hc(F,N.mode,J),_.return=N,N=_),p(N)):n(N,_)}return mt}var Oo=Rd(!0),Td=Rd(!1),La=_n(null),Fa=null,Bo=null,ks=null;function Cs(){ks=Bo=Fa=null}function _s(e){var t=La.current;ot(La),e._currentValue=t}function Is(e,t,n){for(;e!==null;){var a=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,a!==null&&(a.childLanes|=t)):a!==null&&(a.childLanes&t)!==t&&(a.childLanes|=t),e===n)break;e=e.return}}function Do(e,t){Fa=e,ks=Bo=null,e=e.dependencies,e!==null&&e.firstContext!==null&&((e.lanes&t)!==0&&(Jt=!0),e.firstContext=null)}function xr(e){var t=e._currentValue;if(ks!==e)if(e={context:e,memoizedValue:t,next:null},Bo===null){if(Fa===null)throw Error(i(308));Bo=e,Fa.dependencies={lanes:0,firstContext:e}}else Bo=Bo.next=e;return t}var eo=null;function Rs(e){eo===null?eo=[e]:eo.push(e)}function Md(e,t,n,a){var s=t.interleaved;return s===null?(n.next=n,Rs(t)):(n.next=s.next,s.next=n),t.interleaved=n,ln(e,a)}function ln(e,t){e.lanes|=t;var n=e.alternate;for(n!==null&&(n.lanes|=t),n=e,e=e.return;e!==null;)e.childLanes|=t,n=e.alternate,n!==null&&(n.childLanes|=t),n=e,e=e.return;return n.tag===3?n.stateNode:null}var Tn=!1;function Ts(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Nd(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function sn(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Mn(e,t,n){var a=e.updateQueue;if(a===null)return null;if(a=a.shared,(We&2)!==0){var s=a.pending;return s===null?t.next=t:(t.next=s.next,s.next=t),a.pending=t,ln(e,n)}return s=a.interleaved,s===null?(t.next=t,Rs(a)):(t.next=s.next,s.next=t),a.interleaved=t,ln(e,n)}function za(e,t,n){if(t=t.updateQueue,t!==null&&(t=t.shared,(n&4194240)!==0)){var a=t.lanes;a&=e.pendingLanes,n|=a,t.lanes=n,$l(e,n)}}function Ld(e,t){var n=e.updateQueue,a=e.alternate;if(a!==null&&(a=a.updateQueue,n===a)){var s=null,u=null;if(n=n.firstBaseUpdate,n!==null){do{var p={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};u===null?s=u=p:u=u.next=p,n=n.next}while(n!==null);u===null?s=u=t:u=u.next=t}else s=u=t;n={baseState:a.baseState,firstBaseUpdate:s,lastBaseUpdate:u,shared:a.shared,effects:a.effects},e.updateQueue=n;return}e=n.lastBaseUpdate,e===null?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Aa(e,t,n,a){var s=e.updateQueue;Tn=!1;var u=s.firstBaseUpdate,p=s.lastBaseUpdate,x=s.shared.pending;if(x!==null){s.shared.pending=null;var P=x,A=P.next;P.next=null,p===null?u=A:p.next=A,p=P;var Q=e.alternate;Q!==null&&(Q=Q.updateQueue,x=Q.lastBaseUpdate,x!==p&&(x===null?Q.firstBaseUpdate=A:x.next=A,Q.lastBaseUpdate=P))}if(u!==null){var Y=s.baseState;p=0,Q=A=P=null,x=u;do{var G=x.lane,le=x.eventTime;if((a&G)===G){Q!==null&&(Q=Q.next={eventTime:le,lane:0,tag:x.tag,payload:x.payload,callback:x.callback,next:null});e:{var ge=e,he=x;switch(G=t,le=n,he.tag){case 1:if(ge=he.payload,typeof ge=="function"){Y=ge.call(le,Y,G);break e}Y=ge;break e;case 3:ge.flags=ge.flags&-65537|128;case 0:if(ge=he.payload,G=typeof ge=="function"?ge.call(le,Y,G):ge,G==null)break e;Y=q({},Y,G);break e;case 2:Tn=!0}}x.callback!==null&&x.lane!==0&&(e.flags|=64,G=s.effects,G===null?s.effects=[x]:G.push(x))}else le={eventTime:le,lane:G,tag:x.tag,payload:x.payload,callback:x.callback,next:null},Q===null?(A=Q=le,P=Y):Q=Q.next=le,p|=G;if(x=x.next,x===null){if(x=s.shared.pending,x===null)break;G=x,x=G.next,G.next=null,s.lastBaseUpdate=G,s.shared.pending=null}}while(!0);if(Q===null&&(P=Y),s.baseState=P,s.firstBaseUpdate=A,s.lastBaseUpdate=Q,t=s.shared.interleaved,t!==null){s=t;do p|=s.lane,s=s.next;while(s!==t)}else u===null&&(s.shared.lanes=0);no|=p,e.lanes=p,e.memoizedState=Y}}function Fd(e,t,n){if(e=t.effects,t.effects=null,e!==null)for(t=0;t<e.length;t++){var a=e[t],s=a.callback;if(s!==null){if(a.callback=null,a=n,typeof s!="function")throw Error(i(191,s));s.call(a)}}}var xi={},Wr=_n(xi),wi=_n(xi),Si=_n(xi);function to(e){if(e===xi)throw Error(i(174));return e}function Ms(e,t){switch(rt(Si,t),rt(wi,e),rt(Wr,xi),e=t.nodeType,e){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:kt(null,"");break;default:e=e===8?t.parentNode:t,t=e.namespaceURI||null,e=e.tagName,t=kt(t,e)}ot(Wr),rt(Wr,t)}function jo(){ot(Wr),ot(wi),ot(Si)}function zd(e){to(Si.current);var t=to(Wr.current),n=kt(t,e.type);t!==n&&(rt(wi,e),rt(Wr,n))}function Ns(e){wi.current===e&&(ot(Wr),ot(wi))}var st=_n(0);function Oa(e){for(var t=e;t!==null;){if(t.tag===13){var n=t.memoizedState;if(n!==null&&(n=n.dehydrated,n===null||n.data==="$?"||n.data==="$!"))return t}else if(t.tag===19&&t.memoizedProps.revealOrder!==void 0){if((t.flags&128)!==0)return t}else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Ls=[];function Fs(){for(var e=0;e<Ls.length;e++)Ls[e]._workInProgressVersionPrimary=null;Ls.length=0}var Ba=Z.ReactCurrentDispatcher,zs=Z.ReactCurrentBatchConfig,ro=0,ct=null,vt=null,xt=null,Da=!1,Ei=!1,Pi=0,ip=0;function Ft(){throw Error(i(321))}function As(e,t){if(t===null)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Nr(e[n],t[n]))return!1;return!0}function Os(e,t,n,a,s,u){if(ro=u,ct=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Ba.current=e===null||e.memoizedState===null?cp:up,e=n(a,s),Ei){u=0;do{if(Ei=!1,Pi=0,25<=u)throw Error(i(301));u+=1,xt=vt=null,t.updateQueue=null,Ba.current=dp,e=n(a,s)}while(Ei)}if(Ba.current=Ha,t=vt!==null&&vt.next!==null,ro=0,xt=vt=ct=null,Da=!1,t)throw Error(i(300));return e}function Bs(){var e=Pi!==0;return Pi=0,e}function $r(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return xt===null?ct.memoizedState=xt=e:xt=xt.next=e,xt}function wr(){if(vt===null){var e=ct.alternate;e=e!==null?e.memoizedState:null}else e=vt.next;var t=xt===null?ct.memoizedState:xt.next;if(t!==null)xt=t,vt=e;else{if(e===null)throw Error(i(310));vt=e,e={memoizedState:vt.memoizedState,baseState:vt.baseState,baseQueue:vt.baseQueue,queue:vt.queue,next:null},xt===null?ct.memoizedState=xt=e:xt=xt.next=e}return xt}function ki(e,t){return typeof t=="function"?t(e):t}function Ds(e){var t=wr(),n=t.queue;if(n===null)throw Error(i(311));n.lastRenderedReducer=e;var a=vt,s=a.baseQueue,u=n.pending;if(u!==null){if(s!==null){var p=s.next;s.next=u.next,u.next=p}a.baseQueue=s=u,n.pending=null}if(s!==null){u=s.next,a=a.baseState;var x=p=null,P=null,A=u;do{var Q=A.lane;if((ro&Q)===Q)P!==null&&(P=P.next={lane:0,action:A.action,hasEagerState:A.hasEagerState,eagerState:A.eagerState,next:null}),a=A.hasEagerState?A.eagerState:e(a,A.action);else{var Y={lane:Q,action:A.action,hasEagerState:A.hasEagerState,eagerState:A.eagerState,next:null};P===null?(x=P=Y,p=a):P=P.next=Y,ct.lanes|=Q,no|=Q}A=A.next}while(A!==null&&A!==u);P===null?p=a:P.next=x,Nr(a,t.memoizedState)||(Jt=!0),t.memoizedState=a,t.baseState=p,t.baseQueue=P,n.lastRenderedState=a}if(e=n.interleaved,e!==null){s=e;do u=s.lane,ct.lanes|=u,no|=u,s=s.next;while(s!==e)}else s===null&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function js(e){var t=wr(),n=t.queue;if(n===null)throw Error(i(311));n.lastRenderedReducer=e;var a=n.dispatch,s=n.pending,u=t.memoizedState;if(s!==null){n.pending=null;var p=s=s.next;do u=e(u,p.action),p=p.next;while(p!==s);Nr(u,t.memoizedState)||(Jt=!0),t.memoizedState=u,t.baseQueue===null&&(t.baseState=u),n.lastRenderedState=u}return[u,a]}function Ad(){}function Od(e,t){var n=ct,a=wr(),s=t(),u=!Nr(a.memoizedState,s);if(u&&(a.memoizedState=s,Jt=!0),a=a.queue,Us(jd.bind(null,n,a,e),[e]),a.getSnapshot!==t||u||xt!==null&&xt.memoizedState.tag&1){if(n.flags|=2048,Ci(9,Dd.bind(null,n,a,s,t),void 0,null),wt===null)throw Error(i(349));(ro&30)!==0||Bd(n,t,s)}return s}function Bd(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},t=ct.updateQueue,t===null?(t={lastEffect:null,stores:null},ct.updateQueue=t,t.stores=[e]):(n=t.stores,n===null?t.stores=[e]:n.push(e))}function Dd(e,t,n,a){t.value=n,t.getSnapshot=a,Ud(t)&&Hd(e)}function jd(e,t,n){return n(function(){Ud(t)&&Hd(e)})}function Ud(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!Nr(e,n)}catch{return!0}}function Hd(e){var t=ln(e,1);t!==null&&Or(t,e,1,-1)}function Wd(e){var t=$r();return typeof e=="function"&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ki,lastRenderedState:e},t.queue=e,e=e.dispatch=sp.bind(null,ct,e),[t.memoizedState,e]}function Ci(e,t,n,a){return e={tag:e,create:t,destroy:n,deps:a,next:null},t=ct.updateQueue,t===null?(t={lastEffect:null,stores:null},ct.updateQueue=t,t.lastEffect=e.next=e):(n=t.lastEffect,n===null?t.lastEffect=e.next=e:(a=n.next,n.next=e,e.next=a,t.lastEffect=e)),e}function $d(){return wr().memoizedState}function ja(e,t,n,a){var s=$r();ct.flags|=e,s.memoizedState=Ci(1|t,n,void 0,a===void 0?null:a)}function Ua(e,t,n,a){var s=wr();a=a===void 0?null:a;var u=void 0;if(vt!==null){var p=vt.memoizedState;if(u=p.destroy,a!==null&&As(a,p.deps)){s.memoizedState=Ci(t,n,u,a);return}}ct.flags|=e,s.memoizedState=Ci(1|t,n,u,a)}function Vd(e,t){return ja(8390656,8,e,t)}function Us(e,t){return Ua(2048,8,e,t)}function Gd(e,t){return Ua(4,2,e,t)}function Qd(e,t){return Ua(4,4,e,t)}function Zd(e,t){if(typeof t=="function")return e=e(),t(e),function(){t(null)};if(t!=null)return e=e(),t.current=e,function(){t.current=null}}function Yd(e,t,n){return n=n!=null?n.concat([e]):null,Ua(4,4,Zd.bind(null,t,e),n)}function Hs(){}function Xd(e,t){var n=wr();t=t===void 0?null:t;var a=n.memoizedState;return a!==null&&t!==null&&As(t,a[1])?a[0]:(n.memoizedState=[e,t],e)}function Jd(e,t){var n=wr();t=t===void 0?null:t;var a=n.memoizedState;return a!==null&&t!==null&&As(t,a[1])?a[0]:(e=e(),n.memoizedState=[e,t],e)}function qd(e,t,n){return(ro&21)===0?(e.baseState&&(e.baseState=!1,Jt=!0),e.memoizedState=n):(Nr(n,t)||(n=Iu(),ct.lanes|=n,no|=n,e.baseState=!0),t)}function ap(e,t){var n=Ke;Ke=n!==0&&4>n?n:4,e(!0);var a=zs.transition;zs.transition={};try{e(!1),t()}finally{Ke=n,zs.transition=a}}function Kd(){return wr().memoizedState}function lp(e,t,n){var a=zn(e);if(n={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null},ef(e))tf(t,n);else if(n=Md(e,t,n,a),n!==null){var s=Ht();Or(n,e,a,s),rf(n,t,a)}}function sp(e,t,n){var a=zn(e),s={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null};if(ef(e))tf(t,s);else{var u=e.alternate;if(e.lanes===0&&(u===null||u.lanes===0)&&(u=t.lastRenderedReducer,u!==null))try{var p=t.lastRenderedState,x=u(p,n);if(s.hasEagerState=!0,s.eagerState=x,Nr(x,p)){var P=t.interleaved;P===null?(s.next=s,Rs(t)):(s.next=P.next,P.next=s),t.interleaved=s;return}}catch{}finally{}n=Md(e,t,s,a),n!==null&&(s=Ht(),Or(n,e,a,s),rf(n,t,a))}}function ef(e){var t=e.alternate;return e===ct||t!==null&&t===ct}function tf(e,t){Ei=Da=!0;var n=e.pending;n===null?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function rf(e,t,n){if((n&4194240)!==0){var a=t.lanes;a&=e.pendingLanes,n|=a,t.lanes=n,$l(e,n)}}var Ha={readContext:xr,useCallback:Ft,useContext:Ft,useEffect:Ft,useImperativeHandle:Ft,useInsertionEffect:Ft,useLayoutEffect:Ft,useMemo:Ft,useReducer:Ft,useRef:Ft,useState:Ft,useDebugValue:Ft,useDeferredValue:Ft,useTransition:Ft,useMutableSource:Ft,useSyncExternalStore:Ft,useId:Ft,unstable_isNewReconciler:!1},cp={readContext:xr,useCallback:function(e,t){return $r().memoizedState=[e,t===void 0?null:t],e},useContext:xr,useEffect:Vd,useImperativeHandle:function(e,t,n){return n=n!=null?n.concat([e]):null,ja(4194308,4,Zd.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ja(4194308,4,e,t)},useInsertionEffect:function(e,t){return ja(4,2,e,t)},useMemo:function(e,t){var n=$r();return t=t===void 0?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var a=$r();return t=n!==void 0?n(t):t,a.memoizedState=a.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},a.queue=e,e=e.dispatch=lp.bind(null,ct,e),[a.memoizedState,e]},useRef:function(e){var t=$r();return e={current:e},t.memoizedState=e},useState:Wd,useDebugValue:Hs,useDeferredValue:function(e){return $r().memoizedState=e},useTransition:function(){var e=Wd(!1),t=e[0];return e=ap.bind(null,e[1]),$r().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var a=ct,s=$r();if(at){if(n===void 0)throw Error(i(407));n=n()}else{if(n=t(),wt===null)throw Error(i(349));(ro&30)!==0||Bd(a,t,n)}s.memoizedState=n;var u={value:n,getSnapshot:t};return s.queue=u,Vd(jd.bind(null,a,u,e),[e]),a.flags|=2048,Ci(9,Dd.bind(null,a,u,n,t),void 0,null),n},useId:function(){var e=$r(),t=wt.identifierPrefix;if(at){var n=an,a=on;n=(a&~(1<<32-Ie(a)-1)).toString(32)+n,t=":"+t+"R"+n,n=Pi++,0<n&&(t+="H"+n.toString(32)),t+=":"}else n=ip++,t=":"+t+"r"+n.toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},up={readContext:xr,useCallback:Xd,useContext:xr,useEffect:Us,useImperativeHandle:Yd,useInsertionEffect:Gd,useLayoutEffect:Qd,useMemo:Jd,useReducer:Ds,useRef:$d,useState:function(){return Ds(ki)},useDebugValue:Hs,useDeferredValue:function(e){var t=wr();return qd(t,vt.memoizedState,e)},useTransition:function(){var e=Ds(ki)[0],t=wr().memoizedState;return[e,t]},useMutableSource:Ad,useSyncExternalStore:Od,useId:Kd,unstable_isNewReconciler:!1},dp={readContext:xr,useCallback:Xd,useContext:xr,useEffect:Us,useImperativeHandle:Yd,useInsertionEffect:Gd,useLayoutEffect:Qd,useMemo:Jd,useReducer:js,useRef:$d,useState:function(){return js(ki)},useDebugValue:Hs,useDeferredValue:function(e){var t=wr();return vt===null?t.memoizedState=e:qd(t,vt.memoizedState,e)},useTransition:function(){var e=js(ki)[0],t=wr().memoizedState;return[e,t]},useMutableSource:Ad,useSyncExternalStore:Od,useId:Kd,unstable_isNewReconciler:!1};function Fr(e,t){if(e&&e.defaultProps){t=q({},t),e=e.defaultProps;for(var n in e)t[n]===void 0&&(t[n]=e[n]);return t}return t}function Ws(e,t,n,a){t=e.memoizedState,n=n(a,t),n=n==null?t:q({},t,n),e.memoizedState=n,e.lanes===0&&(e.updateQueue.baseState=n)}var Wa={isMounted:function(e){return(e=e._reactInternals)?ue(e)===e:!1},enqueueSetState:function(e,t,n){e=e._reactInternals;var a=Ht(),s=zn(e),u=sn(a,s);u.payload=t,n!=null&&(u.callback=n),t=Mn(e,u,s),t!==null&&(Or(t,e,s,a),za(t,e,s))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var a=Ht(),s=zn(e),u=sn(a,s);u.tag=1,u.payload=t,n!=null&&(u.callback=n),t=Mn(e,u,s),t!==null&&(Or(t,e,s,a),za(t,e,s))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=Ht(),a=zn(e),s=sn(n,a);s.tag=2,t!=null&&(s.callback=t),t=Mn(e,s,a),t!==null&&(Or(t,e,a,n),za(t,e,a))}};function nf(e,t,n,a,s,u,p){return e=e.stateNode,typeof e.shouldComponentUpdate=="function"?e.shouldComponentUpdate(a,u,p):t.prototype&&t.prototype.isPureReactComponent?!fi(n,a)||!fi(s,u):!0}function of(e,t,n){var a=!1,s=In,u=t.contextType;return typeof u=="object"&&u!==null?u=xr(u):(s=Xt(t)?Jn:Lt.current,a=t.contextTypes,u=(a=a!=null)?Lo(e,s):In),t=new t(n,u),e.memoizedState=t.state!==null&&t.state!==void 0?t.state:null,t.updater=Wa,e.stateNode=t,t._reactInternals=e,a&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=s,e.__reactInternalMemoizedMaskedChildContext=u),t}function af(e,t,n,a){e=t.state,typeof t.componentWillReceiveProps=="function"&&t.componentWillReceiveProps(n,a),typeof t.UNSAFE_componentWillReceiveProps=="function"&&t.UNSAFE_componentWillReceiveProps(n,a),t.state!==e&&Wa.enqueueReplaceState(t,t.state,null)}function $s(e,t,n,a){var s=e.stateNode;s.props=n,s.state=e.memoizedState,s.refs={},Ts(e);var u=t.contextType;typeof u=="object"&&u!==null?s.context=xr(u):(u=Xt(t)?Jn:Lt.current,s.context=Lo(e,u)),s.state=e.memoizedState,u=t.getDerivedStateFromProps,typeof u=="function"&&(Ws(e,t,u,n),s.state=e.memoizedState),typeof t.getDerivedStateFromProps=="function"||typeof s.getSnapshotBeforeUpdate=="function"||typeof s.UNSAFE_componentWillMount!="function"&&typeof s.componentWillMount!="function"||(t=s.state,typeof s.componentWillMount=="function"&&s.componentWillMount(),typeof s.UNSAFE_componentWillMount=="function"&&s.UNSAFE_componentWillMount(),t!==s.state&&Wa.enqueueReplaceState(s,s.state,null),Aa(e,n,s,a),s.state=e.memoizedState),typeof s.componentDidMount=="function"&&(e.flags|=4194308)}function Uo(e,t){try{var n="",a=t;do n+=we(a),a=a.return;while(a);var s=n}catch(u){s=`
Error generating stack: `+u.message+`
`+u.stack}return{value:e,source:t,stack:s,digest:null}}function Vs(e,t,n){return{value:e,source:null,stack:n??null,digest:t??null}}function Gs(e,t){try{console.error(t.value)}catch(n){setTimeout(function(){throw n})}}var fp=typeof WeakMap=="function"?WeakMap:Map;function lf(e,t,n){n=sn(-1,n),n.tag=3,n.payload={element:null};var a=t.value;return n.callback=function(){Xa||(Xa=!0,lc=a),Gs(e,t)},n}function sf(e,t,n){n=sn(-1,n),n.tag=3;var a=e.type.getDerivedStateFromError;if(typeof a=="function"){var s=t.value;n.payload=function(){return a(s)},n.callback=function(){Gs(e,t)}}var u=e.stateNode;return u!==null&&typeof u.componentDidCatch=="function"&&(n.callback=function(){Gs(e,t),typeof a!="function"&&(Ln===null?Ln=new Set([this]):Ln.add(this));var p=t.stack;this.componentDidCatch(t.value,{componentStack:p!==null?p:""})}),n}function cf(e,t,n){var a=e.pingCache;if(a===null){a=e.pingCache=new fp;var s=new Set;a.set(t,s)}else s=a.get(t),s===void 0&&(s=new Set,a.set(t,s));s.has(n)||(s.add(n),e=Cp.bind(null,e,t,n),t.then(e,e))}function uf(e){do{var t;if((t=e.tag===13)&&(t=e.memoizedState,t=t!==null?t.dehydrated!==null:!0),t)return e;e=e.return}while(e!==null);return null}function df(e,t,n,a,s){return(e.mode&1)===0?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,n.tag===1&&(n.alternate===null?n.tag=17:(t=sn(-1,1),t.tag=2,Mn(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=s,e)}var mp=Z.ReactCurrentOwner,Jt=!1;function Ut(e,t,n,a){t.child=e===null?Td(t,null,n,a):Oo(t,e.child,n,a)}function ff(e,t,n,a,s){n=n.render;var u=t.ref;return Do(t,s),a=Os(e,t,n,a,u,s),n=Bs(),e!==null&&!Jt?(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~s,cn(e,t,s)):(at&&n&&xs(t),t.flags|=1,Ut(e,t,a,s),t.child)}function mf(e,t,n,a,s){if(e===null){var u=n.type;return typeof u=="function"&&!gc(u)&&u.defaultProps===void 0&&n.compare===null&&n.defaultProps===void 0?(t.tag=15,t.type=u,gf(e,t,u,a,s)):(e=rl(n.type,null,a,t,t.mode,s),e.ref=t.ref,e.return=t,t.child=e)}if(u=e.child,(e.lanes&s)===0){var p=u.memoizedProps;if(n=n.compare,n=n!==null?n:fi,n(p,a)&&e.ref===t.ref)return cn(e,t,s)}return t.flags|=1,e=On(u,a),e.ref=t.ref,e.return=t,t.child=e}function gf(e,t,n,a,s){if(e!==null){var u=e.memoizedProps;if(fi(u,a)&&e.ref===t.ref)if(Jt=!1,t.pendingProps=a=u,(e.lanes&s)!==0)(e.flags&131072)!==0&&(Jt=!0);else return t.lanes=e.lanes,cn(e,t,s)}return Qs(e,t,n,a,s)}function hf(e,t,n){var a=t.pendingProps,s=a.children,u=e!==null?e.memoizedState:null;if(a.mode==="hidden")if((t.mode&1)===0)t.memoizedState={baseLanes:0,cachePool:null,transitions:null},rt(Wo,lr),lr|=n;else{if((n&1073741824)===0)return e=u!==null?u.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,rt(Wo,lr),lr|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},a=u!==null?u.baseLanes:n,rt(Wo,lr),lr|=a}else u!==null?(a=u.baseLanes|n,t.memoizedState=null):a=n,rt(Wo,lr),lr|=a;return Ut(e,t,s,n),t.child}function pf(e,t){var n=t.ref;(e===null&&n!==null||e!==null&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Qs(e,t,n,a,s){var u=Xt(n)?Jn:Lt.current;return u=Lo(t,u),Do(t,s),n=Os(e,t,n,a,u,s),a=Bs(),e!==null&&!Jt?(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~s,cn(e,t,s)):(at&&a&&xs(t),t.flags|=1,Ut(e,t,n,s),t.child)}function vf(e,t,n,a,s){if(Xt(n)){var u=!0;_a(t)}else u=!1;if(Do(t,s),t.stateNode===null)Va(e,t),of(t,n,a),$s(t,n,a,s),a=!0;else if(e===null){var p=t.stateNode,x=t.memoizedProps;p.props=x;var P=p.context,A=n.contextType;typeof A=="object"&&A!==null?A=xr(A):(A=Xt(n)?Jn:Lt.current,A=Lo(t,A));var Q=n.getDerivedStateFromProps,Y=typeof Q=="function"||typeof p.getSnapshotBeforeUpdate=="function";Y||typeof p.UNSAFE_componentWillReceiveProps!="function"&&typeof p.componentWillReceiveProps!="function"||(x!==a||P!==A)&&af(t,p,a,A),Tn=!1;var G=t.memoizedState;p.state=G,Aa(t,a,p,s),P=t.memoizedState,x!==a||G!==P||Yt.current||Tn?(typeof Q=="function"&&(Ws(t,n,Q,a),P=t.memoizedState),(x=Tn||nf(t,n,x,a,G,P,A))?(Y||typeof p.UNSAFE_componentWillMount!="function"&&typeof p.componentWillMount!="function"||(typeof p.componentWillMount=="function"&&p.componentWillMount(),typeof p.UNSAFE_componentWillMount=="function"&&p.UNSAFE_componentWillMount()),typeof p.componentDidMount=="function"&&(t.flags|=4194308)):(typeof p.componentDidMount=="function"&&(t.flags|=4194308),t.memoizedProps=a,t.memoizedState=P),p.props=a,p.state=P,p.context=A,a=x):(typeof p.componentDidMount=="function"&&(t.flags|=4194308),a=!1)}else{p=t.stateNode,Nd(e,t),x=t.memoizedProps,A=t.type===t.elementType?x:Fr(t.type,x),p.props=A,Y=t.pendingProps,G=p.context,P=n.contextType,typeof P=="object"&&P!==null?P=xr(P):(P=Xt(n)?Jn:Lt.current,P=Lo(t,P));var le=n.getDerivedStateFromProps;(Q=typeof le=="function"||typeof p.getSnapshotBeforeUpdate=="function")||typeof p.UNSAFE_componentWillReceiveProps!="function"&&typeof p.componentWillReceiveProps!="function"||(x!==Y||G!==P)&&af(t,p,a,P),Tn=!1,G=t.memoizedState,p.state=G,Aa(t,a,p,s);var ge=t.memoizedState;x!==Y||G!==ge||Yt.current||Tn?(typeof le=="function"&&(Ws(t,n,le,a),ge=t.memoizedState),(A=Tn||nf(t,n,A,a,G,ge,P)||!1)?(Q||typeof p.UNSAFE_componentWillUpdate!="function"&&typeof p.componentWillUpdate!="function"||(typeof p.componentWillUpdate=="function"&&p.componentWillUpdate(a,ge,P),typeof p.UNSAFE_componentWillUpdate=="function"&&p.UNSAFE_componentWillUpdate(a,ge,P)),typeof p.componentDidUpdate=="function"&&(t.flags|=4),typeof p.getSnapshotBeforeUpdate=="function"&&(t.flags|=1024)):(typeof p.componentDidUpdate!="function"||x===e.memoizedProps&&G===e.memoizedState||(t.flags|=4),typeof p.getSnapshotBeforeUpdate!="function"||x===e.memoizedProps&&G===e.memoizedState||(t.flags|=1024),t.memoizedProps=a,t.memoizedState=ge),p.props=a,p.state=ge,p.context=P,a=A):(typeof p.componentDidUpdate!="function"||x===e.memoizedProps&&G===e.memoizedState||(t.flags|=4),typeof p.getSnapshotBeforeUpdate!="function"||x===e.memoizedProps&&G===e.memoizedState||(t.flags|=1024),a=!1)}return Zs(e,t,n,a,u,s)}function Zs(e,t,n,a,s,u){pf(e,t);var p=(t.flags&128)!==0;if(!a&&!p)return s&&wd(t,n,!1),cn(e,t,u);a=t.stateNode,mp.current=t;var x=p&&typeof n.getDerivedStateFromError!="function"?null:a.render();return t.flags|=1,e!==null&&p?(t.child=Oo(t,e.child,null,u),t.child=Oo(t,null,x,u)):Ut(e,t,x,u),t.memoizedState=a.state,s&&wd(t,n,!0),t.child}function bf(e){var t=e.stateNode;t.pendingContext?yd(e,t.pendingContext,t.pendingContext!==t.context):t.context&&yd(e,t.context,!1),Ms(e,t.containerInfo)}function yf(e,t,n,a,s){return Ao(),Ps(s),t.flags|=256,Ut(e,t,n,a),t.child}var Ys={dehydrated:null,treeContext:null,retryLane:0};function Xs(e){return{baseLanes:e,cachePool:null,transitions:null}}function xf(e,t,n){var a=t.pendingProps,s=st.current,u=!1,p=(t.flags&128)!==0,x;if((x=p)||(x=e!==null&&e.memoizedState===null?!1:(s&2)!==0),x?(u=!0,t.flags&=-129):(e===null||e.memoizedState!==null)&&(s|=1),rt(st,s&1),e===null)return Es(t),e=t.memoizedState,e!==null&&(e=e.dehydrated,e!==null)?((t.mode&1)===0?t.lanes=1:e.data==="$!"?t.lanes=8:t.lanes=1073741824,null):(p=a.children,e=a.fallback,u?(a=t.mode,u=t.child,p={mode:"hidden",children:p},(a&1)===0&&u!==null?(u.childLanes=0,u.pendingProps=p):u=nl(p,a,0,null),e=lo(e,a,n,null),u.return=t,e.return=t,u.sibling=e,t.child=u,t.child.memoizedState=Xs(n),t.memoizedState=Ys,e):Js(t,p));if(s=e.memoizedState,s!==null&&(x=s.dehydrated,x!==null))return gp(e,t,p,a,x,s,n);if(u){u=a.fallback,p=t.mode,s=e.child,x=s.sibling;var P={mode:"hidden",children:a.children};return(p&1)===0&&t.child!==s?(a=t.child,a.childLanes=0,a.pendingProps=P,t.deletions=null):(a=On(s,P),a.subtreeFlags=s.subtreeFlags&14680064),x!==null?u=On(x,u):(u=lo(u,p,n,null),u.flags|=2),u.return=t,a.return=t,a.sibling=u,t.child=a,a=u,u=t.child,p=e.child.memoizedState,p=p===null?Xs(n):{baseLanes:p.baseLanes|n,cachePool:null,transitions:p.transitions},u.memoizedState=p,u.childLanes=e.childLanes&~n,t.memoizedState=Ys,a}return u=e.child,e=u.sibling,a=On(u,{mode:"visible",children:a.children}),(t.mode&1)===0&&(a.lanes=n),a.return=t,a.sibling=null,e!==null&&(n=t.deletions,n===null?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=a,t.memoizedState=null,a}function Js(e,t){return t=nl({mode:"visible",children:t},e.mode,0,null),t.return=e,e.child=t}function $a(e,t,n,a){return a!==null&&Ps(a),Oo(t,e.child,null,n),e=Js(t,t.pendingProps.children),e.flags|=2,t.memoizedState=null,e}function gp(e,t,n,a,s,u,p){if(n)return t.flags&256?(t.flags&=-257,a=Vs(Error(i(422))),$a(e,t,p,a)):t.memoizedState!==null?(t.child=e.child,t.flags|=128,null):(u=a.fallback,s=t.mode,a=nl({mode:"visible",children:a.children},s,0,null),u=lo(u,s,p,null),u.flags|=2,a.return=t,u.return=t,a.sibling=u,t.child=a,(t.mode&1)!==0&&Oo(t,e.child,null,p),t.child.memoizedState=Xs(p),t.memoizedState=Ys,u);if((t.mode&1)===0)return $a(e,t,p,null);if(s.data==="$!"){if(a=s.nextSibling&&s.nextSibling.dataset,a)var x=a.dgst;return a=x,u=Error(i(419)),a=Vs(u,a,void 0),$a(e,t,p,a)}if(x=(p&e.childLanes)!==0,Jt||x){if(a=wt,a!==null){switch(p&-p){case 4:s=2;break;case 16:s=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:s=32;break;case 536870912:s=268435456;break;default:s=0}s=(s&(a.suspendedLanes|p))!==0?0:s,s!==0&&s!==u.retryLane&&(u.retryLane=s,ln(e,s),Or(a,e,s,-1))}return mc(),a=Vs(Error(i(421))),$a(e,t,p,a)}return s.data==="$?"?(t.flags|=128,t.child=e.child,t=_p.bind(null,e),s._reactRetry=t,null):(e=u.treeContext,ar=Cn(s.nextSibling),ir=t,at=!0,Lr=null,e!==null&&(br[yr++]=on,br[yr++]=an,br[yr++]=qn,on=e.id,an=e.overflow,qn=t),t=Js(t,a.children),t.flags|=4096,t)}function wf(e,t,n){e.lanes|=t;var a=e.alternate;a!==null&&(a.lanes|=t),Is(e.return,t,n)}function qs(e,t,n,a,s){var u=e.memoizedState;u===null?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:a,tail:n,tailMode:s}:(u.isBackwards=t,u.rendering=null,u.renderingStartTime=0,u.last=a,u.tail=n,u.tailMode=s)}function Sf(e,t,n){var a=t.pendingProps,s=a.revealOrder,u=a.tail;if(Ut(e,t,a.children,n),a=st.current,(a&2)!==0)a=a&1|2,t.flags|=128;else{if(e!==null&&(e.flags&128)!==0)e:for(e=t.child;e!==null;){if(e.tag===13)e.memoizedState!==null&&wf(e,n,t);else if(e.tag===19)wf(e,n,t);else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;e.sibling===null;){if(e.return===null||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}a&=1}if(rt(st,a),(t.mode&1)===0)t.memoizedState=null;else switch(s){case"forwards":for(n=t.child,s=null;n!==null;)e=n.alternate,e!==null&&Oa(e)===null&&(s=n),n=n.sibling;n=s,n===null?(s=t.child,t.child=null):(s=n.sibling,n.sibling=null),qs(t,!1,s,n,u);break;case"backwards":for(n=null,s=t.child,t.child=null;s!==null;){if(e=s.alternate,e!==null&&Oa(e)===null){t.child=s;break}e=s.sibling,s.sibling=n,n=s,s=e}qs(t,!0,n,null,u);break;case"together":qs(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Va(e,t){(t.mode&1)===0&&e!==null&&(e.alternate=null,t.alternate=null,t.flags|=2)}function cn(e,t,n){if(e!==null&&(t.dependencies=e.dependencies),no|=t.lanes,(n&t.childLanes)===0)return null;if(e!==null&&t.child!==e.child)throw Error(i(153));if(t.child!==null){for(e=t.child,n=On(e,e.pendingProps),t.child=n,n.return=t;e.sibling!==null;)e=e.sibling,n=n.sibling=On(e,e.pendingProps),n.return=t;n.sibling=null}return t.child}function hp(e,t,n){switch(t.tag){case 3:bf(t),Ao();break;case 5:zd(t);break;case 1:Xt(t.type)&&_a(t);break;case 4:Ms(t,t.stateNode.containerInfo);break;case 10:var a=t.type._context,s=t.memoizedProps.value;rt(La,a._currentValue),a._currentValue=s;break;case 13:if(a=t.memoizedState,a!==null)return a.dehydrated!==null?(rt(st,st.current&1),t.flags|=128,null):(n&t.child.childLanes)!==0?xf(e,t,n):(rt(st,st.current&1),e=cn(e,t,n),e!==null?e.sibling:null);rt(st,st.current&1);break;case 19:if(a=(n&t.childLanes)!==0,(e.flags&128)!==0){if(a)return Sf(e,t,n);t.flags|=128}if(s=t.memoizedState,s!==null&&(s.rendering=null,s.tail=null,s.lastEffect=null),rt(st,st.current),a)break;return null;case 22:case 23:return t.lanes=0,hf(e,t,n)}return cn(e,t,n)}var Ef,Ks,Pf,kf;Ef=function(e,t){for(var n=t.child;n!==null;){if(n.tag===5||n.tag===6)e.appendChild(n.stateNode);else if(n.tag!==4&&n.child!==null){n.child.return=n,n=n.child;continue}if(n===t)break;for(;n.sibling===null;){if(n.return===null||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ks=function(){},Pf=function(e,t,n,a){var s=e.memoizedProps;if(s!==a){e=t.stateNode,to(Wr.current);var u=null;switch(n){case"input":s=Ir(e,s),a=Ir(e,a),u=[];break;case"select":s=q({},s,{value:void 0}),a=q({},a,{value:void 0}),u=[];break;case"textarea":s=Xr(e,s),a=Xr(e,a),u=[];break;default:typeof s.onClick!="function"&&typeof a.onClick=="function"&&(e.onclick=Pa)}mr(n,a);var p;n=null;for(A in s)if(!a.hasOwnProperty(A)&&s.hasOwnProperty(A)&&s[A]!=null)if(A==="style"){var x=s[A];for(p in x)x.hasOwnProperty(p)&&(n||(n={}),n[p]="")}else A!=="dangerouslySetInnerHTML"&&A!=="children"&&A!=="suppressContentEditableWarning"&&A!=="suppressHydrationWarning"&&A!=="autoFocus"&&(c.hasOwnProperty(A)?u||(u=[]):(u=u||[]).push(A,null));for(A in a){var P=a[A];if(x=s!=null?s[A]:void 0,a.hasOwnProperty(A)&&P!==x&&(P!=null||x!=null))if(A==="style")if(x){for(p in x)!x.hasOwnProperty(p)||P&&P.hasOwnProperty(p)||(n||(n={}),n[p]="");for(p in P)P.hasOwnProperty(p)&&x[p]!==P[p]&&(n||(n={}),n[p]=P[p])}else n||(u||(u=[]),u.push(A,n)),n=P;else A==="dangerouslySetInnerHTML"?(P=P?P.__html:void 0,x=x?x.__html:void 0,P!=null&&x!==P&&(u=u||[]).push(A,P)):A==="children"?typeof P!="string"&&typeof P!="number"||(u=u||[]).push(A,""+P):A!=="suppressContentEditableWarning"&&A!=="suppressHydrationWarning"&&(c.hasOwnProperty(A)?(P!=null&&A==="onScroll"&&nt("scroll",e),u||x===P||(u=[])):(u=u||[]).push(A,P))}n&&(u=u||[]).push("style",n);var A=u;(t.updateQueue=A)&&(t.flags|=4)}},kf=function(e,t,n,a){n!==a&&(t.flags|=4)};function _i(e,t){if(!at)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;t!==null;)t.alternate!==null&&(n=t),t=t.sibling;n===null?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var a=null;n!==null;)n.alternate!==null&&(a=n),n=n.sibling;a===null?t||e.tail===null?e.tail=null:e.tail.sibling=null:a.sibling=null}}function zt(e){var t=e.alternate!==null&&e.alternate.child===e.child,n=0,a=0;if(t)for(var s=e.child;s!==null;)n|=s.lanes|s.childLanes,a|=s.subtreeFlags&14680064,a|=s.flags&14680064,s.return=e,s=s.sibling;else for(s=e.child;s!==null;)n|=s.lanes|s.childLanes,a|=s.subtreeFlags,a|=s.flags,s.return=e,s=s.sibling;return e.subtreeFlags|=a,e.childLanes=n,t}function pp(e,t,n){var a=t.pendingProps;switch(ws(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return zt(t),null;case 1:return Xt(t.type)&&Ca(),zt(t),null;case 3:return a=t.stateNode,jo(),ot(Yt),ot(Lt),Fs(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),(e===null||e.child===null)&&(Ma(t)?t.flags|=4:e===null||e.memoizedState.isDehydrated&&(t.flags&256)===0||(t.flags|=1024,Lr!==null&&(uc(Lr),Lr=null))),Ks(e,t),zt(t),null;case 5:Ns(t);var s=to(Si.current);if(n=t.type,e!==null&&t.stateNode!=null)Pf(e,t,n,a,s),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!a){if(t.stateNode===null)throw Error(i(166));return zt(t),null}if(e=to(Wr.current),Ma(t)){a=t.stateNode,n=t.type;var u=t.memoizedProps;switch(a[Hr]=t,a[vi]=u,e=(t.mode&1)!==0,n){case"dialog":nt("cancel",a),nt("close",a);break;case"iframe":case"object":case"embed":nt("load",a);break;case"video":case"audio":for(s=0;s<gi.length;s++)nt(gi[s],a);break;case"source":nt("error",a);break;case"img":case"image":case"link":nt("error",a),nt("load",a);break;case"details":nt("toggle",a);break;case"input":$n(a,u),nt("invalid",a);break;case"select":a._wrapperState={wasMultiple:!!u.multiple},nt("invalid",a);break;case"textarea":xo(a,u),nt("invalid",a)}mr(n,u),s=null;for(var p in u)if(u.hasOwnProperty(p)){var x=u[p];p==="children"?typeof x=="string"?a.textContent!==x&&(u.suppressHydrationWarning!==!0&&Ea(a.textContent,x,e),s=["children",x]):typeof x=="number"&&a.textContent!==""+x&&(u.suppressHydrationWarning!==!0&&Ea(a.textContent,x,e),s=["children",""+x]):c.hasOwnProperty(p)&&x!=null&&p==="onScroll"&&nt("scroll",a)}switch(n){case"input":ft(a),hn(a,u,!0);break;case"textarea":ft(a),Ve(a);break;case"select":case"option":break;default:typeof u.onClick=="function"&&(a.onclick=Pa)}a=s,t.updateQueue=a,a!==null&&(t.flags|=4)}else{p=s.nodeType===9?s:s.ownerDocument,e==="http://www.w3.org/1999/xhtml"&&(e=pn(n)),e==="http://www.w3.org/1999/xhtml"?n==="script"?(e=p.createElement("div"),e.innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):typeof a.is=="string"?e=p.createElement(n,{is:a.is}):(e=p.createElement(n),n==="select"&&(p=e,a.multiple?p.multiple=!0:a.size&&(p.size=a.size))):e=p.createElementNS(e,n),e[Hr]=t,e[vi]=a,Ef(e,t,!1,!1),t.stateNode=e;e:{switch(p=bn(n,a),n){case"dialog":nt("cancel",e),nt("close",e),s=a;break;case"iframe":case"object":case"embed":nt("load",e),s=a;break;case"video":case"audio":for(s=0;s<gi.length;s++)nt(gi[s],e);s=a;break;case"source":nt("error",e),s=a;break;case"img":case"image":case"link":nt("error",e),nt("load",e),s=a;break;case"details":nt("toggle",e),s=a;break;case"input":$n(e,a),s=Ir(e,a),nt("invalid",e);break;case"option":s=a;break;case"select":e._wrapperState={wasMultiple:!!a.multiple},s=q({},a,{value:void 0}),nt("invalid",e);break;case"textarea":xo(e,a),s=Xr(e,a),nt("invalid",e);break;default:s=a}mr(n,s),x=s;for(u in x)if(x.hasOwnProperty(u)){var P=x[u];u==="style"?Jr(e,P):u==="dangerouslySetInnerHTML"?(P=P?P.__html:void 0,P!=null&&Nt(e,P)):u==="children"?typeof P=="string"?(n!=="textarea"||P!=="")&&fr(e,P):typeof P=="number"&&fr(e,""+P):u!=="suppressContentEditableWarning"&&u!=="suppressHydrationWarning"&&u!=="autoFocus"&&(c.hasOwnProperty(u)?P!=null&&u==="onScroll"&&nt("scroll",e):P!=null&&H(e,u,P,p))}switch(n){case"input":ft(e),hn(e,a,!1);break;case"textarea":ft(e),Ve(e);break;case"option":a.value!=null&&e.setAttribute("value",""+Fe(a.value));break;case"select":e.multiple=!!a.multiple,u=a.value,u!=null?Gt(e,!!a.multiple,u,!1):a.defaultValue!=null&&Gt(e,!!a.multiple,a.defaultValue,!0);break;default:typeof s.onClick=="function"&&(e.onclick=Pa)}switch(n){case"button":case"input":case"select":case"textarea":a=!!a.autoFocus;break e;case"img":a=!0;break e;default:a=!1}}a&&(t.flags|=4)}t.ref!==null&&(t.flags|=512,t.flags|=2097152)}return zt(t),null;case 6:if(e&&t.stateNode!=null)kf(e,t,e.memoizedProps,a);else{if(typeof a!="string"&&t.stateNode===null)throw Error(i(166));if(n=to(Si.current),to(Wr.current),Ma(t)){if(a=t.stateNode,n=t.memoizedProps,a[Hr]=t,(u=a.nodeValue!==n)&&(e=ir,e!==null))switch(e.tag){case 3:Ea(a.nodeValue,n,(e.mode&1)!==0);break;case 5:e.memoizedProps.suppressHydrationWarning!==!0&&Ea(a.nodeValue,n,(e.mode&1)!==0)}u&&(t.flags|=4)}else a=(n.nodeType===9?n:n.ownerDocument).createTextNode(a),a[Hr]=t,t.stateNode=a}return zt(t),null;case 13:if(ot(st),a=t.memoizedState,e===null||e.memoizedState!==null&&e.memoizedState.dehydrated!==null){if(at&&ar!==null&&(t.mode&1)!==0&&(t.flags&128)===0)_d(),Ao(),t.flags|=98560,u=!1;else if(u=Ma(t),a!==null&&a.dehydrated!==null){if(e===null){if(!u)throw Error(i(318));if(u=t.memoizedState,u=u!==null?u.dehydrated:null,!u)throw Error(i(317));u[Hr]=t}else Ao(),(t.flags&128)===0&&(t.memoizedState=null),t.flags|=4;zt(t),u=!1}else Lr!==null&&(uc(Lr),Lr=null),u=!0;if(!u)return t.flags&65536?t:null}return(t.flags&128)!==0?(t.lanes=n,t):(a=a!==null,a!==(e!==null&&e.memoizedState!==null)&&a&&(t.child.flags|=8192,(t.mode&1)!==0&&(e===null||(st.current&1)!==0?bt===0&&(bt=3):mc())),t.updateQueue!==null&&(t.flags|=4),zt(t),null);case 4:return jo(),Ks(e,t),e===null&&hi(t.stateNode.containerInfo),zt(t),null;case 10:return _s(t.type._context),zt(t),null;case 17:return Xt(t.type)&&Ca(),zt(t),null;case 19:if(ot(st),u=t.memoizedState,u===null)return zt(t),null;if(a=(t.flags&128)!==0,p=u.rendering,p===null)if(a)_i(u,!1);else{if(bt!==0||e!==null&&(e.flags&128)!==0)for(e=t.child;e!==null;){if(p=Oa(e),p!==null){for(t.flags|=128,_i(u,!1),a=p.updateQueue,a!==null&&(t.updateQueue=a,t.flags|=4),t.subtreeFlags=0,a=n,n=t.child;n!==null;)u=n,e=a,u.flags&=14680066,p=u.alternate,p===null?(u.childLanes=0,u.lanes=e,u.child=null,u.subtreeFlags=0,u.memoizedProps=null,u.memoizedState=null,u.updateQueue=null,u.dependencies=null,u.stateNode=null):(u.childLanes=p.childLanes,u.lanes=p.lanes,u.child=p.child,u.subtreeFlags=0,u.deletions=null,u.memoizedProps=p.memoizedProps,u.memoizedState=p.memoizedState,u.updateQueue=p.updateQueue,u.type=p.type,e=p.dependencies,u.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return rt(st,st.current&1|2),t.child}e=e.sibling}u.tail!==null&&He()>$o&&(t.flags|=128,a=!0,_i(u,!1),t.lanes=4194304)}else{if(!a)if(e=Oa(p),e!==null){if(t.flags|=128,a=!0,n=e.updateQueue,n!==null&&(t.updateQueue=n,t.flags|=4),_i(u,!0),u.tail===null&&u.tailMode==="hidden"&&!p.alternate&&!at)return zt(t),null}else 2*He()-u.renderingStartTime>$o&&n!==1073741824&&(t.flags|=128,a=!0,_i(u,!1),t.lanes=4194304);u.isBackwards?(p.sibling=t.child,t.child=p):(n=u.last,n!==null?n.sibling=p:t.child=p,u.last=p)}return u.tail!==null?(t=u.tail,u.rendering=t,u.tail=t.sibling,u.renderingStartTime=He(),t.sibling=null,n=st.current,rt(st,a?n&1|2:n&1),t):(zt(t),null);case 22:case 23:return fc(),a=t.memoizedState!==null,e!==null&&e.memoizedState!==null!==a&&(t.flags|=8192),a&&(t.mode&1)!==0?(lr&1073741824)!==0&&(zt(t),t.subtreeFlags&6&&(t.flags|=8192)):zt(t),null;case 24:return null;case 25:return null}throw Error(i(156,t.tag))}function vp(e,t){switch(ws(t),t.tag){case 1:return Xt(t.type)&&Ca(),e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 3:return jo(),ot(Yt),ot(Lt),Fs(),e=t.flags,(e&65536)!==0&&(e&128)===0?(t.flags=e&-65537|128,t):null;case 5:return Ns(t),null;case 13:if(ot(st),e=t.memoizedState,e!==null&&e.dehydrated!==null){if(t.alternate===null)throw Error(i(340));Ao()}return e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 19:return ot(st),null;case 4:return jo(),null;case 10:return _s(t.type._context),null;case 22:case 23:return fc(),null;case 24:return null;default:return null}}var Ga=!1,At=!1,bp=typeof WeakSet=="function"?WeakSet:Set,de=null;function Ho(e,t){var n=e.ref;if(n!==null)if(typeof n=="function")try{n(null)}catch(a){dt(e,t,a)}else n.current=null}function ec(e,t,n){try{n()}catch(a){dt(e,t,a)}}var Cf=!1;function yp(e,t){if(fs=fa,e=nd(),os(e)){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{n=(n=e.ownerDocument)&&n.defaultView||window;var a=n.getSelection&&n.getSelection();if(a&&a.rangeCount!==0){n=a.anchorNode;var s=a.anchorOffset,u=a.focusNode;a=a.focusOffset;try{n.nodeType,u.nodeType}catch{n=null;break e}var p=0,x=-1,P=-1,A=0,Q=0,Y=e,G=null;t:for(;;){for(var le;Y!==n||s!==0&&Y.nodeType!==3||(x=p+s),Y!==u||a!==0&&Y.nodeType!==3||(P=p+a),Y.nodeType===3&&(p+=Y.nodeValue.length),(le=Y.firstChild)!==null;)G=Y,Y=le;for(;;){if(Y===e)break t;if(G===n&&++A===s&&(x=p),G===u&&++Q===a&&(P=p),(le=Y.nextSibling)!==null)break;Y=G,G=Y.parentNode}Y=le}n=x===-1||P===-1?null:{start:x,end:P}}else n=null}n=n||{start:0,end:0}}else n=null;for(ms={focusedElem:e,selectionRange:n},fa=!1,de=t;de!==null;)if(t=de,e=t.child,(t.subtreeFlags&1028)!==0&&e!==null)e.return=t,de=e;else for(;de!==null;){t=de;try{var ge=t.alternate;if((t.flags&1024)!==0)switch(t.tag){case 0:case 11:case 15:break;case 1:if(ge!==null){var he=ge.memoizedProps,mt=ge.memoizedState,N=t.stateNode,_=N.getSnapshotBeforeUpdate(t.elementType===t.type?he:Fr(t.type,he),mt);N.__reactInternalSnapshotBeforeUpdate=_}break;case 3:var F=t.stateNode.containerInfo;F.nodeType===1?F.textContent="":F.nodeType===9&&F.documentElement&&F.removeChild(F.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(i(163))}}catch(J){dt(t,t.return,J)}if(e=t.sibling,e!==null){e.return=t.return,de=e;break}de=t.return}return ge=Cf,Cf=!1,ge}function Ii(e,t,n){var a=t.updateQueue;if(a=a!==null?a.lastEffect:null,a!==null){var s=a=a.next;do{if((s.tag&e)===e){var u=s.destroy;s.destroy=void 0,u!==void 0&&ec(t,n,u)}s=s.next}while(s!==a)}}function Qa(e,t){if(t=t.updateQueue,t=t!==null?t.lastEffect:null,t!==null){var n=t=t.next;do{if((n.tag&e)===e){var a=n.create;n.destroy=a()}n=n.next}while(n!==t)}}function tc(e){var t=e.ref;if(t!==null){var n=e.stateNode;switch(e.tag){case 5:e=n;break;default:e=n}typeof t=="function"?t(e):t.current=e}}function _f(e){var t=e.alternate;t!==null&&(e.alternate=null,_f(t)),e.child=null,e.deletions=null,e.sibling=null,e.tag===5&&(t=e.stateNode,t!==null&&(delete t[Hr],delete t[vi],delete t[vs],delete t[tp],delete t[rp])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function If(e){return e.tag===5||e.tag===3||e.tag===4}function Rf(e){e:for(;;){for(;e.sibling===null;){if(e.return===null||If(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;e.tag!==5&&e.tag!==6&&e.tag!==18;){if(e.flags&2||e.child===null||e.tag===4)continue e;e.child.return=e,e=e.child}if(!(e.flags&2))return e.stateNode}}function rc(e,t,n){var a=e.tag;if(a===5||a===6)e=e.stateNode,t?n.nodeType===8?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(n.nodeType===8?(t=n.parentNode,t.insertBefore(e,n)):(t=n,t.appendChild(e)),n=n._reactRootContainer,n!=null||t.onclick!==null||(t.onclick=Pa));else if(a!==4&&(e=e.child,e!==null))for(rc(e,t,n),e=e.sibling;e!==null;)rc(e,t,n),e=e.sibling}function nc(e,t,n){var a=e.tag;if(a===5||a===6)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(a!==4&&(e=e.child,e!==null))for(nc(e,t,n),e=e.sibling;e!==null;)nc(e,t,n),e=e.sibling}var Ct=null,zr=!1;function Nn(e,t,n){for(n=n.child;n!==null;)Tf(e,t,n),n=n.sibling}function Tf(e,t,n){if(ee&&typeof ee.onCommitFiberUnmount=="function")try{ee.onCommitFiberUnmount(Je,n)}catch{}switch(n.tag){case 5:At||Ho(n,t);case 6:var a=Ct,s=zr;Ct=null,Nn(e,t,n),Ct=a,zr=s,Ct!==null&&(zr?(e=Ct,n=n.stateNode,e.nodeType===8?e.parentNode.removeChild(n):e.removeChild(n)):Ct.removeChild(n.stateNode));break;case 18:Ct!==null&&(zr?(e=Ct,n=n.stateNode,e.nodeType===8?ps(e.parentNode,n):e.nodeType===1&&ps(e,n),ai(e)):ps(Ct,n.stateNode));break;case 4:a=Ct,s=zr,Ct=n.stateNode.containerInfo,zr=!0,Nn(e,t,n),Ct=a,zr=s;break;case 0:case 11:case 14:case 15:if(!At&&(a=n.updateQueue,a!==null&&(a=a.lastEffect,a!==null))){s=a=a.next;do{var u=s,p=u.destroy;u=u.tag,p!==void 0&&((u&2)!==0||(u&4)!==0)&&ec(n,t,p),s=s.next}while(s!==a)}Nn(e,t,n);break;case 1:if(!At&&(Ho(n,t),a=n.stateNode,typeof a.componentWillUnmount=="function"))try{a.props=n.memoizedProps,a.state=n.memoizedState,a.componentWillUnmount()}catch(x){dt(n,t,x)}Nn(e,t,n);break;case 21:Nn(e,t,n);break;case 22:n.mode&1?(At=(a=At)||n.memoizedState!==null,Nn(e,t,n),At=a):Nn(e,t,n);break;default:Nn(e,t,n)}}function Mf(e){var t=e.updateQueue;if(t!==null){e.updateQueue=null;var n=e.stateNode;n===null&&(n=e.stateNode=new bp),t.forEach(function(a){var s=Ip.bind(null,e,a);n.has(a)||(n.add(a),a.then(s,s))})}}function Ar(e,t){var n=t.deletions;if(n!==null)for(var a=0;a<n.length;a++){var s=n[a];try{var u=e,p=t,x=p;e:for(;x!==null;){switch(x.tag){case 5:Ct=x.stateNode,zr=!1;break e;case 3:Ct=x.stateNode.containerInfo,zr=!0;break e;case 4:Ct=x.stateNode.containerInfo,zr=!0;break e}x=x.return}if(Ct===null)throw Error(i(160));Tf(u,p,s),Ct=null,zr=!1;var P=s.alternate;P!==null&&(P.return=null),s.return=null}catch(A){dt(s,t,A)}}if(t.subtreeFlags&12854)for(t=t.child;t!==null;)Nf(t,e),t=t.sibling}function Nf(e,t){var n=e.alternate,a=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(Ar(t,e),Vr(e),a&4){try{Ii(3,e,e.return),Qa(3,e)}catch(he){dt(e,e.return,he)}try{Ii(5,e,e.return)}catch(he){dt(e,e.return,he)}}break;case 1:Ar(t,e),Vr(e),a&512&&n!==null&&Ho(n,n.return);break;case 5:if(Ar(t,e),Vr(e),a&512&&n!==null&&Ho(n,n.return),e.flags&32){var s=e.stateNode;try{fr(s,"")}catch(he){dt(e,e.return,he)}}if(a&4&&(s=e.stateNode,s!=null)){var u=e.memoizedProps,p=n!==null?n.memoizedProps:u,x=e.type,P=e.updateQueue;if(e.updateQueue=null,P!==null)try{x==="input"&&u.type==="radio"&&u.name!=null&&Vt(s,u),bn(x,p);var A=bn(x,u);for(p=0;p<P.length;p+=2){var Q=P[p],Y=P[p+1];Q==="style"?Jr(s,Y):Q==="dangerouslySetInnerHTML"?Nt(s,Y):Q==="children"?fr(s,Y):H(s,Q,Y,A)}switch(x){case"input":Vn(s,u);break;case"textarea":dr(s,u);break;case"select":var G=s._wrapperState.wasMultiple;s._wrapperState.wasMultiple=!!u.multiple;var le=u.value;le!=null?Gt(s,!!u.multiple,le,!1):G!==!!u.multiple&&(u.defaultValue!=null?Gt(s,!!u.multiple,u.defaultValue,!0):Gt(s,!!u.multiple,u.multiple?[]:"",!1))}s[vi]=u}catch(he){dt(e,e.return,he)}}break;case 6:if(Ar(t,e),Vr(e),a&4){if(e.stateNode===null)throw Error(i(162));s=e.stateNode,u=e.memoizedProps;try{s.nodeValue=u}catch(he){dt(e,e.return,he)}}break;case 3:if(Ar(t,e),Vr(e),a&4&&n!==null&&n.memoizedState.isDehydrated)try{ai(t.containerInfo)}catch(he){dt(e,e.return,he)}break;case 4:Ar(t,e),Vr(e);break;case 13:Ar(t,e),Vr(e),s=e.child,s.flags&8192&&(u=s.memoizedState!==null,s.stateNode.isHidden=u,!u||s.alternate!==null&&s.alternate.memoizedState!==null||(ac=He())),a&4&&Mf(e);break;case 22:if(Q=n!==null&&n.memoizedState!==null,e.mode&1?(At=(A=At)||Q,Ar(t,e),At=A):Ar(t,e),Vr(e),a&8192){if(A=e.memoizedState!==null,(e.stateNode.isHidden=A)&&!Q&&(e.mode&1)!==0)for(de=e,Q=e.child;Q!==null;){for(Y=de=Q;de!==null;){switch(G=de,le=G.child,G.tag){case 0:case 11:case 14:case 15:Ii(4,G,G.return);break;case 1:Ho(G,G.return);var ge=G.stateNode;if(typeof ge.componentWillUnmount=="function"){a=G,n=G.return;try{t=a,ge.props=t.memoizedProps,ge.state=t.memoizedState,ge.componentWillUnmount()}catch(he){dt(a,n,he)}}break;case 5:Ho(G,G.return);break;case 22:if(G.memoizedState!==null){zf(Y);continue}}le!==null?(le.return=G,de=le):zf(Y)}Q=Q.sibling}e:for(Q=null,Y=e;;){if(Y.tag===5){if(Q===null){Q=Y;try{s=Y.stateNode,A?(u=s.style,typeof u.setProperty=="function"?u.setProperty("display","none","important"):u.display="none"):(x=Y.stateNode,P=Y.memoizedProps.style,p=P!=null&&P.hasOwnProperty("display")?P.display:null,x.style.display=Bt("display",p))}catch(he){dt(e,e.return,he)}}}else if(Y.tag===6){if(Q===null)try{Y.stateNode.nodeValue=A?"":Y.memoizedProps}catch(he){dt(e,e.return,he)}}else if((Y.tag!==22&&Y.tag!==23||Y.memoizedState===null||Y===e)&&Y.child!==null){Y.child.return=Y,Y=Y.child;continue}if(Y===e)break e;for(;Y.sibling===null;){if(Y.return===null||Y.return===e)break e;Q===Y&&(Q=null),Y=Y.return}Q===Y&&(Q=null),Y.sibling.return=Y.return,Y=Y.sibling}}break;case 19:Ar(t,e),Vr(e),a&4&&Mf(e);break;case 21:break;default:Ar(t,e),Vr(e)}}function Vr(e){var t=e.flags;if(t&2){try{e:{for(var n=e.return;n!==null;){if(If(n)){var a=n;break e}n=n.return}throw Error(i(160))}switch(a.tag){case 5:var s=a.stateNode;a.flags&32&&(fr(s,""),a.flags&=-33);var u=Rf(e);nc(e,u,s);break;case 3:case 4:var p=a.stateNode.containerInfo,x=Rf(e);rc(e,x,p);break;default:throw Error(i(161))}}catch(P){dt(e,e.return,P)}e.flags&=-3}t&4096&&(e.flags&=-4097)}function xp(e,t,n){de=e,Lf(e)}function Lf(e,t,n){for(var a=(e.mode&1)!==0;de!==null;){var s=de,u=s.child;if(s.tag===22&&a){var p=s.memoizedState!==null||Ga;if(!p){var x=s.alternate,P=x!==null&&x.memoizedState!==null||At;x=Ga;var A=At;if(Ga=p,(At=P)&&!A)for(de=s;de!==null;)p=de,P=p.child,p.tag===22&&p.memoizedState!==null?Af(s):P!==null?(P.return=p,de=P):Af(s);for(;u!==null;)de=u,Lf(u),u=u.sibling;de=s,Ga=x,At=A}Ff(e)}else(s.subtreeFlags&8772)!==0&&u!==null?(u.return=s,de=u):Ff(e)}}function Ff(e){for(;de!==null;){var t=de;if((t.flags&8772)!==0){var n=t.alternate;try{if((t.flags&8772)!==0)switch(t.tag){case 0:case 11:case 15:At||Qa(5,t);break;case 1:var a=t.stateNode;if(t.flags&4&&!At)if(n===null)a.componentDidMount();else{var s=t.elementType===t.type?n.memoizedProps:Fr(t.type,n.memoizedProps);a.componentDidUpdate(s,n.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}var u=t.updateQueue;u!==null&&Fd(t,u,a);break;case 3:var p=t.updateQueue;if(p!==null){if(n=null,t.child!==null)switch(t.child.tag){case 5:n=t.child.stateNode;break;case 1:n=t.child.stateNode}Fd(t,p,n)}break;case 5:var x=t.stateNode;if(n===null&&t.flags&4){n=x;var P=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":P.autoFocus&&n.focus();break;case"img":P.src&&(n.src=P.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(t.memoizedState===null){var A=t.alternate;if(A!==null){var Q=A.memoizedState;if(Q!==null){var Y=Q.dehydrated;Y!==null&&ai(Y)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(i(163))}At||t.flags&512&&tc(t)}catch(G){dt(t,t.return,G)}}if(t===e){de=null;break}if(n=t.sibling,n!==null){n.return=t.return,de=n;break}de=t.return}}function zf(e){for(;de!==null;){var t=de;if(t===e){de=null;break}var n=t.sibling;if(n!==null){n.return=t.return,de=n;break}de=t.return}}function Af(e){for(;de!==null;){var t=de;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{Qa(4,t)}catch(P){dt(t,n,P)}break;case 1:var a=t.stateNode;if(typeof a.componentDidMount=="function"){var s=t.return;try{a.componentDidMount()}catch(P){dt(t,s,P)}}var u=t.return;try{tc(t)}catch(P){dt(t,u,P)}break;case 5:var p=t.return;try{tc(t)}catch(P){dt(t,p,P)}}}catch(P){dt(t,t.return,P)}if(t===e){de=null;break}var x=t.sibling;if(x!==null){x.return=t.return,de=x;break}de=t.return}}var wp=Math.ceil,Za=Z.ReactCurrentDispatcher,oc=Z.ReactCurrentOwner,Sr=Z.ReactCurrentBatchConfig,We=0,wt=null,ht=null,_t=0,lr=0,Wo=_n(0),bt=0,Ri=null,no=0,Ya=0,ic=0,Ti=null,qt=null,ac=0,$o=1/0,un=null,Xa=!1,lc=null,Ln=null,Ja=!1,Fn=null,qa=0,Mi=0,sc=null,Ka=-1,el=0;function Ht(){return(We&6)!==0?He():Ka!==-1?Ka:Ka=He()}function zn(e){return(e.mode&1)===0?1:(We&2)!==0&&_t!==0?_t&-_t:op.transition!==null?(el===0&&(el=Iu()),el):(e=Ke,e!==0||(e=window.event,e=e===void 0?16:Ou(e.type)),e)}function Or(e,t,n,a){if(50<Mi)throw Mi=0,sc=null,Error(i(185));ti(e,n,a),((We&2)===0||e!==wt)&&(e===wt&&((We&2)===0&&(Ya|=n),bt===4&&An(e,_t)),Kt(e,a),n===1&&We===0&&(t.mode&1)===0&&($o=He()+500,Ia&&Rn()))}function Kt(e,t){var n=e.callbackNode;oh(e,t);var a=ca(e,e===wt?_t:0);if(a===0)n!==null&&Mr(n),e.callbackNode=null,e.callbackPriority=0;else if(t=a&-a,e.callbackPriority!==t){if(n!=null&&Mr(n),t===1)e.tag===0?np(Bf.bind(null,e)):Sd(Bf.bind(null,e)),Kh(function(){(We&6)===0&&Rn()}),n=null;else{switch(Ru(a)){case 1:n=pr;break;case 4:n=Zt;break;case 16:n=vr;break;case 536870912:n=De;break;default:n=vr}n=Gf(n,Of.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function Of(e,t){if(Ka=-1,el=0,(We&6)!==0)throw Error(i(327));var n=e.callbackNode;if(Vo()&&e.callbackNode!==n)return null;var a=ca(e,e===wt?_t:0);if(a===0)return null;if((a&30)!==0||(a&e.expiredLanes)!==0||t)t=tl(e,a);else{t=a;var s=We;We|=2;var u=jf();(wt!==e||_t!==t)&&(un=null,$o=He()+500,io(e,t));do try{Pp();break}catch(x){Df(e,x)}while(!0);Cs(),Za.current=u,We=s,ht!==null?t=0:(wt=null,_t=0,t=bt)}if(t!==0){if(t===2&&(s=Hl(e),s!==0&&(a=s,t=cc(e,s))),t===1)throw n=Ri,io(e,0),An(e,a),Kt(e,He()),n;if(t===6)An(e,a);else{if(s=e.current.alternate,(a&30)===0&&!Sp(s)&&(t=tl(e,a),t===2&&(u=Hl(e),u!==0&&(a=u,t=cc(e,u))),t===1))throw n=Ri,io(e,0),An(e,a),Kt(e,He()),n;switch(e.finishedWork=s,e.finishedLanes=a,t){case 0:case 1:throw Error(i(345));case 2:ao(e,qt,un);break;case 3:if(An(e,a),(a&130023424)===a&&(t=ac+500-He(),10<t)){if(ca(e,0)!==0)break;if(s=e.suspendedLanes,(s&a)!==a){Ht(),e.pingedLanes|=e.suspendedLanes&s;break}e.timeoutHandle=hs(ao.bind(null,e,qt,un),t);break}ao(e,qt,un);break;case 4:if(An(e,a),(a&4194240)===a)break;for(t=e.eventTimes,s=-1;0<a;){var p=31-Ie(a);u=1<<p,p=t[p],p>s&&(s=p),a&=~u}if(a=s,a=He()-a,a=(120>a?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*wp(a/1960))-a,10<a){e.timeoutHandle=hs(ao.bind(null,e,qt,un),a);break}ao(e,qt,un);break;case 5:ao(e,qt,un);break;default:throw Error(i(329))}}}return Kt(e,He()),e.callbackNode===n?Of.bind(null,e):null}function cc(e,t){var n=Ti;return e.current.memoizedState.isDehydrated&&(io(e,t).flags|=256),e=tl(e,t),e!==2&&(t=qt,qt=n,t!==null&&uc(t)),e}function uc(e){qt===null?qt=e:qt.push.apply(qt,e)}function Sp(e){for(var t=e;;){if(t.flags&16384){var n=t.updateQueue;if(n!==null&&(n=n.stores,n!==null))for(var a=0;a<n.length;a++){var s=n[a],u=s.getSnapshot;s=s.value;try{if(!Nr(u(),s))return!1}catch{return!1}}}if(n=t.child,t.subtreeFlags&16384&&n!==null)n.return=t,t=n;else{if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}function An(e,t){for(t&=~ic,t&=~Ya,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Ie(t),a=1<<n;e[n]=-1,t&=~a}}function Bf(e){if((We&6)!==0)throw Error(i(327));Vo();var t=ca(e,0);if((t&1)===0)return Kt(e,He()),null;var n=tl(e,t);if(e.tag!==0&&n===2){var a=Hl(e);a!==0&&(t=a,n=cc(e,a))}if(n===1)throw n=Ri,io(e,0),An(e,t),Kt(e,He()),n;if(n===6)throw Error(i(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,ao(e,qt,un),Kt(e,He()),null}function dc(e,t){var n=We;We|=1;try{return e(t)}finally{We=n,We===0&&($o=He()+500,Ia&&Rn())}}function oo(e){Fn!==null&&Fn.tag===0&&(We&6)===0&&Vo();var t=We;We|=1;var n=Sr.transition,a=Ke;try{if(Sr.transition=null,Ke=1,e)return e()}finally{Ke=a,Sr.transition=n,We=t,(We&6)===0&&Rn()}}function fc(){lr=Wo.current,ot(Wo)}function io(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(n!==-1&&(e.timeoutHandle=-1,qh(n)),ht!==null)for(n=ht.return;n!==null;){var a=n;switch(ws(a),a.tag){case 1:a=a.type.childContextTypes,a!=null&&Ca();break;case 3:jo(),ot(Yt),ot(Lt),Fs();break;case 5:Ns(a);break;case 4:jo();break;case 13:ot(st);break;case 19:ot(st);break;case 10:_s(a.type._context);break;case 22:case 23:fc()}n=n.return}if(wt=e,ht=e=On(e.current,null),_t=lr=t,bt=0,Ri=null,ic=Ya=no=0,qt=Ti=null,eo!==null){for(t=0;t<eo.length;t++)if(n=eo[t],a=n.interleaved,a!==null){n.interleaved=null;var s=a.next,u=n.pending;if(u!==null){var p=u.next;u.next=s,a.next=p}n.pending=a}eo=null}return e}function Df(e,t){do{var n=ht;try{if(Cs(),Ba.current=Ha,Da){for(var a=ct.memoizedState;a!==null;){var s=a.queue;s!==null&&(s.pending=null),a=a.next}Da=!1}if(ro=0,xt=vt=ct=null,Ei=!1,Pi=0,oc.current=null,n===null||n.return===null){bt=1,Ri=t,ht=null;break}e:{var u=e,p=n.return,x=n,P=t;if(t=_t,x.flags|=32768,P!==null&&typeof P=="object"&&typeof P.then=="function"){var A=P,Q=x,Y=Q.tag;if((Q.mode&1)===0&&(Y===0||Y===11||Y===15)){var G=Q.alternate;G?(Q.updateQueue=G.updateQueue,Q.memoizedState=G.memoizedState,Q.lanes=G.lanes):(Q.updateQueue=null,Q.memoizedState=null)}var le=uf(p);if(le!==null){le.flags&=-257,df(le,p,x,u,t),le.mode&1&&cf(u,A,t),t=le,P=A;var ge=t.updateQueue;if(ge===null){var he=new Set;he.add(P),t.updateQueue=he}else ge.add(P);break e}else{if((t&1)===0){cf(u,A,t),mc();break e}P=Error(i(426))}}else if(at&&x.mode&1){var mt=uf(p);if(mt!==null){(mt.flags&65536)===0&&(mt.flags|=256),df(mt,p,x,u,t),Ps(Uo(P,x));break e}}u=P=Uo(P,x),bt!==4&&(bt=2),Ti===null?Ti=[u]:Ti.push(u),u=p;do{switch(u.tag){case 3:u.flags|=65536,t&=-t,u.lanes|=t;var N=lf(u,P,t);Ld(u,N);break e;case 1:x=P;var _=u.type,F=u.stateNode;if((u.flags&128)===0&&(typeof _.getDerivedStateFromError=="function"||F!==null&&typeof F.componentDidCatch=="function"&&(Ln===null||!Ln.has(F)))){u.flags|=65536,t&=-t,u.lanes|=t;var J=sf(u,x,t);Ld(u,J);break e}}u=u.return}while(u!==null)}Hf(n)}catch(be){t=be,ht===n&&n!==null&&(ht=n=n.return);continue}break}while(!0)}function jf(){var e=Za.current;return Za.current=Ha,e===null?Ha:e}function mc(){(bt===0||bt===3||bt===2)&&(bt=4),wt===null||(no&268435455)===0&&(Ya&268435455)===0||An(wt,_t)}function tl(e,t){var n=We;We|=2;var a=jf();(wt!==e||_t!==t)&&(un=null,io(e,t));do try{Ep();break}catch(s){Df(e,s)}while(!0);if(Cs(),We=n,Za.current=a,ht!==null)throw Error(i(261));return wt=null,_t=0,bt}function Ep(){for(;ht!==null;)Uf(ht)}function Pp(){for(;ht!==null&&!hr();)Uf(ht)}function Uf(e){var t=Vf(e.alternate,e,lr);e.memoizedProps=e.pendingProps,t===null?Hf(e):ht=t,oc.current=null}function Hf(e){var t=e;do{var n=t.alternate;if(e=t.return,(t.flags&32768)===0){if(n=pp(n,t,lr),n!==null){ht=n;return}}else{if(n=vp(n,t),n!==null){n.flags&=32767,ht=n;return}if(e!==null)e.flags|=32768,e.subtreeFlags=0,e.deletions=null;else{bt=6,ht=null;return}}if(t=t.sibling,t!==null){ht=t;return}ht=t=e}while(t!==null);bt===0&&(bt=5)}function ao(e,t,n){var a=Ke,s=Sr.transition;try{Sr.transition=null,Ke=1,kp(e,t,n,a)}finally{Sr.transition=s,Ke=a}return null}function kp(e,t,n,a){do Vo();while(Fn!==null);if((We&6)!==0)throw Error(i(327));n=e.finishedWork;var s=e.finishedLanes;if(n===null)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(i(177));e.callbackNode=null,e.callbackPriority=0;var u=n.lanes|n.childLanes;if(ih(e,u),e===wt&&(ht=wt=null,_t=0),(n.subtreeFlags&2064)===0&&(n.flags&2064)===0||Ja||(Ja=!0,Gf(vr,function(){return Vo(),null})),u=(n.flags&15990)!==0,(n.subtreeFlags&15990)!==0||u){u=Sr.transition,Sr.transition=null;var p=Ke;Ke=1;var x=We;We|=4,oc.current=null,yp(e,n),Nf(n,e),Vh(ms),fa=!!fs,ms=fs=null,e.current=n,xp(n),nr(),We=x,Ke=p,Sr.transition=u}else e.current=n;if(Ja&&(Ja=!1,Fn=e,qa=s),u=e.pendingLanes,u===0&&(Ln=null),Me(n.stateNode),Kt(e,He()),t!==null)for(a=e.onRecoverableError,n=0;n<t.length;n++)s=t[n],a(s.value,{componentStack:s.stack,digest:s.digest});if(Xa)throw Xa=!1,e=lc,lc=null,e;return(qa&1)!==0&&e.tag!==0&&Vo(),u=e.pendingLanes,(u&1)!==0?e===sc?Mi++:(Mi=0,sc=e):Mi=0,Rn(),null}function Vo(){if(Fn!==null){var e=Ru(qa),t=Sr.transition,n=Ke;try{if(Sr.transition=null,Ke=16>e?16:e,Fn===null)var a=!1;else{if(e=Fn,Fn=null,qa=0,(We&6)!==0)throw Error(i(331));var s=We;for(We|=4,de=e.current;de!==null;){var u=de,p=u.child;if((de.flags&16)!==0){var x=u.deletions;if(x!==null){for(var P=0;P<x.length;P++){var A=x[P];for(de=A;de!==null;){var Q=de;switch(Q.tag){case 0:case 11:case 15:Ii(8,Q,u)}var Y=Q.child;if(Y!==null)Y.return=Q,de=Y;else for(;de!==null;){Q=de;var G=Q.sibling,le=Q.return;if(_f(Q),Q===A){de=null;break}if(G!==null){G.return=le,de=G;break}de=le}}}var ge=u.alternate;if(ge!==null){var he=ge.child;if(he!==null){ge.child=null;do{var mt=he.sibling;he.sibling=null,he=mt}while(he!==null)}}de=u}}if((u.subtreeFlags&2064)!==0&&p!==null)p.return=u,de=p;else e:for(;de!==null;){if(u=de,(u.flags&2048)!==0)switch(u.tag){case 0:case 11:case 15:Ii(9,u,u.return)}var N=u.sibling;if(N!==null){N.return=u.return,de=N;break e}de=u.return}}var _=e.current;for(de=_;de!==null;){p=de;var F=p.child;if((p.subtreeFlags&2064)!==0&&F!==null)F.return=p,de=F;else e:for(p=_;de!==null;){if(x=de,(x.flags&2048)!==0)try{switch(x.tag){case 0:case 11:case 15:Qa(9,x)}}catch(be){dt(x,x.return,be)}if(x===p){de=null;break e}var J=x.sibling;if(J!==null){J.return=x.return,de=J;break e}de=x.return}}if(We=s,Rn(),ee&&typeof ee.onPostCommitFiberRoot=="function")try{ee.onPostCommitFiberRoot(Je,e)}catch{}a=!0}return a}finally{Ke=n,Sr.transition=t}}return!1}function Wf(e,t,n){t=Uo(n,t),t=lf(e,t,1),e=Mn(e,t,1),t=Ht(),e!==null&&(ti(e,1,t),Kt(e,t))}function dt(e,t,n){if(e.tag===3)Wf(e,e,n);else for(;t!==null;){if(t.tag===3){Wf(t,e,n);break}else if(t.tag===1){var a=t.stateNode;if(typeof t.type.getDerivedStateFromError=="function"||typeof a.componentDidCatch=="function"&&(Ln===null||!Ln.has(a))){e=Uo(n,e),e=sf(t,e,1),t=Mn(t,e,1),e=Ht(),t!==null&&(ti(t,1,e),Kt(t,e));break}}t=t.return}}function Cp(e,t,n){var a=e.pingCache;a!==null&&a.delete(t),t=Ht(),e.pingedLanes|=e.suspendedLanes&n,wt===e&&(_t&n)===n&&(bt===4||bt===3&&(_t&130023424)===_t&&500>He()-ac?io(e,0):ic|=n),Kt(e,t)}function $f(e,t){t===0&&((e.mode&1)===0?t=1:(t=sa,sa<<=1,(sa&130023424)===0&&(sa=4194304)));var n=Ht();e=ln(e,t),e!==null&&(ti(e,t,n),Kt(e,n))}function _p(e){var t=e.memoizedState,n=0;t!==null&&(n=t.retryLane),$f(e,n)}function Ip(e,t){var n=0;switch(e.tag){case 13:var a=e.stateNode,s=e.memoizedState;s!==null&&(n=s.retryLane);break;case 19:a=e.stateNode;break;default:throw Error(i(314))}a!==null&&a.delete(t),$f(e,n)}var Vf;Vf=function(e,t,n){if(e!==null)if(e.memoizedProps!==t.pendingProps||Yt.current)Jt=!0;else{if((e.lanes&n)===0&&(t.flags&128)===0)return Jt=!1,hp(e,t,n);Jt=(e.flags&131072)!==0}else Jt=!1,at&&(t.flags&1048576)!==0&&Ed(t,Ta,t.index);switch(t.lanes=0,t.tag){case 2:var a=t.type;Va(e,t),e=t.pendingProps;var s=Lo(t,Lt.current);Do(t,n),s=Os(null,t,a,e,s,n);var u=Bs();return t.flags|=1,typeof s=="object"&&s!==null&&typeof s.render=="function"&&s.$$typeof===void 0?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Xt(a)?(u=!0,_a(t)):u=!1,t.memoizedState=s.state!==null&&s.state!==void 0?s.state:null,Ts(t),s.updater=Wa,t.stateNode=s,s._reactInternals=t,$s(t,a,e,n),t=Zs(null,t,a,!0,u,n)):(t.tag=0,at&&u&&xs(t),Ut(null,t,s,n),t=t.child),t;case 16:a=t.elementType;e:{switch(Va(e,t),e=t.pendingProps,s=a._init,a=s(a._payload),t.type=a,s=t.tag=Tp(a),e=Fr(a,e),s){case 0:t=Qs(null,t,a,e,n);break e;case 1:t=vf(null,t,a,e,n);break e;case 11:t=ff(null,t,a,e,n);break e;case 14:t=mf(null,t,a,Fr(a.type,e),n);break e}throw Error(i(306,a,""))}return t;case 0:return a=t.type,s=t.pendingProps,s=t.elementType===a?s:Fr(a,s),Qs(e,t,a,s,n);case 1:return a=t.type,s=t.pendingProps,s=t.elementType===a?s:Fr(a,s),vf(e,t,a,s,n);case 3:e:{if(bf(t),e===null)throw Error(i(387));a=t.pendingProps,u=t.memoizedState,s=u.element,Nd(e,t),Aa(t,a,null,n);var p=t.memoizedState;if(a=p.element,u.isDehydrated)if(u={element:a,isDehydrated:!1,cache:p.cache,pendingSuspenseBoundaries:p.pendingSuspenseBoundaries,transitions:p.transitions},t.updateQueue.baseState=u,t.memoizedState=u,t.flags&256){s=Uo(Error(i(423)),t),t=yf(e,t,a,n,s);break e}else if(a!==s){s=Uo(Error(i(424)),t),t=yf(e,t,a,n,s);break e}else for(ar=Cn(t.stateNode.containerInfo.firstChild),ir=t,at=!0,Lr=null,n=Td(t,null,a,n),t.child=n;n;)n.flags=n.flags&-3|4096,n=n.sibling;else{if(Ao(),a===s){t=cn(e,t,n);break e}Ut(e,t,a,n)}t=t.child}return t;case 5:return zd(t),e===null&&Es(t),a=t.type,s=t.pendingProps,u=e!==null?e.memoizedProps:null,p=s.children,gs(a,s)?p=null:u!==null&&gs(a,u)&&(t.flags|=32),pf(e,t),Ut(e,t,p,n),t.child;case 6:return e===null&&Es(t),null;case 13:return xf(e,t,n);case 4:return Ms(t,t.stateNode.containerInfo),a=t.pendingProps,e===null?t.child=Oo(t,null,a,n):Ut(e,t,a,n),t.child;case 11:return a=t.type,s=t.pendingProps,s=t.elementType===a?s:Fr(a,s),ff(e,t,a,s,n);case 7:return Ut(e,t,t.pendingProps,n),t.child;case 8:return Ut(e,t,t.pendingProps.children,n),t.child;case 12:return Ut(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(a=t.type._context,s=t.pendingProps,u=t.memoizedProps,p=s.value,rt(La,a._currentValue),a._currentValue=p,u!==null)if(Nr(u.value,p)){if(u.children===s.children&&!Yt.current){t=cn(e,t,n);break e}}else for(u=t.child,u!==null&&(u.return=t);u!==null;){var x=u.dependencies;if(x!==null){p=u.child;for(var P=x.firstContext;P!==null;){if(P.context===a){if(u.tag===1){P=sn(-1,n&-n),P.tag=2;var A=u.updateQueue;if(A!==null){A=A.shared;var Q=A.pending;Q===null?P.next=P:(P.next=Q.next,Q.next=P),A.pending=P}}u.lanes|=n,P=u.alternate,P!==null&&(P.lanes|=n),Is(u.return,n,t),x.lanes|=n;break}P=P.next}}else if(u.tag===10)p=u.type===t.type?null:u.child;else if(u.tag===18){if(p=u.return,p===null)throw Error(i(341));p.lanes|=n,x=p.alternate,x!==null&&(x.lanes|=n),Is(p,n,t),p=u.sibling}else p=u.child;if(p!==null)p.return=u;else for(p=u;p!==null;){if(p===t){p=null;break}if(u=p.sibling,u!==null){u.return=p.return,p=u;break}p=p.return}u=p}Ut(e,t,s.children,n),t=t.child}return t;case 9:return s=t.type,a=t.pendingProps.children,Do(t,n),s=xr(s),a=a(s),t.flags|=1,Ut(e,t,a,n),t.child;case 14:return a=t.type,s=Fr(a,t.pendingProps),s=Fr(a.type,s),mf(e,t,a,s,n);case 15:return gf(e,t,t.type,t.pendingProps,n);case 17:return a=t.type,s=t.pendingProps,s=t.elementType===a?s:Fr(a,s),Va(e,t),t.tag=1,Xt(a)?(e=!0,_a(t)):e=!1,Do(t,n),of(t,a,s),$s(t,a,s,n),Zs(null,t,a,!0,e,n);case 19:return Sf(e,t,n);case 22:return hf(e,t,n)}throw Error(i(156,t.tag))};function Gf(e,t){return tt(e,t)}function Rp(e,t,n,a){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Er(e,t,n,a){return new Rp(e,t,n,a)}function gc(e){return e=e.prototype,!(!e||!e.isReactComponent)}function Tp(e){if(typeof e=="function")return gc(e)?1:0;if(e!=null){if(e=e.$$typeof,e===ne)return 11;if(e===Ee)return 14}return 2}function On(e,t){var n=e.alternate;return n===null?(n=Er(e.tag,t,e.key,e.mode),n.elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=e.flags&14680064,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function rl(e,t,n,a,s,u){var p=2;if(a=e,typeof e=="function")gc(e)&&(p=1);else if(typeof e=="string")p=5;else e:switch(e){case I:return lo(n.children,s,u,t);case D:p=8,s|=8;break;case U:return e=Er(12,n,t,s|2),e.elementType=U,e.lanes=u,e;case fe:return e=Er(13,n,t,s),e.elementType=fe,e.lanes=u,e;case oe:return e=Er(19,n,t,s),e.elementType=oe,e.lanes=u,e;case xe:return nl(n,s,u,t);default:if(typeof e=="object"&&e!==null)switch(e.$$typeof){case V:p=10;break e;case re:p=9;break e;case ne:p=11;break e;case Ee:p=14;break e;case Ne:p=16,a=null;break e}throw Error(i(130,e==null?e:typeof e,""))}return t=Er(p,n,t,s),t.elementType=e,t.type=a,t.lanes=u,t}function lo(e,t,n,a){return e=Er(7,e,a,t),e.lanes=n,e}function nl(e,t,n,a){return e=Er(22,e,a,t),e.elementType=xe,e.lanes=n,e.stateNode={isHidden:!1},e}function hc(e,t,n){return e=Er(6,e,null,t),e.lanes=n,e}function pc(e,t,n){return t=Er(4,e.children!==null?e.children:[],e.key,t),t.lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Mp(e,t,n,a,s){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Wl(0),this.expirationTimes=Wl(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Wl(0),this.identifierPrefix=a,this.onRecoverableError=s,this.mutableSourceEagerHydrationData=null}function vc(e,t,n,a,s,u,p,x,P){return e=new Mp(e,t,n,x,P),t===1?(t=1,u===!0&&(t|=8)):t=0,u=Er(3,null,null,t),e.current=u,u.stateNode=e,u.memoizedState={element:a,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ts(u),e}function Np(e,t,n){var a=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:te,key:a==null?null:""+a,children:e,containerInfo:t,implementation:n}}function Qf(e){if(!e)return In;e=e._reactInternals;e:{if(ue(e)!==e||e.tag!==1)throw Error(i(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Xt(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(t!==null);throw Error(i(171))}if(e.tag===1){var n=e.type;if(Xt(n))return xd(e,n,t)}return t}function Zf(e,t,n,a,s,u,p,x,P){return e=vc(n,a,!0,e,s,u,p,x,P),e.context=Qf(null),n=e.current,a=Ht(),s=zn(n),u=sn(a,s),u.callback=t??null,Mn(n,u,s),e.current.lanes=s,ti(e,s,a),Kt(e,a),e}function ol(e,t,n,a){var s=t.current,u=Ht(),p=zn(s);return n=Qf(n),t.context===null?t.context=n:t.pendingContext=n,t=sn(u,p),t.payload={element:e},a=a===void 0?null:a,a!==null&&(t.callback=a),e=Mn(s,t,p),e!==null&&(Or(e,s,p,u),za(e,s,p)),p}function il(e){if(e=e.current,!e.child)return null;switch(e.child.tag){case 5:return e.child.stateNode;default:return e.child.stateNode}}function Yf(e,t){if(e=e.memoizedState,e!==null&&e.dehydrated!==null){var n=e.retryLane;e.retryLane=n!==0&&n<t?n:t}}function bc(e,t){Yf(e,t),(e=e.alternate)&&Yf(e,t)}function Lp(){return null}var Xf=typeof reportError=="function"?reportError:function(e){console.error(e)};function yc(e){this._internalRoot=e}al.prototype.render=yc.prototype.render=function(e){var t=this._internalRoot;if(t===null)throw Error(i(409));ol(e,t,null,null)},al.prototype.unmount=yc.prototype.unmount=function(){var e=this._internalRoot;if(e!==null){this._internalRoot=null;var t=e.containerInfo;oo(function(){ol(null,e,null,null)}),t[rn]=null}};function al(e){this._internalRoot=e}al.prototype.unstable_scheduleHydration=function(e){if(e){var t=Nu();e={blockedOn:null,target:e,priority:t};for(var n=0;n<En.length&&t!==0&&t<En[n].priority;n++);En.splice(n,0,e),n===0&&zu(e)}};function xc(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11)}function ll(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11&&(e.nodeType!==8||e.nodeValue!==" react-mount-point-unstable "))}function Jf(){}function Fp(e,t,n,a,s){if(s){if(typeof a=="function"){var u=a;a=function(){var A=il(p);u.call(A)}}var p=Zf(t,a,e,0,null,!1,!1,"",Jf);return e._reactRootContainer=p,e[rn]=p.current,hi(e.nodeType===8?e.parentNode:e),oo(),p}for(;s=e.lastChild;)e.removeChild(s);if(typeof a=="function"){var x=a;a=function(){var A=il(P);x.call(A)}}var P=vc(e,0,!1,null,null,!1,!1,"",Jf);return e._reactRootContainer=P,e[rn]=P.current,hi(e.nodeType===8?e.parentNode:e),oo(function(){ol(t,P,n,a)}),P}function sl(e,t,n,a,s){var u=n._reactRootContainer;if(u){var p=u;if(typeof s=="function"){var x=s;s=function(){var P=il(p);x.call(P)}}ol(t,p,e,s)}else p=Fp(n,t,e,s,a);return il(p)}Tu=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=ei(t.pendingLanes);n!==0&&($l(t,n|1),Kt(t,He()),(We&6)===0&&($o=He()+500,Rn()))}break;case 13:oo(function(){var a=ln(e,1);if(a!==null){var s=Ht();Or(a,e,1,s)}}),bc(e,1)}},Vl=function(e){if(e.tag===13){var t=ln(e,134217728);if(t!==null){var n=Ht();Or(t,e,134217728,n)}bc(e,134217728)}},Mu=function(e){if(e.tag===13){var t=zn(e),n=ln(e,t);if(n!==null){var a=Ht();Or(n,e,t,a)}bc(e,t)}},Nu=function(){return Ke},Lu=function(e,t){var n=Ke;try{return Ke=e,t()}finally{Ke=n}},yn=function(e,t,n){switch(t){case"input":if(Vn(e,n),t=n.name,n.type==="radio"&&t!=null){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var a=n[t];if(a!==e&&a.form===e.form){var s=ka(a);if(!s)throw Error(i(90));Ze(a),Vn(a,s)}}}break;case"textarea":dr(e,n);break;case"select":t=n.value,t!=null&&Gt(e,!!n.multiple,t,!1)}},Zn=dc,Ur=oo;var zp={usingClientEntryPoint:!1,Events:[bi,Mo,ka,Gn,Qn,dc]},Ni={findFiberByHostInstance:Xn,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},Ap={bundleType:Ni.bundleType,version:Ni.version,rendererPackageName:Ni.rendererPackageName,rendererConfig:Ni.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Z.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return e=Ye(e),e===null?null:e.stateNode},findFiberByHostInstance:Ni.findFiberByHostInstance||Lp,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var cl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!cl.isDisabled&&cl.supportsFiber)try{Je=cl.inject(Ap),ee=cl}catch{}}return er.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=zp,er.createPortal=function(e,t){var n=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!xc(t))throw Error(i(200));return Np(e,t,null,n)},er.createRoot=function(e,t){if(!xc(e))throw Error(i(299));var n=!1,a="",s=Xf;return t!=null&&(t.unstable_strictMode===!0&&(n=!0),t.identifierPrefix!==void 0&&(a=t.identifierPrefix),t.onRecoverableError!==void 0&&(s=t.onRecoverableError)),t=vc(e,1,!1,null,null,n,!1,a,s),e[rn]=t.current,hi(e.nodeType===8?e.parentNode:e),new yc(t)},er.findDOMNode=function(e){if(e==null)return null;if(e.nodeType===1)return e;var t=e._reactInternals;if(t===void 0)throw typeof e.render=="function"?Error(i(188)):(e=Object.keys(e).join(","),Error(i(268,e)));return e=Ye(t),e=e===null?null:e.stateNode,e},er.flushSync=function(e){return oo(e)},er.hydrate=function(e,t,n){if(!ll(t))throw Error(i(200));return sl(null,e,t,!0,n)},er.hydrateRoot=function(e,t,n){if(!xc(e))throw Error(i(405));var a=n!=null&&n.hydratedSources||null,s=!1,u="",p=Xf;if(n!=null&&(n.unstable_strictMode===!0&&(s=!0),n.identifierPrefix!==void 0&&(u=n.identifierPrefix),n.onRecoverableError!==void 0&&(p=n.onRecoverableError)),t=Zf(t,null,e,1,n??null,s,!1,u,p),e[rn]=t.current,hi(e),a)for(e=0;e<a.length;e++)n=a[e],s=n._getVersion,s=s(n._source),t.mutableSourceEagerHydrationData==null?t.mutableSourceEagerHydrationData=[n,s]:t.mutableSourceEagerHydrationData.push(n,s);return new al(t)},er.render=function(e,t,n){if(!ll(t))throw Error(i(200));return sl(null,e,t,!1,n)},er.unmountComponentAtNode=function(e){if(!ll(e))throw Error(i(40));return e._reactRootContainer?(oo(function(){sl(null,null,e,!1,function(){e._reactRootContainer=null,e[rn]=null})}),!0):!1},er.unstable_batchedUpdates=dc,er.unstable_renderSubtreeIntoContainer=function(e,t,n,a){if(!ll(n))throw Error(i(200));if(e==null||e._reactInternals===void 0)throw Error(i(38));return sl(e,t,n,!1,a)},er.version="18.3.1-next-f1338f8080-20240426",er}var u0;function Cm(){if(u0)return kc.exports;u0=1;function r(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(r)}catch(o){console.error(o)}}return r(),kc.exports=n1(),kc.exports}var d0;function o1(){if(d0)return dl;d0=1;var r=Cm();return dl.createRoot=r.createRoot,dl.hydrateRoot=r.hydrateRoot,dl}var i1=o1(),ou=Cm();const a1=xm(ou),l1=ym({__proto__:null,default:a1},[ou]);/**
 * @remix-run/router v1.23.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function lt(){return lt=Object.assign?Object.assign.bind():function(r){for(var o=1;o<arguments.length;o++){var i=arguments[o];for(var l in i)Object.prototype.hasOwnProperty.call(i,l)&&(r[l]=i[l])}return r},lt.apply(this,arguments)}var pt;(function(r){r.Pop="POP",r.Push="PUSH",r.Replace="REPLACE"})(pt||(pt={}));const f0="popstate";function s1(r){r===void 0&&(r={});function o(l,c){let{pathname:d,search:f,hash:h}=l.location;return Ji("",{pathname:d,search:f,hash:h},c.state&&c.state.usr||null,c.state&&c.state.key||"default")}function i(l,c){return typeof c=="string"?c:oa(c)}return u1(o,i,null,r)}function $e(r,o){if(r===!1||r===null||typeof r>"u")throw new Error(o)}function Jo(r,o){if(!r){typeof console<"u"&&console.warn(o);try{throw new Error(o)}catch{}}}function c1(){return Math.random().toString(36).substr(2,8)}function m0(r,o){return{usr:r.state,key:r.key,idx:o}}function Ji(r,o,i,l){return i===void 0&&(i=null),lt({pathname:typeof r=="string"?r:r.pathname,search:"",hash:""},typeof o=="string"?Wn(o):o,{state:i,key:o&&o.key||l||c1()})}function oa(r){let{pathname:o="/",search:i="",hash:l=""}=r;return i&&i!=="?"&&(o+=i.charAt(0)==="?"?i:"?"+i),l&&l!=="#"&&(o+=l.charAt(0)==="#"?l:"#"+l),o}function Wn(r){let o={};if(r){let i=r.indexOf("#");i>=0&&(o.hash=r.substr(i),r=r.substr(0,i));let l=r.indexOf("?");l>=0&&(o.search=r.substr(l),r=r.substr(0,l)),r&&(o.pathname=r)}return o}function u1(r,o,i,l){l===void 0&&(l={});let{window:c=document.defaultView,v5Compat:d=!1}=l,f=c.history,h=pt.Pop,m=null,v=b();v==null&&(v=0,f.replaceState(lt({},f.state,{idx:v}),""));function b(){return(f.state||{idx:null}).idx}function y(){h=pt.Pop;let z=b(),B=z==null?null:z-v;v=z,m&&m({action:h,location:M.location,delta:B})}function S(z,B){h=pt.Push;let R=Ji(M.location,z,B);v=b()+1;let H=m0(R,v),Z=M.createHref(R);try{f.pushState(H,"",Z)}catch(X){if(X instanceof DOMException&&X.name==="DataCloneError")throw X;c.location.assign(Z)}d&&m&&m({action:h,location:M.location,delta:1})}function C(z,B){h=pt.Replace;let R=Ji(M.location,z,B);v=b();let H=m0(R,v),Z=M.createHref(R);f.replaceState(H,"",Z),d&&m&&m({action:h,location:M.location,delta:0})}function L(z){let B=c.location.origin!=="null"?c.location.origin:c.location.href,R=typeof z=="string"?z:oa(z);return R=R.replace(/ $/,"%20"),$e(B,"No window.location.(origin|href) available to create URL for href: "+R),new URL(R,B)}let M={get action(){return h},get location(){return r(c,f)},listen(z){if(m)throw new Error("A history only accepts one active listener");return c.addEventListener(f0,y),m=z,()=>{c.removeEventListener(f0,y),m=null}},createHref(z){return o(c,z)},createURL:L,encodeLocation(z){let B=L(z);return{pathname:B.pathname,search:B.search,hash:B.hash}},push:S,replace:C,go(z){return f.go(z)}};return M}var et;(function(r){r.data="data",r.deferred="deferred",r.redirect="redirect",r.error="error"})(et||(et={}));const d1=new Set(["lazy","caseSensitive","path","id","index","children"]);function f1(r){return r.index===!0}function Rl(r,o,i,l){return i===void 0&&(i=[]),l===void 0&&(l={}),r.map((c,d)=>{let f=[...i,String(d)],h=typeof c.id=="string"?c.id:f.join("-");if($e(c.index!==!0||!c.children,"Cannot specify children on an index route"),$e(!l[h],'Found a route id collision on id "'+h+`".  Route id's must be globally unique within Data Router usages`),f1(c)){let m=lt({},c,o(c),{id:h});return l[h]=m,m}else{let m=lt({},c,o(c),{id:h,children:void 0});return l[h]=m,c.children&&(m.children=Rl(c.children,o,f,l)),m}})}function uo(r,o,i){return i===void 0&&(i="/"),wl(r,o,i,!1)}function wl(r,o,i,l){let c=typeof o=="string"?Wn(o):o,d=ia(c.pathname||"/",i);if(d==null)return null;let f=_m(r);g1(f);let h=null;for(let m=0;h==null&&m<f.length;++m){let v=k1(d);h=E1(f[m],v,l)}return h}function m1(r,o){let{route:i,pathname:l,params:c}=r;return{id:i.id,pathname:l,params:c,data:o[i.id],handle:i.handle}}function _m(r,o,i,l){o===void 0&&(o=[]),i===void 0&&(i=[]),l===void 0&&(l="");let c=(d,f,h)=>{let m={relativePath:h===void 0?d.path||"":h,caseSensitive:d.caseSensitive===!0,childrenIndex:f,route:d};m.relativePath.startsWith("/")&&($e(m.relativePath.startsWith(l),'Absolute route path "'+m.relativePath+'" nested under path '+('"'+l+'" is not valid. An absolute child route path ')+"must start with the combined path of all its parent routes."),m.relativePath=m.relativePath.slice(l.length));let v=po([l,m.relativePath]),b=i.concat(m);d.children&&d.children.length>0&&($e(d.index!==!0,"Index routes must not have child routes. Please remove "+('all child routes from route path "'+v+'".')),_m(d.children,o,b,v)),!(d.path==null&&!d.index)&&o.push({path:v,score:w1(v,d.index),routesMeta:b})};return r.forEach((d,f)=>{var h;if(d.path===""||!((h=d.path)!=null&&h.includes("?")))c(d,f);else for(let m of Im(d.path))c(d,f,m)}),o}function Im(r){let o=r.split("/");if(o.length===0)return[];let[i,...l]=o,c=i.endsWith("?"),d=i.replace(/\?$/,"");if(l.length===0)return c?[d,""]:[d];let f=Im(l.join("/")),h=[];return h.push(...f.map(m=>m===""?d:[d,m].join("/"))),c&&h.push(...f),h.map(m=>r.startsWith("/")&&m===""?"/":m)}function g1(r){r.sort((o,i)=>o.score!==i.score?i.score-o.score:S1(o.routesMeta.map(l=>l.childrenIndex),i.routesMeta.map(l=>l.childrenIndex)))}const h1=/^:[\w-]+$/,p1=3,v1=2,b1=1,y1=10,x1=-2,g0=r=>r==="*";function w1(r,o){let i=r.split("/"),l=i.length;return i.some(g0)&&(l+=x1),o&&(l+=v1),i.filter(c=>!g0(c)).reduce((c,d)=>c+(h1.test(d)?p1:d===""?b1:y1),l)}function S1(r,o){return r.length===o.length&&r.slice(0,-1).every((l,c)=>l===o[c])?r[r.length-1]-o[o.length-1]:0}function E1(r,o,i){i===void 0&&(i=!1);let{routesMeta:l}=r,c={},d="/",f=[];for(let h=0;h<l.length;++h){let m=l[h],v=h===l.length-1,b=d==="/"?o:o.slice(d.length)||"/",y=h0({path:m.relativePath,caseSensitive:m.caseSensitive,end:v},b),S=m.route;if(!y&&v&&i&&!l[l.length-1].route.index&&(y=h0({path:m.relativePath,caseSensitive:m.caseSensitive,end:!1},b)),!y)return null;Object.assign(c,y.params),f.push({params:c,pathname:po([d,y.pathname]),pathnameBase:T1(po([d,y.pathnameBase])),route:S}),y.pathnameBase!=="/"&&(d=po([d,y.pathnameBase]))}return f}function h0(r,o){typeof r=="string"&&(r={path:r,caseSensitive:!1,end:!0});let[i,l]=P1(r.path,r.caseSensitive,r.end),c=o.match(i);if(!c)return null;let d=c[0],f=d.replace(/(.)\/+$/,"$1"),h=c.slice(1);return{params:l.reduce((v,b,y)=>{let{paramName:S,isOptional:C}=b;if(S==="*"){let M=h[y]||"";f=d.slice(0,d.length-M.length).replace(/(.)\/+$/,"$1")}const L=h[y];return C&&!L?v[S]=void 0:v[S]=(L||"").replace(/%2F/g,"/"),v},{}),pathname:d,pathnameBase:f,pattern:r}}function P1(r,o,i){o===void 0&&(o=!1),i===void 0&&(i=!0),Jo(r==="*"||!r.endsWith("*")||r.endsWith("/*"),'Route path "'+r+'" will be treated as if it were '+('"'+r.replace(/\*$/,"/*")+'" because the `*` character must ')+"always follow a `/` in the pattern. To get rid of this warning, "+('please change the route path to "'+r.replace(/\*$/,"/*")+'".'));let l=[],c="^"+r.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,(f,h,m)=>(l.push({paramName:h,isOptional:m!=null}),m?"/?([^\\/]+)?":"/([^\\/]+)"));return r.endsWith("*")?(l.push({paramName:"*"}),c+=r==="*"||r==="/*"?"(.*)$":"(?:\\/(.+)|\\/*)$"):i?c+="\\/*$":r!==""&&r!=="/"&&(c+="(?:(?=\\/|$))"),[new RegExp(c,o?void 0:"i"),l]}function k1(r){try{return r.split("/").map(o=>decodeURIComponent(o).replace(/\//g,"%2F")).join("/")}catch(o){return Jo(!1,'The URL path "'+r+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent '+("encoding ("+o+").")),r}}function ia(r,o){if(o==="/")return r;if(!r.toLowerCase().startsWith(o.toLowerCase()))return null;let i=o.endsWith("/")?o.length-1:o.length,l=r.charAt(i);return l&&l!=="/"?null:r.slice(i)||"/"}function C1(r,o){o===void 0&&(o="/");let{pathname:i,search:l="",hash:c=""}=typeof r=="string"?Wn(r):r;return{pathname:i?i.startsWith("/")?i:_1(i,o):o,search:M1(l),hash:N1(c)}}function _1(r,o){let i=o.replace(/\/+$/,"").split("/");return r.split("/").forEach(c=>{c===".."?i.length>1&&i.pop():c!=="."&&i.push(c)}),i.length>1?i.join("/"):"/"}function Ic(r,o,i,l){return"Cannot include a '"+r+"' character in a manually specified "+("`to."+o+"` field ["+JSON.stringify(l)+"].  Please separate it out to the ")+("`to."+i+"` field. Alternatively you may provide the full path as ")+'a string in <Link to="..."> and the router will parse it for you.'}function Rm(r){return r.filter((o,i)=>i===0||o.route.path&&o.route.path.length>0)}function I1(r,o){let i=Rm(r);return o?i.map((l,c)=>c===i.length-1?l.pathname:l.pathnameBase):i.map(l=>l.pathnameBase)}function R1(r,o,i,l){l===void 0&&(l=!1);let c;typeof r=="string"?c=Wn(r):(c=lt({},r),$e(!c.pathname||!c.pathname.includes("?"),Ic("?","pathname","search",c)),$e(!c.pathname||!c.pathname.includes("#"),Ic("#","pathname","hash",c)),$e(!c.search||!c.search.includes("#"),Ic("#","search","hash",c)));let d=r===""||c.pathname==="",f=d?"/":c.pathname,h;if(f==null)h=i;else{let y=o.length-1;if(!l&&f.startsWith("..")){let S=f.split("/");for(;S[0]==="..";)S.shift(),y-=1;c.pathname=S.join("/")}h=y>=0?o[y]:"/"}let m=C1(c,h),v=f&&f!=="/"&&f.endsWith("/"),b=(d||f===".")&&i.endsWith("/");return!m.pathname.endsWith("/")&&(v||b)&&(m.pathname+="/"),m}const po=r=>r.join("/").replace(/\/\/+/g,"/"),T1=r=>r.replace(/\/+$/,"").replace(/^\/*/,"/"),M1=r=>!r||r==="?"?"":r.startsWith("?")?r:"?"+r,N1=r=>!r||r==="#"?"":r.startsWith("#")?r:"#"+r;class Tl{constructor(o,i,l,c){c===void 0&&(c=!1),this.status=o,this.statusText=i||"",this.internal=c,l instanceof Error?(this.data=l.toString(),this.error=l):this.data=l}}function bo(r){return r!=null&&typeof r.status=="number"&&typeof r.statusText=="string"&&typeof r.internal=="boolean"&&"data"in r}const Tm=["post","put","patch","delete"],L1=new Set(Tm),F1=["get",...Tm],z1=new Set(F1),A1=new Set([301,302,303,307,308]),O1=new Set([307,308]),Rc={state:"idle",location:void 0,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0},B1={state:"idle",data:void 0,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0},Fi={state:"unblocked",proceed:void 0,reset:void 0,location:void 0},iu=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,D1=r=>({hasErrorBoundary:!!r.hasErrorBoundary}),Mm="remix-router-transitions";function j1(r){const o=r.window?r.window:typeof window<"u"?window:void 0,i=typeof o<"u"&&typeof o.document<"u"&&typeof o.document.createElement<"u",l=!i;$e(r.routes.length>0,"You must provide a non-empty routes array to createRouter");let c;if(r.mapRouteProperties)c=r.mapRouteProperties;else if(r.detectErrorBoundary){let E=r.detectErrorBoundary;c=T=>({hasErrorBoundary:E(T)})}else c=D1;let d={},f=Rl(r.routes,c,void 0,d),h,m=r.basename||"/",v=r.dataStrategy||$1,b=r.patchRoutesOnNavigation,y=lt({v7_fetcherPersist:!1,v7_normalizeFormMethod:!1,v7_partialHydration:!1,v7_prependBasename:!1,v7_relativeSplatPath:!1,v7_skipActionErrorRevalidation:!1},r.future),S=null,C=new Set,L=null,M=null,z=null,B=r.hydrationData!=null,R=uo(f,r.history.location,m),H=!1,Z=null;if(R==null&&!b){let E=tr(404,{pathname:r.history.location.pathname}),{matches:T,route:O}=C0(f);R=T,Z={[O.id]:E}}R&&!r.hydrationData&&Ur(R,f,r.history.location.pathname).active&&(R=null);let X;if(R)if(R.some(E=>E.route.lazy))X=!1;else if(!R.some(E=>E.route.loader))X=!0;else if(y.v7_partialHydration){let E=r.hydrationData?r.hydrationData.loaderData:null,T=r.hydrationData?r.hydrationData.errors:null;if(T){let O=R.findIndex($=>T[$.route.id]!==void 0);X=R.slice(0,O+1).every($=>!Qc($.route,E,T))}else X=R.every(O=>!Qc(O.route,E,T))}else X=r.hydrationData!=null;else if(X=!1,R=[],y.v7_partialHydration){let E=Ur(null,f,r.history.location.pathname);E.active&&E.matches&&(H=!0,R=E.matches)}let te,I={historyAction:r.history.action,location:r.history.location,matches:R,initialized:X,navigation:Rc,restoreScrollPosition:r.hydrationData!=null?!1:null,preventScrollReset:!1,revalidation:"idle",loaderData:r.hydrationData&&r.hydrationData.loaderData||{},actionData:r.hydrationData&&r.hydrationData.actionData||null,errors:r.hydrationData&&r.hydrationData.errors||Z,fetchers:new Map,blockers:new Map},D=pt.Pop,U=!1,V,re=!1,ne=new Map,fe=null,oe=!1,Ee=!1,Ne=[],xe=new Set,W=new Map,ie=0,q=-1,k=new Map,j=new Set,ve=new Map,ye=new Map,we=new Set,Ce=new Map,_e=new Map,Fe;function Ae(){if(S=r.history.listen(E=>{let{action:T,location:O,delta:$}=E;if(Fe){Fe(),Fe=void 0;return}Jo(_e.size===0||$!=null,"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.");let K=yn({currentLocation:I.location,nextLocation:O,historyAction:T});if(K&&$!=null){let pe=new Promise(Se=>{Fe=Se});r.history.go($*-1),Tr(K,{state:"blocked",location:O,proceed(){Tr(K,{state:"proceeding",proceed:void 0,reset:void 0,location:O}),pe.then(()=>r.history.go($))},reset(){let Se=new Map(I.blockers);Se.set(K,Fi),Ze({blockers:Se})}});return}return Vt(T,O)}),i){o2(o,ne);let E=()=>i2(o,ne);o.addEventListener("pagehide",E),fe=()=>o.removeEventListener("pagehide",E)}return I.initialized||Vt(pt.Pop,I.location,{initialHydration:!0}),te}function Xe(){S&&S(),fe&&fe(),C.clear(),V&&V.abort(),I.fetchers.forEach((E,T)=>Qt(T)),I.blockers.forEach((E,T)=>qr(T))}function ft(E){return C.add(E),()=>C.delete(E)}function Ze(E,T){T===void 0&&(T={}),I=lt({},I,E);let O=[],$=[];y.v7_fetcherPersist&&I.fetchers.forEach((K,pe)=>{K.state==="idle"&&(we.has(pe)?$.push(pe):O.push(pe))}),we.forEach(K=>{!I.fetchers.has(K)&&!W.has(K)&&$.push(K)}),[...C].forEach(K=>K(I,{deletedFetchers:$,viewTransitionOpts:T.viewTransitionOpts,flushSync:T.flushSync===!0})),y.v7_fetcherPersist?(O.forEach(K=>I.fetchers.delete(K)),$.forEach(K=>Qt(K))):$.forEach(K=>we.delete(K))}function Pt(E,T,O){var $,K;let{flushSync:pe}=O===void 0?{}:O,Se=I.actionData!=null&&I.navigation.formMethod!=null&&Dr(I.navigation.formMethod)&&I.navigation.state==="loading"&&(($=E.state)==null?void 0:$._isRedirect)!==!0,ae;T.actionData?Object.keys(T.actionData).length>0?ae=T.actionData:ae=null:Se?ae=I.actionData:ae=null;let me=T.loaderData?P0(I.loaderData,T.loaderData,T.matches||[],T.errors):I.loaderData,ce=I.blockers;ce.size>0&&(ce=new Map(ce),ce.forEach((Oe,ut)=>ce.set(ut,Fi)));let ue=U===!0||I.navigation.formMethod!=null&&Dr(I.navigation.formMethod)&&((K=E.state)==null?void 0:K._isRedirect)!==!0;h&&(f=h,h=void 0),oe||D===pt.Pop||(D===pt.Push?r.history.push(E,E.state):D===pt.Replace&&r.history.replace(E,E.state));let Re;if(D===pt.Pop){let Oe=ne.get(I.location.pathname);Oe&&Oe.has(E.pathname)?Re={currentLocation:I.location,nextLocation:E}:ne.has(E.pathname)&&(Re={currentLocation:E,nextLocation:I.location})}else if(re){let Oe=ne.get(I.location.pathname);Oe?Oe.add(E.pathname):(Oe=new Set([E.pathname]),ne.set(I.location.pathname,Oe)),Re={currentLocation:I.location,nextLocation:E}}Ze(lt({},T,{actionData:ae,loaderData:me,historyAction:D,location:E,initialized:!0,navigation:Rc,revalidation:"idle",restoreScrollPosition:Zn(E,T.matches||I.matches),preventScrollReset:ue,blockers:ce}),{viewTransitionOpts:Re,flushSync:pe===!0}),D=pt.Pop,U=!1,re=!1,oe=!1,Ee=!1,Ne=[]}async function Ir(E,T){if(typeof E=="number"){r.history.go(E);return}let O=Gc(I.location,I.matches,m,y.v7_prependBasename,E,y.v7_relativeSplatPath,T==null?void 0:T.fromRouteId,T==null?void 0:T.relative),{path:$,submission:K,error:pe}=p0(y.v7_normalizeFormMethod,!1,O,T),Se=I.location,ae=Ji(I.location,$,T&&T.state);ae=lt({},ae,r.history.encodeLocation(ae));let me=T&&T.replace!=null?T.replace:void 0,ce=pt.Push;me===!0?ce=pt.Replace:me===!1||K!=null&&Dr(K.formMethod)&&K.formAction===I.location.pathname+I.location.search&&(ce=pt.Replace);let ue=T&&"preventScrollReset"in T?T.preventScrollReset===!0:void 0,Re=(T&&T.flushSync)===!0,Oe=yn({currentLocation:Se,nextLocation:ae,historyAction:ce});if(Oe){Tr(Oe,{state:"blocked",location:ae,proceed(){Tr(Oe,{state:"proceeding",proceed:void 0,reset:void 0,location:ae}),Ir(E,T)},reset(){let ut=new Map(I.blockers);ut.set(Oe,Fi),Ze({blockers:ut})}});return}return await Vt(ce,ae,{submission:K,pendingError:pe,preventScrollReset:ue,replace:T&&T.replace,enableViewTransition:T&&T.viewTransition,flushSync:Re})}function $n(){if(kt(),Ze({revalidation:"loading"}),I.navigation.state!=="submitting"){if(I.navigation.state==="idle"){Vt(I.historyAction,I.location,{startUninterruptedRevalidation:!0});return}Vt(D||I.historyAction,I.navigation.location,{overrideNavigation:I.navigation,enableViewTransition:re===!0})}}async function Vt(E,T,O){V&&V.abort(),V=null,D=E,oe=(O&&O.startUninterruptedRevalidation)===!0,Qn(I.location,I.matches),U=(O&&O.preventScrollReset)===!0,re=(O&&O.enableViewTransition)===!0;let $=h||f,K=O&&O.overrideNavigation,pe=O!=null&&O.initialHydration&&I.matches&&I.matches.length>0&&!H?I.matches:uo($,T,m),Se=(O&&O.flushSync)===!0;if(pe&&I.initialized&&!Ee&&X1(I.location,T)&&!(O&&O.submission&&Dr(O.submission.formMethod))){Pt(T,{matches:pe},{flushSync:Se});return}let ae=Ur(pe,$,T.pathname);if(ae.active&&ae.matches&&(pe=ae.matches),!pe){let{error:Ye,notFoundMatches:Ue,route:tt}=gr(T.pathname);Pt(T,{matches:Ue,loaderData:{},errors:{[tt.id]:Ye}},{flushSync:Se});return}V=new AbortController;let me=Go(r.history,T,V.signal,O&&O.submission),ce;if(O&&O.pendingError)ce=[fo(pe).route.id,{type:et.error,error:O.pendingError}];else if(O&&O.submission&&Dr(O.submission.formMethod)){let Ye=await Vn(me,T,O.submission,pe,ae.active,{replace:O.replace,flushSync:Se});if(Ye.shortCircuited)return;if(Ye.pendingActionResult){let[Ue,tt]=Ye.pendingActionResult;if(ur(tt)&&bo(tt.error)&&tt.error.status===404){V=null,Pt(T,{matches:Ye.matches,loaderData:{},errors:{[Ue]:tt.error}});return}}pe=Ye.matches||pe,ce=Ye.pendingActionResult,K=Tc(T,O.submission),Se=!1,ae.active=!1,me=Go(r.history,me.url,me.signal)}let{shortCircuited:ue,matches:Re,loaderData:Oe,errors:ut}=await hn(me,T,pe,ae.active,K,O&&O.submission,O&&O.fetcherSubmission,O&&O.replace,O&&O.initialHydration===!0,Se,ce);ue||(V=null,Pt(T,lt({matches:Re||pe},k0(ce),{loaderData:Oe,errors:ut})))}async function Vn(E,T,O,$,K,pe){pe===void 0&&(pe={}),kt();let Se=r2(T,O);if(Ze({navigation:Se},{flushSync:pe.flushSync===!0}),K){let ce=await Kr($,T.pathname,E.signal);if(ce.type==="aborted")return{shortCircuited:!0};if(ce.type==="error"){let ue=fo(ce.partialMatches).route.id;return{matches:ce.partialMatches,pendingActionResult:[ue,{type:et.error,error:ce.error}]}}else if(ce.matches)$=ce.matches;else{let{notFoundMatches:ue,error:Re,route:Oe}=gr(T.pathname);return{matches:ue,pendingActionResult:[Oe.id,{type:et.error,error:Re}]}}}let ae,me=Ui($,T);if(!me.route.action&&!me.route.lazy)ae={type:et.error,error:tr(405,{method:E.method,pathname:T.pathname,routeId:me.route.id})};else if(ae=(await Ve("action",I,E,[me],$,null))[me.route.id],E.signal.aborted)return{shortCircuited:!0};if(mo(ae)){let ce;return pe&&pe.replace!=null?ce=pe.replace:ce=w0(ae.response.headers.get("Location"),new URL(E.url),m)===I.location.pathname+I.location.search,await dr(E,ae,!0,{submission:O,replace:ce}),{shortCircuited:!0}}if(Hn(ae))throw tr(400,{type:"defer-action"});if(ur(ae)){let ce=fo($,me.route.id);return(pe&&pe.replace)!==!0&&(D=pt.Push),{matches:$,pendingActionResult:[ce.route.id,ae]}}return{matches:$,pendingActionResult:[me.route.id,ae]}}async function hn(E,T,O,$,K,pe,Se,ae,me,ce,ue){let Re=K||Tc(T,pe),Oe=pe||Se||I0(Re),ut=!oe&&(!y.v7_partialHydration||!me);if($){if(ut){let Je=jr(ue);Ze(lt({navigation:Re},Je!==void 0?{actionData:Je}:{}),{flushSync:ce})}let De=await Kr(O,T.pathname,E.signal);if(De.type==="aborted")return{shortCircuited:!0};if(De.type==="error"){let Je=fo(De.partialMatches).route.id;return{matches:De.partialMatches,loaderData:{},errors:{[Je]:De.error}}}else if(De.matches)O=De.matches;else{let{error:Je,notFoundMatches:ee,route:Me}=gr(T.pathname);return{matches:ee,loaderData:{},errors:{[Me.id]:Je}}}}let Ye=h||f,[Ue,tt]=b0(r.history,I,O,Oe,T,y.v7_partialHydration&&me===!0,y.v7_skipActionErrorRevalidation,Ee,Ne,xe,we,ve,j,Ye,m,ue);if(Dt(De=>!(O&&O.some(Je=>Je.route.id===De))||Ue&&Ue.some(Je=>Je.route.id===De)),q=++ie,Ue.length===0&&tt.length===0){let De=Rr();return Pt(T,lt({matches:O,loaderData:{},errors:ue&&ur(ue[1])?{[ue[0]]:ue[1].error}:null},k0(ue),De?{fetchers:new Map(I.fetchers)}:{}),{flushSync:ce}),{shortCircuited:!0}}if(ut){let De={};if(!$){De.navigation=Re;let Je=jr(ue);Je!==void 0&&(De.actionData=Je)}tt.length>0&&(De.fetchers=Yr(tt)),Ze(De,{flushSync:ce})}tt.forEach(De=>{Bt(De.key),De.controller&&W.set(De.key,De.controller)});let Mr=()=>tt.forEach(De=>Bt(De.key));V&&V.signal.addEventListener("abort",Mr);let{loaderResults:hr,fetcherResults:nr}=await pn(I,O,Ue,tt,E);if(E.signal.aborted)return{shortCircuited:!0};V&&V.signal.removeEventListener("abort",Mr),tt.forEach(De=>W.delete(De.key));let He=fl(hr);if(He)return await dr(E,He.result,!0,{replace:ae}),{shortCircuited:!0};if(He=fl(nr),He)return j.add(He.key),await dr(E,He.result,!0,{replace:ae}),{shortCircuited:!0};let{loaderData:Yn,errors:pr}=E0(I,O,hr,ue,tt,nr,Ce);Ce.forEach((De,Je)=>{De.subscribe(ee=>{(ee||De.done)&&Ce.delete(Je)})}),y.v7_partialHydration&&me&&I.errors&&(pr=lt({},I.errors,pr));let Zt=Rr(),vr=mr(q),en=Zt||vr||tt.length>0;return lt({matches:O,loaderData:Yn,errors:pr},en?{fetchers:new Map(I.fetchers)}:{})}function jr(E){if(E&&!ur(E[1]))return{[E[0]]:E[1].data};if(I.actionData)return Object.keys(I.actionData).length===0?null:I.actionData}function Yr(E){return E.forEach(T=>{let O=I.fetchers.get(T.key),$=zi(void 0,O?O.data:void 0);I.fetchers.set(T.key,$)}),new Map(I.fetchers)}function Gt(E,T,O,$){if(l)throw new Error("router.fetch() was called during the server render, but it shouldn't be. You are likely calling a useFetcher() method in the body of your component. Try moving it to a useEffect or a callback.");Bt(E);let K=($&&$.flushSync)===!0,pe=h||f,Se=Gc(I.location,I.matches,m,y.v7_prependBasename,O,y.v7_relativeSplatPath,T,$==null?void 0:$.relative),ae=uo(pe,Se,m),me=Ur(ae,pe,Se);if(me.active&&me.matches&&(ae=me.matches),!ae){Nt(E,T,tr(404,{pathname:Se}),{flushSync:K});return}let{path:ce,submission:ue,error:Re}=p0(y.v7_normalizeFormMethod,!0,Se,$);if(Re){Nt(E,T,Re,{flushSync:K});return}let Oe=Ui(ae,ce),ut=($&&$.preventScrollReset)===!0;if(ue&&Dr(ue.formMethod)){Xr(E,T,ce,Oe,ae,me.active,K,ut,ue);return}ve.set(E,{routeId:T,path:ce}),xo(E,T,ce,Oe,ae,me.active,K,ut,ue)}async function Xr(E,T,O,$,K,pe,Se,ae,me){kt(),ve.delete(E);function ce(Ie){if(!Ie.route.action&&!Ie.route.lazy){let it=tr(405,{method:me.formMethod,pathname:O,routeId:T});return Nt(E,T,it,{flushSync:Se}),!0}return!1}if(!pe&&ce($))return;let ue=I.fetchers.get(E);Mt(E,n2(me,ue),{flushSync:Se});let Re=new AbortController,Oe=Go(r.history,O,Re.signal,me);if(pe){let Ie=await Kr(K,new URL(Oe.url).pathname,Oe.signal,E);if(Ie.type==="aborted")return;if(Ie.type==="error"){Nt(E,T,Ie.error,{flushSync:Se});return}else if(Ie.matches){if(K=Ie.matches,$=Ui(K,O),ce($))return}else{Nt(E,T,tr(404,{pathname:O}),{flushSync:Se});return}}W.set(E,Re);let ut=ie,Ue=(await Ve("action",I,Oe,[$],K,E))[$.route.id];if(Oe.signal.aborted){W.get(E)===Re&&W.delete(E);return}if(y.v7_fetcherPersist&&we.has(E)){if(mo(Ue)||ur(Ue)){Mt(E,jn(void 0));return}}else{if(mo(Ue))if(W.delete(E),q>ut){Mt(E,jn(void 0));return}else return j.add(E),Mt(E,zi(me)),dr(Oe,Ue,!1,{fetcherSubmission:me,preventScrollReset:ae});if(ur(Ue)){Nt(E,T,Ue.error);return}}if(Hn(Ue))throw tr(400,{type:"defer-action"});let tt=I.navigation.location||I.location,Mr=Go(r.history,tt,Re.signal),hr=h||f,nr=I.navigation.state!=="idle"?uo(hr,I.navigation.location,m):I.matches;$e(nr,"Didn't find any matches after fetcher action");let He=++ie;k.set(E,He);let Yn=zi(me,Ue.data);I.fetchers.set(E,Yn);let[pr,Zt]=b0(r.history,I,nr,me,tt,!1,y.v7_skipActionErrorRevalidation,Ee,Ne,xe,we,ve,j,hr,m,[$.route.id,Ue]);Zt.filter(Ie=>Ie.key!==E).forEach(Ie=>{let it=Ie.key,jt=I.fetchers.get(it),tn=zi(void 0,jt?jt.data:void 0);I.fetchers.set(it,tn),Bt(it),Ie.controller&&W.set(it,Ie.controller)}),Ze({fetchers:new Map(I.fetchers)});let vr=()=>Zt.forEach(Ie=>Bt(Ie.key));Re.signal.addEventListener("abort",vr);let{loaderResults:en,fetcherResults:De}=await pn(I,nr,pr,Zt,Mr);if(Re.signal.aborted)return;Re.signal.removeEventListener("abort",vr),k.delete(E),W.delete(E),Zt.forEach(Ie=>W.delete(Ie.key));let Je=fl(en);if(Je)return dr(Mr,Je.result,!1,{preventScrollReset:ae});if(Je=fl(De),Je)return j.add(Je.key),dr(Mr,Je.result,!1,{preventScrollReset:ae});let{loaderData:ee,errors:Me}=E0(I,nr,en,void 0,Zt,De,Ce);if(I.fetchers.has(E)){let Ie=jn(Ue.data);I.fetchers.set(E,Ie)}mr(He),I.navigation.state==="loading"&&He>q?($e(D,"Expected pending action"),V&&V.abort(),Pt(I.navigation.location,{matches:nr,loaderData:ee,errors:Me,fetchers:new Map(I.fetchers)})):(Ze({errors:Me,loaderData:P0(I.loaderData,ee,nr,Me),fetchers:new Map(I.fetchers)}),Ee=!1)}async function xo(E,T,O,$,K,pe,Se,ae,me){let ce=I.fetchers.get(E);Mt(E,zi(me,ce?ce.data:void 0),{flushSync:Se});let ue=new AbortController,Re=Go(r.history,O,ue.signal);if(pe){let Ue=await Kr(K,new URL(Re.url).pathname,Re.signal,E);if(Ue.type==="aborted")return;if(Ue.type==="error"){Nt(E,T,Ue.error,{flushSync:Se});return}else if(Ue.matches)K=Ue.matches,$=Ui(K,O);else{Nt(E,T,tr(404,{pathname:O}),{flushSync:Se});return}}W.set(E,ue);let Oe=ie,Ye=(await Ve("loader",I,Re,[$],K,E))[$.route.id];if(Hn(Ye)&&(Ye=await au(Ye,Re.signal,!0)||Ye),W.get(E)===ue&&W.delete(E),!Re.signal.aborted){if(we.has(E)){Mt(E,jn(void 0));return}if(mo(Ye))if(q>Oe){Mt(E,jn(void 0));return}else{j.add(E),await dr(Re,Ye,!1,{preventScrollReset:ae});return}if(ur(Ye)){Nt(E,T,Ye.error);return}$e(!Hn(Ye),"Unhandled fetcher deferred data"),Mt(E,jn(Ye.data))}}async function dr(E,T,O,$){let{submission:K,fetcherSubmission:pe,preventScrollReset:Se,replace:ae}=$===void 0?{}:$;T.response.headers.has("X-Remix-Revalidate")&&(Ee=!0);let me=T.response.headers.get("Location");$e(me,"Expected a Location header on the redirect Response"),me=w0(me,new URL(E.url),m);let ce=Ji(I.location,me,{_isRedirect:!0});if(i){let Ue=!1;if(T.response.headers.has("X-Remix-Reload-Document"))Ue=!0;else if(iu.test(me)){const tt=r.history.createURL(me);Ue=tt.origin!==o.location.origin||ia(tt.pathname,m)==null}if(Ue){ae?o.location.replace(me):o.location.assign(me);return}}V=null;let ue=ae===!0||T.response.headers.has("X-Remix-Replace")?pt.Replace:pt.Push,{formMethod:Re,formAction:Oe,formEncType:ut}=I.navigation;!K&&!pe&&Re&&Oe&&ut&&(K=I0(I.navigation));let Ye=K||pe;if(O1.has(T.response.status)&&Ye&&Dr(Ye.formMethod))await Vt(ue,ce,{submission:lt({},Ye,{formAction:me}),preventScrollReset:Se||U,enableViewTransition:O?re:void 0});else{let Ue=Tc(ce,K);await Vt(ue,ce,{overrideNavigation:Ue,fetcherSubmission:pe,preventScrollReset:Se||U,enableViewTransition:O?re:void 0})}}async function Ve(E,T,O,$,K,pe){let Se,ae={};try{Se=await V1(v,E,T,O,$,K,pe,d,c)}catch(me){return $.forEach(ce=>{ae[ce.route.id]={type:et.error,error:me}}),ae}for(let[me,ce]of Object.entries(Se))if(J1(ce)){let ue=ce.result;ae[me]={type:et.redirect,response:Z1(ue,O,me,K,m,y.v7_relativeSplatPath)}}else ae[me]=await Q1(ce);return ae}async function pn(E,T,O,$,K){let pe=E.matches,Se=Ve("loader",E,K,O,T,null),ae=Promise.all($.map(async ue=>{if(ue.matches&&ue.match&&ue.controller){let Oe=(await Ve("loader",E,Go(r.history,ue.path,ue.controller.signal),[ue.match],ue.matches,ue.key))[ue.match.route.id];return{[ue.key]:Oe}}else return Promise.resolve({[ue.key]:{type:et.error,error:tr(404,{pathname:ue.path})}})})),me=await Se,ce=(await ae).reduce((ue,Re)=>Object.assign(ue,Re),{});return await Promise.all([e2(T,me,K.signal,pe,E.loaderData),t2(T,ce,$)]),{loaderResults:me,fetcherResults:ce}}function kt(){Ee=!0,Ne.push(...Dt()),ve.forEach((E,T)=>{W.has(T)&&xe.add(T),Bt(T)})}function Mt(E,T,O){O===void 0&&(O={}),I.fetchers.set(E,T),Ze({fetchers:new Map(I.fetchers)},{flushSync:(O&&O.flushSync)===!0})}function Nt(E,T,O,$){$===void 0&&($={});let K=fo(I.matches,T);Qt(E),Ze({errors:{[K.route.id]:O},fetchers:new Map(I.fetchers)},{flushSync:($&&$.flushSync)===!0})}function fr(E){return ye.set(E,(ye.get(E)||0)+1),we.has(E)&&we.delete(E),I.fetchers.get(E)||B1}function Qt(E){let T=I.fetchers.get(E);W.has(E)&&!(T&&T.state==="loading"&&k.has(E))&&Bt(E),ve.delete(E),k.delete(E),j.delete(E),y.v7_fetcherPersist&&we.delete(E),xe.delete(E),I.fetchers.delete(E)}function vn(E){let T=(ye.get(E)||0)-1;T<=0?(ye.delete(E),we.add(E),y.v7_fetcherPersist||Qt(E)):ye.set(E,T),Ze({fetchers:new Map(I.fetchers)})}function Bt(E){let T=W.get(E);T&&(T.abort(),W.delete(E))}function Jr(E){for(let T of E){let O=fr(T),$=jn(O.data);I.fetchers.set(T,$)}}function Rr(){let E=[],T=!1;for(let O of j){let $=I.fetchers.get(O);$e($,"Expected fetcher: "+O),$.state==="loading"&&(j.delete(O),E.push(O),T=!0)}return Jr(E),T}function mr(E){let T=[];for(let[O,$]of k)if($<E){let K=I.fetchers.get(O);$e(K,"Expected fetcher: "+O),K.state==="loading"&&(Bt(O),k.delete(O),T.push(O))}return Jr(T),T.length>0}function bn(E,T){let O=I.blockers.get(E)||Fi;return _e.get(E)!==T&&_e.set(E,T),O}function qr(E){I.blockers.delete(E),_e.delete(E)}function Tr(E,T){let O=I.blockers.get(E)||Fi;$e(O.state==="unblocked"&&T.state==="blocked"||O.state==="blocked"&&T.state==="blocked"||O.state==="blocked"&&T.state==="proceeding"||O.state==="blocked"&&T.state==="unblocked"||O.state==="proceeding"&&T.state==="unblocked","Invalid blocker state transition: "+O.state+" -> "+T.state);let $=new Map(I.blockers);$.set(E,T),Ze({blockers:$})}function yn(E){let{currentLocation:T,nextLocation:O,historyAction:$}=E;if(_e.size===0)return;_e.size>1&&Jo(!1,"A router only supports one blocker at a time");let K=Array.from(_e.entries()),[pe,Se]=K[K.length-1],ae=I.blockers.get(pe);if(!(ae&&ae.state==="proceeding")&&Se({currentLocation:T,nextLocation:O,historyAction:$}))return pe}function gr(E){let T=tr(404,{pathname:E}),O=h||f,{matches:$,route:K}=C0(O);return Dt(),{notFoundMatches:$,route:K,error:T}}function Dt(E){let T=[];return Ce.forEach((O,$)=>{(!E||E($))&&(O.cancel(),T.push($),Ce.delete($))}),T}function wo(E,T,O){if(L=E,z=T,M=O||null,!B&&I.navigation===Rc){B=!0;let $=Zn(I.location,I.matches);$!=null&&Ze({restoreScrollPosition:$})}return()=>{L=null,z=null,M=null}}function Gn(E,T){return M&&M(E,T.map($=>m1($,I.loaderData)))||E.key}function Qn(E,T){if(L&&z){let O=Gn(E,T);L[O]=z()}}function Zn(E,T){if(L){let O=Gn(E,T),$=L[O];if(typeof $=="number")return $}return null}function Ur(E,T,O){if(b)if(E){if(Object.keys(E[0].params).length>0)return{active:!0,matches:wl(T,O,m,!0)}}else return{active:!0,matches:wl(T,O,m,!0)||[]};return{active:!1,matches:null}}async function Kr(E,T,O,$){if(!b)return{type:"success",matches:E};let K=E;for(;;){let pe=h==null,Se=h||f,ae=d;try{await b({signal:O,path:T,matches:K,fetcherKey:$,patch:(ue,Re)=>{O.aborted||x0(ue,Re,Se,ae,c)}})}catch(ue){return{type:"error",error:ue,partialMatches:K}}finally{pe&&!O.aborted&&(f=[...f])}if(O.aborted)return{type:"aborted"};let me=uo(Se,T,m);if(me)return{type:"success",matches:me};let ce=wl(Se,T,m,!0);if(!ce||K.length===ce.length&&K.every((ue,Re)=>ue.route.id===ce[Re].route.id))return{type:"success",matches:null};K=ce}}function So(E){d={},h=Rl(E,c,void 0,d)}function rr(E,T){let O=h==null;x0(E,T,h||f,d,c),O&&(f=[...f],Ze({}))}return te={get basename(){return m},get future(){return y},get state(){return I},get routes(){return f},get window(){return o},initialize:Ae,subscribe:ft,enableScrollRestoration:wo,navigate:Ir,fetch:Gt,revalidate:$n,createHref:E=>r.history.createHref(E),encodeLocation:E=>r.history.encodeLocation(E),getFetcher:fr,deleteFetcher:vn,dispose:Xe,getBlocker:bn,deleteBlocker:qr,patchRoutes:rr,_internalFetchControllers:W,_internalActiveDeferreds:Ce,_internalSetRoutes:So},te}function U1(r){return r!=null&&("formData"in r&&r.formData!=null||"body"in r&&r.body!==void 0)}function Gc(r,o,i,l,c,d,f,h){let m,v;if(f){m=[];for(let y of o)if(m.push(y),y.route.id===f){v=y;break}}else m=o,v=o[o.length-1];let b=R1(c||".",I1(m,d),ia(r.pathname,i)||r.pathname,h==="path");if(c==null&&(b.search=r.search,b.hash=r.hash),(c==null||c===""||c===".")&&v){let y=lu(b.search);if(v.route.index&&!y)b.search=b.search?b.search.replace(/^\?/,"?index&"):"?index";else if(!v.route.index&&y){let S=new URLSearchParams(b.search),C=S.getAll("index");S.delete("index"),C.filter(M=>M).forEach(M=>S.append("index",M));let L=S.toString();b.search=L?"?"+L:""}}return l&&i!=="/"&&(b.pathname=b.pathname==="/"?i:po([i,b.pathname])),oa(b)}function p0(r,o,i,l){if(!l||!U1(l))return{path:i};if(l.formMethod&&!K1(l.formMethod))return{path:i,error:tr(405,{method:l.formMethod})};let c=()=>({path:i,error:tr(400,{type:"invalid-body"})}),d=l.formMethod||"get",f=r?d.toUpperCase():d.toLowerCase(),h=Fm(i);if(l.body!==void 0){if(l.formEncType==="text/plain"){if(!Dr(f))return c();let S=typeof l.body=="string"?l.body:l.body instanceof FormData||l.body instanceof URLSearchParams?Array.from(l.body.entries()).reduce((C,L)=>{let[M,z]=L;return""+C+M+"="+z+`
`},""):String(l.body);return{path:i,submission:{formMethod:f,formAction:h,formEncType:l.formEncType,formData:void 0,json:void 0,text:S}}}else if(l.formEncType==="application/json"){if(!Dr(f))return c();try{let S=typeof l.body=="string"?JSON.parse(l.body):l.body;return{path:i,submission:{formMethod:f,formAction:h,formEncType:l.formEncType,formData:void 0,json:S,text:void 0}}}catch{return c()}}}$e(typeof FormData=="function","FormData is not available in this environment");let m,v;if(l.formData)m=Zc(l.formData),v=l.formData;else if(l.body instanceof FormData)m=Zc(l.body),v=l.body;else if(l.body instanceof URLSearchParams)m=l.body,v=S0(m);else if(l.body==null)m=new URLSearchParams,v=new FormData;else try{m=new URLSearchParams(l.body),v=S0(m)}catch{return c()}let b={formMethod:f,formAction:h,formEncType:l&&l.formEncType||"application/x-www-form-urlencoded",formData:v,json:void 0,text:void 0};if(Dr(b.formMethod))return{path:i,submission:b};let y=Wn(i);return o&&y.search&&lu(y.search)&&m.append("index",""),y.search="?"+m,{path:oa(y),submission:b}}function v0(r,o,i){i===void 0&&(i=!1);let l=r.findIndex(c=>c.route.id===o);return l>=0?r.slice(0,i?l+1:l):r}function b0(r,o,i,l,c,d,f,h,m,v,b,y,S,C,L,M){let z=M?ur(M[1])?M[1].error:M[1].data:void 0,B=r.createURL(o.location),R=r.createURL(c),H=i;d&&o.errors?H=v0(i,Object.keys(o.errors)[0],!0):M&&ur(M[1])&&(H=v0(i,M[0]));let Z=M?M[1].statusCode:void 0,X=f&&Z&&Z>=400,te=H.filter((D,U)=>{let{route:V}=D;if(V.lazy)return!0;if(V.loader==null)return!1;if(d)return Qc(V,o.loaderData,o.errors);if(H1(o.loaderData,o.matches[U],D)||m.some(fe=>fe===D.route.id))return!0;let re=o.matches[U],ne=D;return y0(D,lt({currentUrl:B,currentParams:re.params,nextUrl:R,nextParams:ne.params},l,{actionResult:z,actionStatus:Z,defaultShouldRevalidate:X?!1:h||B.pathname+B.search===R.pathname+R.search||B.search!==R.search||Nm(re,ne)}))}),I=[];return y.forEach((D,U)=>{if(d||!i.some(oe=>oe.route.id===D.routeId)||b.has(U))return;let V=uo(C,D.path,L);if(!V){I.push({key:U,routeId:D.routeId,path:D.path,matches:null,match:null,controller:null});return}let re=o.fetchers.get(U),ne=Ui(V,D.path),fe=!1;S.has(U)?fe=!1:v.has(U)?(v.delete(U),fe=!0):re&&re.state!=="idle"&&re.data===void 0?fe=h:fe=y0(ne,lt({currentUrl:B,currentParams:o.matches[o.matches.length-1].params,nextUrl:R,nextParams:i[i.length-1].params},l,{actionResult:z,actionStatus:Z,defaultShouldRevalidate:X?!1:h})),fe&&I.push({key:U,routeId:D.routeId,path:D.path,matches:V,match:ne,controller:new AbortController})}),[te,I]}function Qc(r,o,i){if(r.lazy)return!0;if(!r.loader)return!1;let l=o!=null&&o[r.id]!==void 0,c=i!=null&&i[r.id]!==void 0;return!l&&c?!1:typeof r.loader=="function"&&r.loader.hydrate===!0?!0:!l&&!c}function H1(r,o,i){let l=!o||i.route.id!==o.route.id,c=r[i.route.id]===void 0;return l||c}function Nm(r,o){let i=r.route.path;return r.pathname!==o.pathname||i!=null&&i.endsWith("*")&&r.params["*"]!==o.params["*"]}function y0(r,o){if(r.route.shouldRevalidate){let i=r.route.shouldRevalidate(o);if(typeof i=="boolean")return i}return o.defaultShouldRevalidate}function x0(r,o,i,l,c){var d;let f;if(r){let v=l[r];$e(v,"No route found to patch children into: routeId = "+r),v.children||(v.children=[]),f=v.children}else f=i;let h=o.filter(v=>!f.some(b=>Lm(v,b))),m=Rl(h,c,[r||"_","patch",String(((d=f)==null?void 0:d.length)||"0")],l);f.push(...m)}function Lm(r,o){return"id"in r&&"id"in o&&r.id===o.id?!0:r.index===o.index&&r.path===o.path&&r.caseSensitive===o.caseSensitive?(!r.children||r.children.length===0)&&(!o.children||o.children.length===0)?!0:r.children.every((i,l)=>{var c;return(c=o.children)==null?void 0:c.some(d=>Lm(i,d))}):!1}async function W1(r,o,i){if(!r.lazy)return;let l=await r.lazy();if(!r.lazy)return;let c=i[r.id];$e(c,"No route found in manifest");let d={};for(let f in l){let m=c[f]!==void 0&&f!=="hasErrorBoundary";Jo(!m,'Route "'+c.id+'" has a static property "'+f+'" defined but its lazy function is also returning a value for this property. '+('The lazy route property "'+f+'" will be ignored.')),!m&&!d1.has(f)&&(d[f]=l[f])}Object.assign(c,d),Object.assign(c,lt({},o(c),{lazy:void 0}))}async function $1(r){let{matches:o}=r,i=o.filter(c=>c.shouldLoad);return(await Promise.all(i.map(c=>c.resolve()))).reduce((c,d,f)=>Object.assign(c,{[i[f].route.id]:d}),{})}async function V1(r,o,i,l,c,d,f,h,m,v){let b=d.map(C=>C.route.lazy?W1(C.route,m,h):void 0),y=d.map((C,L)=>{let M=b[L],z=c.some(R=>R.route.id===C.route.id);return lt({},C,{shouldLoad:z,resolve:async R=>(R&&l.method==="GET"&&(C.route.lazy||C.route.loader)&&(z=!0),z?G1(o,l,C,M,R,v):Promise.resolve({type:et.data,result:void 0}))})}),S=await r({matches:y,request:l,params:d[0].params,fetcherKey:f,context:v});try{await Promise.all(b)}catch{}return S}async function G1(r,o,i,l,c,d){let f,h,m=v=>{let b,y=new Promise((L,M)=>b=M);h=()=>b(),o.signal.addEventListener("abort",h);let S=L=>typeof v!="function"?Promise.reject(new Error("You cannot call the handler for a route which defines a boolean "+('"'+r+'" [routeId: '+i.route.id+"]"))):v({request:o,params:i.params,context:d},...L!==void 0?[L]:[]),C=(async()=>{try{return{type:"data",result:await(c?c(M=>S(M)):S())}}catch(L){return{type:"error",result:L}}})();return Promise.race([C,y])};try{let v=i.route[r];if(l)if(v){let b,[y]=await Promise.all([m(v).catch(S=>{b=S}),l]);if(b!==void 0)throw b;f=y}else if(await l,v=i.route[r],v)f=await m(v);else if(r==="action"){let b=new URL(o.url),y=b.pathname+b.search;throw tr(405,{method:o.method,pathname:y,routeId:i.route.id})}else return{type:et.data,result:void 0};else if(v)f=await m(v);else{let b=new URL(o.url),y=b.pathname+b.search;throw tr(404,{pathname:y})}$e(f.result!==void 0,"You defined "+(r==="action"?"an action":"a loader")+" for route "+('"'+i.route.id+"\" but didn't return anything from your `"+r+"` ")+"function. Please return a value or `null`.")}catch(v){return{type:et.error,result:v}}finally{h&&o.signal.removeEventListener("abort",h)}return f}async function Q1(r){let{result:o,type:i}=r;if(zm(o)){let y;try{let S=o.headers.get("Content-Type");S&&/\bapplication\/json\b/.test(S)?o.body==null?y=null:y=await o.json():y=await o.text()}catch(S){return{type:et.error,error:S}}return i===et.error?{type:et.error,error:new Tl(o.status,o.statusText,y),statusCode:o.status,headers:o.headers}:{type:et.data,data:y,statusCode:o.status,headers:o.headers}}if(i===et.error){if(_0(o)){var l,c;if(o.data instanceof Error){var d,f;return{type:et.error,error:o.data,statusCode:(d=o.init)==null?void 0:d.status,headers:(f=o.init)!=null&&f.headers?new Headers(o.init.headers):void 0}}return{type:et.error,error:new Tl(((l=o.init)==null?void 0:l.status)||500,void 0,o.data),statusCode:bo(o)?o.status:void 0,headers:(c=o.init)!=null&&c.headers?new Headers(o.init.headers):void 0}}return{type:et.error,error:o,statusCode:bo(o)?o.status:void 0}}if(q1(o)){var h,m;return{type:et.deferred,deferredData:o,statusCode:(h=o.init)==null?void 0:h.status,headers:((m=o.init)==null?void 0:m.headers)&&new Headers(o.init.headers)}}if(_0(o)){var v,b;return{type:et.data,data:o.data,statusCode:(v=o.init)==null?void 0:v.status,headers:(b=o.init)!=null&&b.headers?new Headers(o.init.headers):void 0}}return{type:et.data,data:o}}function Z1(r,o,i,l,c,d){let f=r.headers.get("Location");if($e(f,"Redirects returned/thrown from loaders/actions must have a Location header"),!iu.test(f)){let h=l.slice(0,l.findIndex(m=>m.route.id===i)+1);f=Gc(new URL(o.url),h,c,!0,f,d),r.headers.set("Location",f)}return r}function w0(r,o,i){if(iu.test(r)){let l=r,c=l.startsWith("//")?new URL(o.protocol+l):new URL(l),d=ia(c.pathname,i)!=null;if(c.origin===o.origin&&d)return c.pathname+c.search+c.hash}return r}function Go(r,o,i,l){let c=r.createURL(Fm(o)).toString(),d={signal:i};if(l&&Dr(l.formMethod)){let{formMethod:f,formEncType:h}=l;d.method=f.toUpperCase(),h==="application/json"?(d.headers=new Headers({"Content-Type":h}),d.body=JSON.stringify(l.json)):h==="text/plain"?d.body=l.text:h==="application/x-www-form-urlencoded"&&l.formData?d.body=Zc(l.formData):d.body=l.formData}return new Request(c,d)}function Zc(r){let o=new URLSearchParams;for(let[i,l]of r.entries())o.append(i,typeof l=="string"?l:l.name);return o}function S0(r){let o=new FormData;for(let[i,l]of r.entries())o.append(i,l);return o}function Y1(r,o,i,l,c){let d={},f=null,h,m=!1,v={},b=i&&ur(i[1])?i[1].error:void 0;return r.forEach(y=>{if(!(y.route.id in o))return;let S=y.route.id,C=o[S];if($e(!mo(C),"Cannot handle redirect results in processLoaderData"),ur(C)){let L=C.error;b!==void 0&&(L=b,b=void 0),f=f||{};{let M=fo(r,S);f[M.route.id]==null&&(f[M.route.id]=L)}d[S]=void 0,m||(m=!0,h=bo(C.error)?C.error.status:500),C.headers&&(v[S]=C.headers)}else Hn(C)?(l.set(S,C.deferredData),d[S]=C.deferredData.data,C.statusCode!=null&&C.statusCode!==200&&!m&&(h=C.statusCode),C.headers&&(v[S]=C.headers)):(d[S]=C.data,C.statusCode&&C.statusCode!==200&&!m&&(h=C.statusCode),C.headers&&(v[S]=C.headers))}),b!==void 0&&i&&(f={[i[0]]:b},d[i[0]]=void 0),{loaderData:d,errors:f,statusCode:h||200,loaderHeaders:v}}function E0(r,o,i,l,c,d,f){let{loaderData:h,errors:m}=Y1(o,i,l,f);return c.forEach(v=>{let{key:b,match:y,controller:S}=v,C=d[b];if($e(C,"Did not find corresponding fetcher result"),!(S&&S.signal.aborted))if(ur(C)){let L=fo(r.matches,y==null?void 0:y.route.id);m&&m[L.route.id]||(m=lt({},m,{[L.route.id]:C.error})),r.fetchers.delete(b)}else if(mo(C))$e(!1,"Unhandled fetcher revalidation redirect");else if(Hn(C))$e(!1,"Unhandled fetcher deferred data");else{let L=jn(C.data);r.fetchers.set(b,L)}}),{loaderData:h,errors:m}}function P0(r,o,i,l){let c=lt({},o);for(let d of i){let f=d.route.id;if(o.hasOwnProperty(f)?o[f]!==void 0&&(c[f]=o[f]):r[f]!==void 0&&d.route.loader&&(c[f]=r[f]),l&&l.hasOwnProperty(f))break}return c}function k0(r){return r?ur(r[1])?{actionData:{}}:{actionData:{[r[0]]:r[1].data}}:{}}function fo(r,o){return(o?r.slice(0,r.findIndex(l=>l.route.id===o)+1):[...r]).reverse().find(l=>l.route.hasErrorBoundary===!0)||r[0]}function C0(r){let o=r.length===1?r[0]:r.find(i=>i.index||!i.path||i.path==="/")||{id:"__shim-error-route__"};return{matches:[{params:{},pathname:"",pathnameBase:"",route:o}],route:o}}function tr(r,o){let{pathname:i,routeId:l,method:c,type:d,message:f}=o===void 0?{}:o,h="Unknown Server Error",m="Unknown @remix-run/router error";return r===400?(h="Bad Request",c&&i&&l?m="You made a "+c+' request to "'+i+'" but '+('did not provide a `loader` for route "'+l+'", ')+"so there is no way to handle the request.":d==="defer-action"?m="defer() is not supported in actions":d==="invalid-body"&&(m="Unable to encode submission body")):r===403?(h="Forbidden",m='Route "'+l+'" does not match URL "'+i+'"'):r===404?(h="Not Found",m='No route matches URL "'+i+'"'):r===405&&(h="Method Not Allowed",c&&i&&l?m="You made a "+c.toUpperCase()+' request to "'+i+'" but '+('did not provide an `action` for route "'+l+'", ')+"so there is no way to handle the request.":c&&(m='Invalid request method "'+c.toUpperCase()+'"')),new Tl(r||500,h,new Error(m),!0)}function fl(r){let o=Object.entries(r);for(let i=o.length-1;i>=0;i--){let[l,c]=o[i];if(mo(c))return{key:l,result:c}}}function Fm(r){let o=typeof r=="string"?Wn(r):r;return oa(lt({},o,{hash:""}))}function X1(r,o){return r.pathname!==o.pathname||r.search!==o.search?!1:r.hash===""?o.hash!=="":r.hash===o.hash?!0:o.hash!==""}function J1(r){return zm(r.result)&&A1.has(r.result.status)}function Hn(r){return r.type===et.deferred}function ur(r){return r.type===et.error}function mo(r){return(r&&r.type)===et.redirect}function _0(r){return typeof r=="object"&&r!=null&&"type"in r&&"data"in r&&"init"in r&&r.type==="DataWithResponseInit"}function q1(r){let o=r;return o&&typeof o=="object"&&typeof o.data=="object"&&typeof o.subscribe=="function"&&typeof o.cancel=="function"&&typeof o.resolveData=="function"}function zm(r){return r!=null&&typeof r.status=="number"&&typeof r.statusText=="string"&&typeof r.headers=="object"&&typeof r.body<"u"}function K1(r){return z1.has(r.toLowerCase())}function Dr(r){return L1.has(r.toLowerCase())}async function e2(r,o,i,l,c){let d=Object.entries(o);for(let f=0;f<d.length;f++){let[h,m]=d[f],v=r.find(S=>(S==null?void 0:S.route.id)===h);if(!v)continue;let b=l.find(S=>S.route.id===v.route.id),y=b!=null&&!Nm(b,v)&&(c&&c[v.route.id])!==void 0;Hn(m)&&y&&await au(m,i,!1).then(S=>{S&&(o[h]=S)})}}async function t2(r,o,i){for(let l=0;l<i.length;l++){let{key:c,routeId:d,controller:f}=i[l],h=o[c];r.find(v=>(v==null?void 0:v.route.id)===d)&&Hn(h)&&($e(f,"Expected an AbortController for revalidating fetcher deferred result"),await au(h,f.signal,!0).then(v=>{v&&(o[c]=v)}))}}async function au(r,o,i){if(i===void 0&&(i=!1),!await r.deferredData.resolveData(o)){if(i)try{return{type:et.data,data:r.deferredData.unwrappedData}}catch(c){return{type:et.error,error:c}}return{type:et.data,data:r.deferredData.data}}}function lu(r){return new URLSearchParams(r).getAll("index").some(o=>o==="")}function Ui(r,o){let i=typeof o=="string"?Wn(o).search:o.search;if(r[r.length-1].route.index&&lu(i||""))return r[r.length-1];let l=Rm(r);return l[l.length-1]}function I0(r){let{formMethod:o,formAction:i,formEncType:l,text:c,formData:d,json:f}=r;if(!(!o||!i||!l)){if(c!=null)return{formMethod:o,formAction:i,formEncType:l,formData:void 0,json:void 0,text:c};if(d!=null)return{formMethod:o,formAction:i,formEncType:l,formData:d,json:void 0,text:void 0};if(f!==void 0)return{formMethod:o,formAction:i,formEncType:l,formData:void 0,json:f,text:void 0}}}function Tc(r,o){return o?{state:"loading",location:r,formMethod:o.formMethod,formAction:o.formAction,formEncType:o.formEncType,formData:o.formData,json:o.json,text:o.text}:{state:"loading",location:r,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0}}function r2(r,o){return{state:"submitting",location:r,formMethod:o.formMethod,formAction:o.formAction,formEncType:o.formEncType,formData:o.formData,json:o.json,text:o.text}}function zi(r,o){return r?{state:"loading",formMethod:r.formMethod,formAction:r.formAction,formEncType:r.formEncType,formData:r.formData,json:r.json,text:r.text,data:o}:{state:"loading",formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0,data:o}}function n2(r,o){return{state:"submitting",formMethod:r.formMethod,formAction:r.formAction,formEncType:r.formEncType,formData:r.formData,json:r.json,text:r.text,data:o?o.data:void 0}}function jn(r){return{state:"idle",formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0,data:r}}function o2(r,o){try{let i=r.sessionStorage.getItem(Mm);if(i){let l=JSON.parse(i);for(let[c,d]of Object.entries(l||{}))d&&Array.isArray(d)&&o.set(c,new Set(d||[]))}}catch{}}function i2(r,o){if(o.size>0){let i={};for(let[l,c]of o)i[l]=[...c];try{r.sessionStorage.setItem(Mm,JSON.stringify(i))}catch(l){Jo(!1,"Failed to save applied view transitions in sessionStorage ("+l+").")}}}/**
 * React Router v6.30.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function Yc(){return Yc=Object.assign?Object.assign.bind():function(r){for(var o=1;o<arguments.length;o++){var i=arguments[o];for(var l in i)Object.prototype.hasOwnProperty.call(i,l)&&(r[l]=i[l])}return r},Yc.apply(this,arguments)}const Am=w.createContext(null),Om=w.createContext(null),Bm=w.createContext(null),su=w.createContext(null),Bl=w.createContext({outlet:null,matches:[],isDataRoute:!1}),Dm=w.createContext(null);function cu(){return w.useContext(su)!=null}function a2(){return cu()||$e(!1),w.useContext(su).location}function l2(r,o,i,l){cu()||$e(!1);let{navigator:c,static:d}=w.useContext(Bm),{matches:f}=w.useContext(Bl),h=f[f.length-1],m=h?h.params:{};h&&h.pathname;let v=h?h.pathnameBase:"/";h&&h.route;let b=a2(),y;y=b;let S=y.pathname||"/",C=S;if(v!=="/"){let z=v.replace(/^\//,"").split("/");C="/"+S.replace(/^\//,"").split("/").slice(z.length).join("/")}let L=!d&&i&&i.matches&&i.matches.length>0?i.matches:uo(r,{pathname:C});return f2(L&&L.map(z=>Object.assign({},z,{params:Object.assign({},m,z.params),pathname:po([v,c.encodeLocation?c.encodeLocation(z.pathname).pathname:z.pathname]),pathnameBase:z.pathnameBase==="/"?v:po([v,c.encodeLocation?c.encodeLocation(z.pathnameBase).pathname:z.pathnameBase])})),f,i,l)}function s2(){let r=Um(),o=bo(r)?r.status+" "+r.statusText:r instanceof Error?r.message:JSON.stringify(r),i=r instanceof Error?r.stack:null,c={padding:"0.5rem",backgroundColor:"rgba(200,200,200, 0.5)"};return w.createElement(w.Fragment,null,w.createElement("h2",null,"Unexpected Application Error!"),w.createElement("h3",{style:{fontStyle:"italic"}},o),i?w.createElement("pre",{style:c},i):null,null)}const c2=w.createElement(s2,null);class u2 extends w.Component{constructor(o){super(o),this.state={location:o.location,revalidation:o.revalidation,error:o.error}}static getDerivedStateFromError(o){return{error:o}}static getDerivedStateFromProps(o,i){return i.location!==o.location||i.revalidation!=="idle"&&o.revalidation==="idle"?{error:o.error,location:o.location,revalidation:o.revalidation}:{error:o.error!==void 0?o.error:i.error,location:i.location,revalidation:o.revalidation||i.revalidation}}componentDidCatch(o,i){console.error("React Router caught the following error during render",o,i)}render(){return this.state.error!==void 0?w.createElement(Bl.Provider,{value:this.props.routeContext},w.createElement(Dm.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function d2(r){let{routeContext:o,match:i,children:l}=r,c=w.useContext(Am);return c&&c.static&&c.staticContext&&(i.route.errorElement||i.route.ErrorBoundary)&&(c.staticContext._deepestRenderedBoundaryId=i.route.id),w.createElement(Bl.Provider,{value:o},l)}function f2(r,o,i,l){var c;if(o===void 0&&(o=[]),i===void 0&&(i=null),l===void 0&&(l=null),r==null){var d;if(!i)return null;if(i.errors)r=i.matches;else if((d=l)!=null&&d.v7_partialHydration&&o.length===0&&!i.initialized&&i.matches.length>0)r=i.matches;else return null}let f=r,h=(c=i)==null?void 0:c.errors;if(h!=null){let b=f.findIndex(y=>y.route.id&&(h==null?void 0:h[y.route.id])!==void 0);b>=0||$e(!1),f=f.slice(0,Math.min(f.length,b+1))}let m=!1,v=-1;if(i&&l&&l.v7_partialHydration)for(let b=0;b<f.length;b++){let y=f[b];if((y.route.HydrateFallback||y.route.hydrateFallbackElement)&&(v=b),y.route.id){let{loaderData:S,errors:C}=i,L=y.route.loader&&S[y.route.id]===void 0&&(!C||C[y.route.id]===void 0);if(y.route.lazy||L){m=!0,v>=0?f=f.slice(0,v+1):f=[f[0]];break}}}return f.reduceRight((b,y,S)=>{let C,L=!1,M=null,z=null;i&&(C=h&&y.route.id?h[y.route.id]:void 0,M=y.route.errorElement||c2,m&&(v<0&&S===0?(p2("route-fallback"),L=!0,z=null):v===S&&(L=!0,z=y.route.hydrateFallbackElement||null)));let B=o.concat(f.slice(0,S+1)),R=()=>{let H;return C?H=M:L?H=z:y.route.Component?H=w.createElement(y.route.Component,null):y.route.element?H=y.route.element:H=b,w.createElement(d2,{match:y,routeContext:{outlet:b,matches:B,isDataRoute:i!=null},children:H})};return i&&(y.route.ErrorBoundary||y.route.errorElement||S===0)?w.createElement(u2,{location:i.location,revalidation:i.revalidation,component:M,error:C,children:R(),routeContext:{outlet:null,matches:B,isDataRoute:!0}}):R()},null)}var jm=(function(r){return r.UseBlocker="useBlocker",r.UseLoaderData="useLoaderData",r.UseActionData="useActionData",r.UseRouteError="useRouteError",r.UseNavigation="useNavigation",r.UseRouteLoaderData="useRouteLoaderData",r.UseMatches="useMatches",r.UseRevalidator="useRevalidator",r.UseNavigateStable="useNavigate",r.UseRouteId="useRouteId",r})(jm||{});function m2(r){let o=w.useContext(Om);return o||$e(!1),o}function g2(r){let o=w.useContext(Bl);return o||$e(!1),o}function h2(r){let o=g2(),i=o.matches[o.matches.length-1];return i.route.id||$e(!1),i.route.id}function Um(){var r;let o=w.useContext(Dm),i=m2(jm.UseRouteError),l=h2();return o!==void 0?o:(r=i.errors)==null?void 0:r[l]}const R0={};function p2(r,o,i){R0[r]||(R0[r]=!0)}function v2(r,o){r==null||r.v7_startTransition,(r==null?void 0:r.v7_relativeSplatPath)===void 0&&(!o||o.v7_relativeSplatPath),o&&(o.v7_fetcherPersist,o.v7_normalizeFormMethod,o.v7_partialHydration,o.v7_skipActionErrorRevalidation)}function b2(r){let{basename:o="/",children:i=null,location:l,navigationType:c=pt.Pop,navigator:d,static:f=!1,future:h}=r;cu()&&$e(!1);let m=o.replace(/^\/*/,"/"),v=w.useMemo(()=>({basename:m,navigator:d,static:f,future:Yc({v7_relativeSplatPath:!1},h)}),[m,h,d,f]);typeof l=="string"&&(l=Wn(l));let{pathname:b="/",search:y="",hash:S="",state:C=null,key:L="default"}=l,M=w.useMemo(()=>{let z=ia(b,m);return z==null?null:{location:{pathname:z,search:y,hash:S,state:C,key:L},navigationType:c}},[m,b,y,S,C,L,c]);return M==null?null:w.createElement(Bm.Provider,{value:v},w.createElement(su.Provider,{children:i,value:M}))}new Promise(()=>{});function y2(r){let o={hasErrorBoundary:r.ErrorBoundary!=null||r.errorElement!=null};return r.Component&&Object.assign(o,{element:w.createElement(r.Component),Component:void 0}),r.HydrateFallback&&Object.assign(o,{hydrateFallbackElement:w.createElement(r.HydrateFallback),HydrateFallback:void 0}),r.ErrorBoundary&&Object.assign(o,{errorElement:w.createElement(r.ErrorBoundary),ErrorBoundary:void 0}),o}/**
 * React Router DOM v6.30.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function Ml(){return Ml=Object.assign?Object.assign.bind():function(r){for(var o=1;o<arguments.length;o++){var i=arguments[o];for(var l in i)Object.prototype.hasOwnProperty.call(i,l)&&(r[l]=i[l])}return r},Ml.apply(this,arguments)}const x2="6";try{window.__reactRouterVersion=x2}catch{}function w2(r,o){return j1({basename:void 0,future:Ml({},void 0,{v7_prependBasename:!0}),history:s1({window:void 0}),hydrationData:S2(),routes:r,mapRouteProperties:y2,dataStrategy:void 0,patchRoutesOnNavigation:void 0,window:void 0}).initialize()}function S2(){var r;let o=(r=window)==null?void 0:r.__staticRouterHydrationData;return o&&o.errors&&(o=Ml({},o,{errors:E2(o.errors)})),o}function E2(r){if(!r)return null;let o=Object.entries(r),i={};for(let[l,c]of o)if(c&&c.__type==="RouteErrorResponse")i[l]=new Tl(c.status,c.statusText,c.data,c.internal===!0);else if(c&&c.__type==="Error"){if(c.__subType){let d=window[c.__subType];if(typeof d=="function")try{let f=new d(c.message);f.stack="",i[l]=f}catch{}}if(i[l]==null){let d=new Error(c.message);d.stack="",i[l]=d}}else i[l]=c;return i}const P2=w.createContext({isTransitioning:!1}),k2=w.createContext(new Map),C2="startTransition",T0=e1[C2],_2="flushSync",M0=l1[_2];function I2(r){T0?T0(r):r()}function Ai(r){M0?M0(r):r()}class R2{constructor(){this.status="pending",this.promise=new Promise((o,i)=>{this.resolve=l=>{this.status==="pending"&&(this.status="resolved",o(l))},this.reject=l=>{this.status==="pending"&&(this.status="rejected",i(l))}})}}function T2(r){let{fallbackElement:o,router:i,future:l}=r,[c,d]=w.useState(i.state),[f,h]=w.useState(),[m,v]=w.useState({isTransitioning:!1}),[b,y]=w.useState(),[S,C]=w.useState(),[L,M]=w.useState(),z=w.useRef(new Map),{v7_startTransition:B}=l||{},R=w.useCallback(D=>{B?I2(D):D()},[B]),H=w.useCallback((D,U)=>{let{deletedFetchers:V,flushSync:re,viewTransitionOpts:ne}=U;D.fetchers.forEach((oe,Ee)=>{oe.data!==void 0&&z.current.set(Ee,oe.data)}),V.forEach(oe=>z.current.delete(oe));let fe=i.window==null||i.window.document==null||typeof i.window.document.startViewTransition!="function";if(!ne||fe){re?Ai(()=>d(D)):R(()=>d(D));return}if(re){Ai(()=>{S&&(b&&b.resolve(),S.skipTransition()),v({isTransitioning:!0,flushSync:!0,currentLocation:ne.currentLocation,nextLocation:ne.nextLocation})});let oe=i.window.document.startViewTransition(()=>{Ai(()=>d(D))});oe.finished.finally(()=>{Ai(()=>{y(void 0),C(void 0),h(void 0),v({isTransitioning:!1})})}),Ai(()=>C(oe));return}S?(b&&b.resolve(),S.skipTransition(),M({state:D,currentLocation:ne.currentLocation,nextLocation:ne.nextLocation})):(h(D),v({isTransitioning:!0,flushSync:!1,currentLocation:ne.currentLocation,nextLocation:ne.nextLocation}))},[i.window,S,b,z,R]);w.useLayoutEffect(()=>i.subscribe(H),[i,H]),w.useEffect(()=>{m.isTransitioning&&!m.flushSync&&y(new R2)},[m]),w.useEffect(()=>{if(b&&f&&i.window){let D=f,U=b.promise,V=i.window.document.startViewTransition(async()=>{R(()=>d(D)),await U});V.finished.finally(()=>{y(void 0),C(void 0),h(void 0),v({isTransitioning:!1})}),C(V)}},[R,f,b,i.window]),w.useEffect(()=>{b&&f&&c.location.key===f.location.key&&b.resolve()},[b,S,c.location,f]),w.useEffect(()=>{!m.isTransitioning&&L&&(h(L.state),v({isTransitioning:!0,flushSync:!1,currentLocation:L.currentLocation,nextLocation:L.nextLocation}),M(void 0))},[m.isTransitioning,L]),w.useEffect(()=>{},[]);let Z=w.useMemo(()=>({createHref:i.createHref,encodeLocation:i.encodeLocation,go:D=>i.navigate(D),push:(D,U,V)=>i.navigate(D,{state:U,preventScrollReset:V==null?void 0:V.preventScrollReset}),replace:(D,U,V)=>i.navigate(D,{replace:!0,state:U,preventScrollReset:V==null?void 0:V.preventScrollReset})}),[i]),X=i.basename||"/",te=w.useMemo(()=>({router:i,navigator:Z,static:!1,basename:X}),[i,Z,X]),I=w.useMemo(()=>({v7_relativeSplatPath:i.future.v7_relativeSplatPath}),[i.future.v7_relativeSplatPath]);return w.useEffect(()=>v2(l,i.future),[l,i.future]),w.createElement(w.Fragment,null,w.createElement(Am.Provider,{value:te},w.createElement(Om.Provider,{value:c},w.createElement(k2.Provider,{value:z.current},w.createElement(P2.Provider,{value:m},w.createElement(b2,{basename:X,location:c.location,navigationType:c.historyAction,navigator:Z,future:I},c.initialized||i.future.v7_partialHydration?w.createElement(M2,{routes:i.routes,future:i.future,state:c}):o))))),null)}const M2=w.memo(N2);function N2(r){let{routes:o,future:i,state:l}=r;return l2(o,void 0,l,i)}var N0;(function(r){r.UseScrollRestoration="useScrollRestoration",r.UseSubmit="useSubmit",r.UseSubmitFetcher="useSubmitFetcher",r.UseFetcher="useFetcher",r.useViewTransitionState="useViewTransitionState"})(N0||(N0={}));var L0;(function(r){r.UseFetcher="useFetcher",r.UseFetchers="useFetchers",r.UseScrollRestoration="useScrollRestoration"})(L0||(L0={}));let Gr=(function(r){return r[r.Backspace=8]="Backspace",r[r.Tab=9]="Tab",r[r.Enter=13]="Enter",r[r.Shift=16]="Shift",r[r.Ctrl=17]="Ctrl",r[r.Alt=18]="Alt",r[r.Pause=19]="Pause",r[r.CapsLock=20]="CapsLock",r[r.Escape=27]="Escape",r[r.Space=32]="Space",r[r.PageUp=33]="PageUp",r[r.PageDown=34]="PageDown",r[r.End=35]="End",r[r.Home=36]="Home",r[r.LeftArrow=37]="LeftArrow",r[r.UpArrow=38]="UpArrow",r[r.RightArrow=39]="RightArrow",r[r.DownArrow=40]="DownArrow",r[r.Insert=45]="Insert",r[r.Delete=46]="Delete",r[r.Key0=48]="Key0",r[r.Key1=49]="Key1",r[r.Key2=50]="Key2",r[r.Key3=51]="Key3",r[r.Key4=52]="Key4",r[r.Key5=53]="Key5",r[r.Key6=54]="Key6",r[r.Key7=55]="Key7",r[r.Key8=56]="Key8",r[r.Key9=57]="Key9",r[r.KeyA=65]="KeyA",r[r.KeyB=66]="KeyB",r[r.KeyC=67]="KeyC",r[r.KeyD=68]="KeyD",r[r.KeyE=69]="KeyE",r[r.KeyF=70]="KeyF",r[r.KeyG=71]="KeyG",r[r.KeyH=72]="KeyH",r[r.KeyI=73]="KeyI",r[r.KeyJ=74]="KeyJ",r[r.KeyK=75]="KeyK",r[r.KeyL=76]="KeyL",r[r.KeyM=77]="KeyM",r[r.KeyN=78]="KeyN",r[r.KeyO=79]="KeyO",r[r.KeyP=80]="KeyP",r[r.KeyQ=81]="KeyQ",r[r.KeyR=82]="KeyR",r[r.KeyS=83]="KeyS",r[r.KeyT=84]="KeyT",r[r.KeyU=85]="KeyU",r[r.KeyV=86]="KeyV",r[r.KeyW=87]="KeyW",r[r.KeyX=88]="KeyX",r[r.KeyY=89]="KeyY",r[r.KeyZ=90]="KeyZ",r[r.LeftMeta=91]="LeftMeta",r[r.RightMeta=92]="RightMeta",r[r.Select=93]="Select",r[r.Numpad0=96]="Numpad0",r[r.Numpad1=97]="Numpad1",r[r.Numpad2=98]="Numpad2",r[r.Numpad3=99]="Numpad3",r[r.Numpad4=100]="Numpad4",r[r.Numpad5=101]="Numpad5",r[r.Numpad6=102]="Numpad6",r[r.Numpad7=103]="Numpad7",r[r.Numpad8=104]="Numpad8",r[r.Numpad9=105]="Numpad9",r[r.Multiply=106]="Multiply",r[r.Add=107]="Add",r[r.Subtract=109]="Subtract",r[r.Decimal=110]="Decimal",r[r.Divide=111]="Divide",r[r.F1=112]="F1",r[r.F2=113]="F2",r[r.F3=114]="F3",r[r.F4=115]="F4",r[r.F5=116]="F5",r[r.F6=117]="F6",r[r.F7=118]="F7",r[r.F8=119]="F8",r[r.F9=120]="F9",r[r.F10=121]="F10",r[r.F11=122]="F11",r[r.F12=123]="F12",r[r.NumLock=144]="NumLock",r[r.ScrollLock=145]="ScrollLock",r[r.Semicolon=186]="Semicolon",r[r.Equals=187]="Equals",r[r.Comma=188]="Comma",r[r.Dash=189]="Dash",r[r.Period=190]="Period",r[r.ForwardSlash=191]="ForwardSlash",r[r.GraveAccent=192]="GraveAccent",r[r.OpenBracket=219]="OpenBracket",r[r.BackSlash=220]="BackSlash",r[r.CloseBracket=221]="CloseBracket",r[r.SingleQuote=222]="SingleQuote",r})({});const uu={props:{"data-polaris-scrollable":!0},selector:"[data-polaris-scrollable]"},L2={props:{"data-polaris-overlay":!0}},Hm={props:{"data-polaris-layer":!0},selector:"[data-polaris-layer]"},F0={props:{"data-polaris-unstyled":!0}},Wm={selector:"[data-polaris-top-bar]"},F2={selector:"[data-portal-id]"};function z0(r,o){(o==null||o>r.length)&&(o=r.length);for(var i=0,l=Array(o);i<o;i++)l[i]=r[i];return l}function z2(r){if(Array.isArray(r))return r}function A2(r,o){var i=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(i!=null){var l,c,d,f,h=[],m=!0,v=!1;try{if(d=(i=i.call(r)).next,o!==0)for(;!(m=(l=d.call(i)).done)&&(h.push(l.value),h.length!==o);m=!0);}catch(b){v=!0,c=b}finally{try{if(!m&&i.return!=null&&(f=i.return(),Object(f)!==f))return}finally{if(v)throw c}}return h}}function O2(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function B2(r,o){return z2(r)||A2(r,o)||j2(r,o)||O2()}function D2(r,o){return o||(o=r.slice(0)),r.raw=o,r}function j2(r,o){if(r){if(typeof r=="string")return z0(r,o);var i={}.toString.call(r).slice(8,-1);return i==="Object"&&r.constructor&&(i=r.constructor.name),i==="Map"||i==="Set"?Array.from(r):i==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?z0(r,o):void 0}}var Mc,A0;function U2(){if(A0)return Mc;A0=1;var r=function(R){return o(R)&&!i(R)};function o(B){return!!B&&typeof B=="object"}function i(B){var R=Object.prototype.toString.call(B);return R==="[object RegExp]"||R==="[object Date]"||d(B)}var l=typeof Symbol=="function"&&Symbol.for,c=l?Symbol.for("react.element"):60103;function d(B){return B.$$typeof===c}function f(B){return Array.isArray(B)?[]:{}}function h(B,R){return R.clone!==!1&&R.isMergeableObject(B)?M(f(B),B,R):B}function m(B,R,H){return B.concat(R).map(function(Z){return h(Z,H)})}function v(B,R){if(!R.customMerge)return M;var H=R.customMerge(B);return typeof H=="function"?H:M}function b(B){return Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(B).filter(function(R){return Object.propertyIsEnumerable.call(B,R)}):[]}function y(B){return Object.keys(B).concat(b(B))}function S(B,R){try{return R in B}catch{return!1}}function C(B,R){return S(B,R)&&!(Object.hasOwnProperty.call(B,R)&&Object.propertyIsEnumerable.call(B,R))}function L(B,R,H){var Z={};return H.isMergeableObject(B)&&y(B).forEach(function(X){Z[X]=h(B[X],H)}),y(R).forEach(function(X){C(B,X)||(S(B,X)&&H.isMergeableObject(R[X])?Z[X]=v(X,H)(B[X],R[X],H):Z[X]=h(R[X],H))}),Z}function M(B,R,H){H=H||{},H.arrayMerge=H.arrayMerge||m,H.isMergeableObject=H.isMergeableObject||r,H.cloneUnlessOtherwiseSpecified=h;var Z=Array.isArray(R),X=Array.isArray(B),te=Z===X;return te?Z?H.arrayMerge(B,R,H):L(B,R,H):h(R,H)}M.all=function(R,H){if(!Array.isArray(R))throw new Error("first argument should be an array");return R.reduce(function(Z,X){return M(Z,X,H)},{})};var z=M;return Mc=z,Mc}U2();var O0,Xc=16,Nl="px",$i="em",du="rem",H2=new RegExp(String.raw(O0||(O0=D2(["-?d+(?:.d+|d*)"],["-?\\d+(?:\\.\\d+|\\d*)"])))),W2=new RegExp(Nl+"|"+$i+"|"+du);function $m(r){r===void 0&&(r="");var o=r.match(new RegExp(H2.source+"("+W2.source+")"));return o&&o[1]}function $2(r){r===void 0&&(r="");var o=$m(r);if(!o||o===Nl)return r;if(o===$i||o===du)return""+parseFloat(r)*Xc+Nl}function Vm(r,o){r===void 0&&(r=""),o===void 0&&(o=Xc);var i=$m(r);if(!i||i===$i)return r;if(i===Nl)return""+parseFloat(r)/o+$i;if(i===du)return""+parseFloat(r)*Xc/o+$i}function V2(r){return Object.values(r).flatMap(function(o){return Object.keys(o)})}function G2(r){var o=Object.entries(r),i=o.length-1;return Object.fromEntries(o.map(function(l,c){var d=l,f=B2(d,2),h=f[0],m=f[1],v=Q2(m),b=B0(m),y=c===i?v:v+" and "+B0(o[c+1][1]);return[h,{up:v,down:b,only:y}]}))}function Q2(r){return"(min-width: "+Vm(r)+")"}function B0(r){var o,i=parseFloat((o=$2(r))!=null?o:"")-.04;return"(max-width: "+Vm(i+"px")+")"}var Gm=["xs","sm","md","lg","xl"];function Qm(r){return"p-theme-"+r}function Z2(r){var o=new Set(V2(r));return function(i){return o.has(i)}}var Zm="light",aa=Zm,Y2=[Zm,"light-mobile","light-high-contrast-experimental","dark-experimental"],fu={light:{border:{"border-radius-0":"0rem","border-radius-050":"0.125rem","border-radius-100":"0.25rem","border-radius-150":"0.375rem","border-radius-200":"0.5rem","border-radius-300":"0.75rem","border-radius-400":"1rem","border-radius-500":"1.25rem","border-radius-750":"1.875rem","border-radius-full":"624.9375rem","border-width-0":"0rem","border-width-0165":"0.04125rem","border-width-025":"0.0625rem","border-width-050":"0.125rem","border-width-100":"0.25rem"},breakpoints:{"breakpoints-xs":"0rem","breakpoints-sm":"30.625rem","breakpoints-md":"48rem","breakpoints-lg":"65rem","breakpoints-xl":"90rem"},color:{"color-scheme":"light","color-bg":"rgba(241, 241, 241, 1)","color-bg-inverse":"rgba(26, 26, 26, 1)","color-bg-surface":"rgba(255, 255, 255, 1)","color-bg-surface-hover":"rgba(247, 247, 247, 1)","color-bg-surface-active":"rgba(243, 243, 243, 1)","color-bg-surface-selected":"rgba(241, 241, 241, 1)","color-bg-surface-disabled":"rgba(0, 0, 0, 0.05)","color-bg-surface-secondary":"rgba(247, 247, 247, 1)","color-bg-surface-secondary-hover":"rgba(241, 241, 241, 1)","color-bg-surface-secondary-active":"rgba(235, 235, 235, 1)","color-bg-surface-secondary-selected":"rgba(235, 235, 235, 1)","color-bg-surface-tertiary":"rgba(243, 243, 243, 1)","color-bg-surface-tertiary-hover":"rgba(235, 235, 235, 1)","color-bg-surface-tertiary-active":"rgba(227, 227, 227, 1)","color-bg-surface-brand":"rgba(227, 227, 227, 1)","color-bg-surface-brand-hover":"rgba(235, 235, 235, 1)","color-bg-surface-brand-active":"rgba(241, 241, 241, 1)","color-bg-surface-brand-selected":"rgba(241, 241, 241, 1)","color-bg-surface-info":"rgba(234, 244, 255, 1)","color-bg-surface-info-hover":"rgba(224, 240, 255, 1)","color-bg-surface-info-active":"rgba(202, 230, 255, 1)","color-bg-surface-success":"rgba(205, 254, 212, 1)","color-bg-surface-success-hover":"rgba(175, 254, 191, 1)","color-bg-surface-success-active":"rgba(146, 252, 172, 1)","color-bg-surface-caution":"rgba(255, 248, 219, 1)","color-bg-surface-caution-hover":"rgba(255, 244, 191, 1)","color-bg-surface-caution-active":"rgba(255, 239, 157, 1)","color-bg-surface-warning":"rgba(255, 241, 227, 1)","color-bg-surface-warning-hover":"rgba(255, 235, 213, 1)","color-bg-surface-warning-active":"rgba(255, 228, 198, 1)","color-bg-surface-critical":"rgba(254, 232, 235, 1)","color-bg-surface-critical-hover":"rgba(254, 225, 230, 1)","color-bg-surface-critical-active":"rgba(254, 217, 223, 1)","color-bg-surface-emphasis":"rgba(240, 242, 255, 1)","color-bg-surface-emphasis-hover":"rgba(234, 237, 255, 1)","color-bg-surface-emphasis-active":"rgba(226, 231, 255, 1)","color-bg-surface-magic":"rgba(248, 247, 255, 1)","color-bg-surface-magic-hover":"rgba(243, 241, 255, 1)","color-bg-surface-magic-active":"rgba(233, 229, 255, 1)","color-bg-surface-inverse":"rgba(48, 48, 48, 1)","color-bg-surface-transparent":"rgba(0, 0, 0, 0)","color-bg-fill":"rgba(255, 255, 255, 1)","color-bg-fill-hover":"rgba(250, 250, 250, 1)","color-bg-fill-active":"rgba(247, 247, 247, 1)","color-bg-fill-selected":"rgba(204, 204, 204, 1)","color-bg-fill-disabled":"rgba(0, 0, 0, 0.05)","color-bg-fill-secondary":"rgba(241, 241, 241, 1)","color-bg-fill-secondary-hover":"rgba(235, 235, 235, 1)","color-bg-fill-secondary-active":"rgba(227, 227, 227, 1)","color-bg-fill-secondary-selected":"rgba(227, 227, 227, 1)","color-bg-fill-tertiary":"rgba(227, 227, 227, 1)","color-bg-fill-tertiary-hover":"rgba(212, 212, 212, 1)","color-bg-fill-tertiary-active":"rgba(204, 204, 204, 1)","color-bg-fill-brand":"rgba(48, 48, 48, 1)","color-bg-fill-brand-hover":"rgba(26, 26, 26, 1)","color-bg-fill-brand-active":"rgba(26, 26, 26, 1)","color-bg-fill-brand-selected":"rgba(48, 48, 48, 1)","color-bg-fill-brand-disabled":"rgba(0, 0, 0, 0.17)","color-bg-fill-info":"rgba(145, 208, 255, 1)","color-bg-fill-info-hover":"rgba(81, 192, 255, 1)","color-bg-fill-info-active":"rgba(0, 148, 213, 1)","color-bg-fill-info-secondary":"rgba(213, 235, 255, 1)","color-bg-fill-success":"rgba(4, 123, 93, 1)","color-bg-fill-success-hover":"rgba(3, 94, 76, 1)","color-bg-fill-success-active":"rgba(1, 75, 64, 1)","color-bg-fill-success-secondary":"rgba(175, 254, 191, 1)","color-bg-fill-warning":"rgba(255, 184, 0, 1)","color-bg-fill-warning-hover":"rgba(229, 165, 0, 1)","color-bg-fill-warning-active":"rgba(178, 132, 0, 1)","color-bg-fill-warning-secondary":"rgba(255, 214, 164, 1)","color-bg-fill-caution":"rgba(255, 230, 0, 1)","color-bg-fill-caution-hover":"rgba(234, 211, 0, 1)","color-bg-fill-caution-active":"rgba(225, 203, 0, 1)","color-bg-fill-caution-secondary":"rgba(255, 235, 120, 1)","color-bg-fill-critical":"rgba(199, 10, 36, 1)","color-bg-fill-critical-hover":"rgba(163, 10, 36, 1)","color-bg-fill-critical-active":"rgba(142, 11, 33, 1)","color-bg-fill-critical-selected":"rgba(142, 11, 33, 1)","color-bg-fill-critical-secondary":"rgba(254, 209, 215, 1)","color-bg-fill-emphasis":"rgba(0, 91, 211, 1)","color-bg-fill-emphasis-hover":"rgba(0, 66, 153, 1)","color-bg-fill-emphasis-active":"rgba(0, 46, 106, 1)","color-bg-fill-magic":"rgba(128, 81, 255, 1)","color-bg-fill-magic-secondary":"rgba(233, 229, 255, 1)","color-bg-fill-magic-secondary-hover":"rgba(228, 222, 255, 1)","color-bg-fill-magic-secondary-active":"rgba(223, 217, 255, 1)","color-bg-fill-inverse":"rgba(48, 48, 48, 1)","color-bg-fill-inverse-hover":"rgba(74, 74, 74, 1)","color-bg-fill-inverse-active":"rgba(97, 97, 97, 1)","color-bg-fill-transparent":"rgba(0, 0, 0, 0.02)","color-bg-fill-transparent-hover":"rgba(0, 0, 0, 0.05)","color-bg-fill-transparent-active":"rgba(0, 0, 0, 0.08)","color-bg-fill-transparent-selected":"rgba(0, 0, 0, 0.08)","color-bg-fill-transparent-secondary":"rgba(0, 0, 0, 0.06)","color-bg-fill-transparent-secondary-hover":"rgba(0, 0, 0, 0.08)","color-bg-fill-transparent-secondary-active":"rgba(0, 0, 0, 0.11)","color-text":"rgba(48, 48, 48, 1)","color-text-secondary":"rgba(97, 97, 97, 1)","color-text-disabled":"rgba(181, 181, 181, 1)","color-text-link":"rgba(0, 91, 211, 1)","color-text-link-hover":"rgba(0, 66, 153, 1)","color-text-link-active":"rgba(0, 46, 106, 1)","color-text-brand":"rgba(74, 74, 74, 1)","color-text-brand-hover":"rgba(48, 48, 48, 1)","color-text-brand-on-bg-fill":"rgba(255, 255, 255, 1)","color-text-brand-on-bg-fill-hover":"rgba(227, 227, 227, 1)","color-text-brand-on-bg-fill-active":"rgba(204, 204, 204, 1)","color-text-brand-on-bg-fill-disabled":"rgba(255, 255, 255, 1)","color-text-info":"rgba(0, 58, 90, 1)","color-text-info-hover":"rgba(0, 58, 90, 1)","color-text-info-active":"rgba(0, 33, 51, 1)","color-text-info-secondary":"rgba(0, 124, 180, 1)","color-text-info-on-bg-fill":"rgba(0, 33, 51, 1)","color-text-success":"rgba(1, 75, 64, 1)","color-text-success-hover":"rgba(7, 54, 48, 1)","color-text-success-active":"rgba(2, 38, 34, 1)","color-text-success-secondary":"rgba(4, 123, 93, 1)","color-text-success-on-bg-fill":"rgba(250, 255, 251, 1)","color-text-caution":"rgba(79, 71, 0, 1)","color-text-caution-hover":"rgba(51, 46, 0, 1)","color-text-caution-active":"rgba(31, 28, 0, 1)","color-text-caution-secondary":"rgba(130, 117, 0, 1)","color-text-caution-on-bg-fill":"rgba(51, 46, 0, 1)","color-text-warning":"rgba(94, 66, 0, 1)","color-text-warning-hover":"rgba(65, 45, 0, 1)","color-text-warning-active":"rgba(37, 26, 0, 1)","color-text-warning-secondary":"rgba(149, 111, 0, 1)","color-text-warning-on-bg-fill":"rgba(37, 26, 0, 1)","color-text-critical":"rgba(142, 11, 33, 1)","color-text-critical-hover":"rgba(95, 7, 22, 1)","color-text-critical-active":"rgba(47, 4, 11, 1)","color-text-critical-secondary":"rgba(199, 10, 36, 1)","color-text-critical-on-bg-fill":"rgba(255, 250, 251, 1)","color-text-emphasis":"rgba(0, 91, 211, 1)","color-text-emphasis-hover":"rgba(0, 66, 153, 1)","color-text-emphasis-active":"rgba(0, 46, 106, 1)","color-text-emphasis-on-bg-fill":"rgba(252, 253, 255, 1)","color-text-emphasis-on-bg-fill-hover":"rgba(226, 231, 255, 1)","color-text-emphasis-on-bg-fill-active":"rgba(213, 220, 255, 1)","color-text-magic":"rgba(87, 0, 209, 1)","color-text-magic-secondary":"rgba(113, 38, 255, 1)","color-text-magic-on-bg-fill":"rgba(253, 253, 255, 1)","color-text-inverse":"rgba(227, 227, 227, 1)","color-text-inverse-secondary":"rgba(181, 181, 181, 1)","color-text-link-inverse":"rgba(197, 208, 255, 1)","color-border":"rgba(227, 227, 227, 1)","color-border-hover":"rgba(204, 204, 204, 1)","color-border-disabled":"rgba(235, 235, 235, 1)","color-border-secondary":"rgba(235, 235, 235, 1)","color-border-tertiary":"rgba(204, 204, 204, 1)","color-border-focus":"rgba(0, 91, 211, 1)","color-border-brand":"rgba(227, 227, 227, 1)","color-border-info":"rgba(168, 216, 255, 1)","color-border-success":"rgba(146, 252, 172, 1)","color-border-caution":"rgba(255, 235, 120, 1)","color-border-warning":"rgba(255, 200, 121, 1)","color-border-critical":"rgba(254, 193, 199, 1)","color-border-critical-secondary":"rgba(142, 11, 33, 1)","color-border-emphasis":"rgba(0, 91, 211, 1)","color-border-emphasis-hover":"rgba(0, 66, 153, 1)","color-border-emphasis-active":"rgba(0, 46, 106, 1)","color-border-magic":"rgba(228, 222, 255, 1)","color-border-magic-secondary":"rgba(148, 116, 255, 1)","color-border-magic-secondary-hover":"rgba(128, 81, 255, 1)","color-border-inverse":"rgba(97, 97, 97, 1)","color-border-inverse-hover":"rgba(204, 204, 204, 1)","color-border-inverse-active":"rgba(227, 227, 227, 1)","color-tooltip-tail-down-border":"rgba(212, 212, 212, 1)","color-tooltip-tail-up-border":"rgba(227, 227, 227, 1)","color-icon":"rgba(74, 74, 74, 1)","color-icon-hover":"rgba(48, 48, 48, 1)","color-icon-active":"rgba(26, 26, 26, 1)","color-icon-disabled":"rgba(204, 204, 204, 1)","color-icon-secondary":"rgba(138, 138, 138, 1)","color-icon-secondary-hover":"rgba(97, 97, 97, 1)","color-icon-secondary-active":"rgba(74, 74, 74, 1)","color-icon-brand":"rgba(26, 26, 26, 1)","color-icon-info":"rgba(0, 148, 213, 1)","color-icon-success":"rgba(4, 123, 93, 1)","color-icon-caution":"rgba(153, 138, 0, 1)","color-icon-warning":"rgba(178, 132, 0, 1)","color-icon-critical":"rgba(226, 44, 56, 1)","color-icon-emphasis":"rgba(0, 91, 211, 1)","color-icon-emphasis-hover":"rgba(0, 66, 153, 1)","color-icon-emphasis-active":"rgba(0, 46, 106, 1)","color-icon-magic":"rgba(128, 81, 255, 1)","color-icon-inverse":"rgba(227, 227, 227, 1)","color-avatar-bg-fill":"rgba(181, 181, 181, 1)","color-avatar-five-bg-fill":"rgba(253, 75, 146, 1)","color-avatar-five-text-on-bg-fill":"rgba(255, 246, 248, 1)","color-avatar-four-bg-fill":"rgba(81, 192, 255, 1)","color-avatar-four-text-on-bg-fill":"rgba(0, 33, 51, 1)","color-avatar-one-bg-fill":"rgba(197, 48, 197, 1)","color-avatar-one-text-on-bg-fill":"rgba(253, 239, 253, 1)","color-avatar-seven-bg-fill":"rgba(148, 116, 255, 1)","color-avatar-seven-text-on-bg-fill":"rgba(248, 247, 255, 1)","color-avatar-six-bg-fill":"rgba(37, 232, 43, 1)","color-avatar-six-text-on-bg-fill":"rgba(3, 61, 5, 1)","color-avatar-text-on-bg-fill":"rgba(255, 255, 255, 1)","color-avatar-three-bg-fill":"rgba(44, 224, 212, 1)","color-avatar-three-text-on-bg-fill":"rgba(3, 60, 57, 1)","color-avatar-two-bg-fill":"rgba(82, 244, 144, 1)","color-avatar-two-text-on-bg-fill":"rgba(1, 75, 64, 1)","color-backdrop-bg":"rgba(0, 0, 0, 0.71)","color-button-gradient-bg-fill":"linear-gradient(180deg, rgba(48, 48, 48, 0) 63.53%, rgba(255, 255, 255, 0.15) 100%)","color-checkbox-bg-surface-disabled":"rgba(0, 0, 0, 0.08)","color-checkbox-icon-disabled":"rgba(255, 255, 255, 1)","color-input-bg-surface":"rgba(253, 253, 253, 1)","color-input-bg-surface-hover":"rgba(250, 250, 250, 1)","color-input-bg-surface-active":"rgba(247, 247, 247, 1)","color-input-border":"rgba(138, 138, 138, 1)","color-input-border-hover":"rgba(97, 97, 97, 1)","color-input-border-active":"rgba(26, 26, 26, 1)","color-nav-bg":"rgba(235, 235, 235, 1)","color-nav-bg-surface":"rgba(0, 0, 0, 0.02)","color-nav-bg-surface-hover":"rgba(241, 241, 241, 1)","color-nav-bg-surface-active":"rgba(250, 250, 250, 1)","color-nav-bg-surface-selected":"rgba(250, 250, 250, 1)","color-radio-button-bg-surface-disabled":"rgba(0, 0, 0, 0.08)","color-radio-button-icon-disabled":"rgba(255, 255, 255, 1)","color-video-thumbnail-play-button-bg-fill-hover":"rgba(0, 0, 0, 0.81)","color-video-thumbnail-play-button-bg-fill":"rgba(0, 0, 0, 0.71)","color-video-thumbnail-play-button-text-on-bg-fill":"rgba(255, 255, 255, 1)","color-scrollbar-thumb-bg-hover":"rgba(138, 138, 138, 1)","color-scrollbar-thumb-bg":"rgba(181, 181, 181, 1)"},font:{"font-family-sans":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","font-family-mono":"ui-monospace, SFMono-Regular, 'SF Mono', Consolas, 'Liberation Mono', Menlo, monospace","font-size-275":"0.6875rem","font-size-300":"0.75rem","font-size-325":"0.8125rem","font-size-350":"0.875rem","font-size-400":"1rem","font-size-450":"1.125rem","font-size-500":"1.25rem","font-size-550":"1.375rem","font-size-600":"1.5rem","font-size-750":"1.875rem","font-size-800":"2rem","font-size-900":"2.25rem","font-size-1000":"2.5rem","font-weight-regular":"450","font-weight-medium":"550","font-weight-semibold":"650","font-weight-bold":"700","font-letter-spacing-densest":"-0.03375rem","font-letter-spacing-denser":"-0.01875rem","font-letter-spacing-dense":"-0.0125rem","font-letter-spacing-normal":"0rem","font-line-height-300":"0.75rem","font-line-height-400":"1rem","font-line-height-500":"1.25rem","font-line-height-600":"1.5rem","font-line-height-700":"1.75rem","font-line-height-800":"2rem","font-line-height-1000":"2.5rem","font-line-height-1200":"3rem"},height:{"height-0":"0rem","height-025":"0.0625rem","height-050":"0.125rem","height-100":"0.25rem","height-150":"0.375rem","height-200":"0.5rem","height-300":"0.75rem","height-400":"1rem","height-500":"1.25rem","height-600":"1.5rem","height-700":"1.75rem","height-800":"2rem","height-900":"2.25rem","height-1000":"2.5rem","height-1200":"3rem","height-1600":"4rem","height-2000":"5rem","height-2400":"6rem","height-2800":"7rem","height-3200":"8rem"},motion:{"motion-duration-0":"0ms","motion-duration-50":"50ms","motion-duration-100":"100ms","motion-duration-150":"150ms","motion-duration-200":"200ms","motion-duration-250":"250ms","motion-duration-300":"300ms","motion-duration-350":"350ms","motion-duration-400":"400ms","motion-duration-450":"450ms","motion-duration-500":"500ms","motion-duration-5000":"5000ms","motion-ease":"cubic-bezier(0.25, 0.1, 0.25, 1)","motion-ease-in":"cubic-bezier(0.42, 0, 1, 1)","motion-ease-out":"cubic-bezier(0.19, 0.91, 0.38, 1)","motion-ease-in-out":"cubic-bezier(0.42, 0, 0.58, 1)","motion-linear":"cubic-bezier(0, 0, 1, 1)","motion-keyframes-bounce":"{ from, 65%, 85% { transform: scale(1) } 75% { transform: scale(0.85) } 82.5% { transform: scale(1.05) } }","motion-keyframes-fade-in":"{ to { opacity: 1 } }","motion-keyframes-pulse":"{ from, 75% { transform: scale(0.85); opacity: 1; } to { transform: scale(2.5); opacity: 0; } }","motion-keyframes-spin":"{ to { transform: rotate(1turn) } }","motion-keyframes-appear-above":"{ from { transform: translateY(var(--p-space-100)); opacity: 0; } to { transform: none; opacity: 1; } }","motion-keyframes-appear-below":"{ from { transform: translateY(calc(var(--p-space-100) * -1)); opacity: 0; } to { transform: none; opacity: 1; } }"},shadow:{"shadow-0":"none","shadow-100":"0rem 0.0625rem 0rem 0rem rgba(26, 26, 26, 0.07)","shadow-200":"0rem 0.1875rem 0.0625rem -0.0625rem rgba(26, 26, 26, 0.07)","shadow-300":"0rem 0.25rem 0.375rem -0.125rem rgba(26, 26, 26, 0.20)","shadow-400":"0rem 0.5rem 1rem -0.25rem rgba(26, 26, 26, 0.22)","shadow-500":"0rem 0.75rem 1.25rem -0.5rem rgba(26, 26, 26, 0.24)","shadow-600":"0rem 1.25rem 1.25rem -0.5rem rgba(26, 26, 26, 0.28)","shadow-bevel-100":"0.0625rem 0rem 0rem 0rem rgba(0, 0, 0, 0.13) inset, -0.0625rem 0rem 0rem 0rem rgba(0, 0, 0, 0.13) inset, 0rem -0.0625rem 0rem 0rem rgba(0, 0, 0, 0.17) inset, 0rem 0.0625rem 0rem 0rem rgba(204, 204, 204, 0.5) inset","shadow-inset-100":"0rem 0.0625rem 0.125rem 0rem rgba(26, 26, 26, 0.15) inset, 0rem 0.0625rem 0.0625rem 0rem rgba(26, 26, 26, 0.15) inset","shadow-inset-200":"0rem 0.125rem 0.0625rem 0rem rgba(26, 26, 26, 0.20) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.12) inset, -0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.12) inset","shadow-button":"0rem -0.0625rem 0rem 0rem #b5b5b5 inset, 0rem 0rem 0rem 0.0625rem rgba(0, 0, 0, 0.1) inset, 0rem 0.03125rem 0rem 0.09375rem #FFF inset","shadow-button-hover":"0rem 0.0625rem 0rem 0rem #EBEBEB inset, -0.0625rem 0rem 0rem 0rem #EBEBEB inset, 0.0625rem 0rem 0rem 0rem #EBEBEB inset, 0rem -0.0625rem 0rem 0rem #CCC inset","shadow-button-inset":"-0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.122) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.122) inset, 0rem 0.125rem 0.0625rem 0rem rgba(26, 26, 26, 0.2) inset","shadow-button-primary":"0rem -0.0625rem 0rem 0.0625rem rgba(0, 0, 0, 0.8) inset, 0rem 0rem 0rem 0.0625rem rgba(48, 48, 48, 1) inset, 0rem 0.03125rem 0rem 0.09375rem rgba(255, 255, 255, 0.25) inset","shadow-button-primary-hover":"0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.24) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem -0.0625rem 0rem 0rem #000 inset, 0rem -0.0625rem 0rem 0.0625rem #1A1A1A","shadow-button-primary-inset":"0rem 0.1875rem 0rem 0rem rgb(0, 0, 0) inset","shadow-button-primary-critical":"0rem -0.0625rem 0rem 0.0625rem rgba(142, 31, 11, 0.8) inset, 0rem 0rem 0rem 0.0625rem rgba(181, 38, 11, 0.8) inset, 0rem 0.03125rem 0rem 0.09375rem rgba(255, 255, 255, 0.349) inset","shadow-button-primary-critical-hover":"0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.48) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem -0.09375rem 0rem 0rem rgba(0, 0, 0, 0.25) inset","shadow-button-primary-critical-inset":"-0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.2) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.2) inset, 0rem 0.125rem 0rem 0rem rgba(0, 0, 0, 0.6) inset","shadow-button-primary-success":"0rem -0.0625rem 0rem 0.0625rem rgba(12, 81, 50, 0.8) inset, 0rem 0rem 0rem 0.0625rem rgba(19, 111, 69, 0.8) inset, 0rem 0.03125rem 0rem 0.09375rem rgba(255, 255, 255, 0.251) inset","shadow-button-primary-success-hover":"0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.48) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem -0.09375rem 0rem 0rem rgba(0, 0, 0, 0.25) inset","shadow-button-primary-success-inset":"-0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.2) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.2) inset, 0rem 0.125rem 0rem 0rem rgba(0, 0, 0, 0.6) inset","shadow-border-inset":"0rem 0rem 0rem 0.0625rem rgba(0, 0, 0, 0.08) inset"},space:{"space-0":"0rem","space-025":"0.0625rem","space-050":"0.125rem","space-100":"0.25rem","space-150":"0.375rem","space-200":"0.5rem","space-300":"0.75rem","space-400":"1rem","space-500":"1.25rem","space-600":"1.5rem","space-800":"2rem","space-1000":"2.5rem","space-1200":"3rem","space-1600":"4rem","space-2000":"5rem","space-2400":"6rem","space-2800":"7rem","space-3200":"8rem","space-button-group-gap":"0.5rem","space-card-gap":"1rem","space-card-padding":"1rem","space-table-cell-padding":"0.375rem"},text:{"text-heading-3xl-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-3xl-font-size":"2.25rem","text-heading-3xl-font-weight":"700","text-heading-3xl-font-letter-spacing":"-0.03375rem","text-heading-3xl-font-line-height":"3rem","text-heading-2xl-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-2xl-font-size":"1.875rem","text-heading-2xl-font-weight":"700","text-heading-2xl-font-letter-spacing":"-0.01875rem","text-heading-2xl-font-line-height":"2.5rem","text-heading-xl-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-xl-font-size":"1.5rem","text-heading-xl-font-weight":"700","text-heading-xl-font-letter-spacing":"-0.0125rem","text-heading-xl-font-line-height":"2rem","text-heading-lg-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-lg-font-size":"1.25rem","text-heading-lg-font-weight":"650","text-heading-lg-font-letter-spacing":"-0.0125rem","text-heading-lg-font-line-height":"1.5rem","text-heading-md-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-md-font-size":"0.875rem","text-heading-md-font-weight":"650","text-heading-md-font-letter-spacing":"0rem","text-heading-md-font-line-height":"1.25rem","text-heading-sm-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-sm-font-size":"0.8125rem","text-heading-sm-font-weight":"650","text-heading-sm-font-letter-spacing":"0rem","text-heading-sm-font-line-height":"1.25rem","text-heading-xs-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-xs-font-size":"0.75rem","text-heading-xs-font-weight":"650","text-heading-xs-font-letter-spacing":"0rem","text-heading-xs-font-line-height":"1rem","text-body-lg-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-body-lg-font-size":"0.875rem","text-body-lg-font-weight":"450","text-body-lg-font-letter-spacing":"0rem","text-body-lg-font-line-height":"1.25rem","text-body-md-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-body-md-font-size":"0.8125rem","text-body-md-font-weight":"450","text-body-md-font-letter-spacing":"0rem","text-body-md-font-line-height":"1.25rem","text-body-sm-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-body-sm-font-size":"0.75rem","text-body-sm-font-weight":"450","text-body-sm-font-letter-spacing":"0rem","text-body-sm-font-line-height":"1rem","text-body-xs-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-body-xs-font-size":"0.6875rem","text-body-xs-font-weight":"450","text-body-xs-font-letter-spacing":"0rem","text-body-xs-font-line-height":"0.75rem"},width:{"width-0":"0rem","width-025":"0.0625rem","width-050":"0.125rem","width-100":"0.25rem","width-150":"0.375rem","width-200":"0.5rem","width-300":"0.75rem","width-400":"1rem","width-500":"1.25rem","width-600":"1.5rem","width-700":"1.75rem","width-800":"2rem","width-900":"2.25rem","width-1000":"2.5rem","width-1200":"3rem","width-1600":"4rem","width-2000":"5rem","width-2400":"6rem","width-2800":"7rem","width-3200":"8rem"},zIndex:{"z-index-0":"auto","z-index-1":"100","z-index-2":"400","z-index-3":"510","z-index-4":"512","z-index-5":"513","z-index-6":"514","z-index-7":"515","z-index-8":"516","z-index-9":"517","z-index-10":"518","z-index-11":"519","z-index-12":"520"}},"light-mobile":{border:{"border-radius-0":"0rem","border-radius-050":"0.125rem","border-radius-100":"0.25rem","border-radius-150":"0.375rem","border-radius-200":"0.5rem","border-radius-300":"0.75rem","border-radius-400":"1rem","border-radius-500":"1.25rem","border-radius-750":"1.875rem","border-radius-full":"624.9375rem","border-width-0":"0rem","border-width-0165":"0.04125rem","border-width-025":"0.0625rem","border-width-050":"0.125rem","border-width-100":"0.25rem"},breakpoints:{"breakpoints-xs":"0rem","breakpoints-sm":"30.625rem","breakpoints-md":"48rem","breakpoints-lg":"65rem","breakpoints-xl":"90rem"},color:{"color-scheme":"light","color-bg":"rgba(241, 241, 241, 1)","color-bg-inverse":"rgba(26, 26, 26, 1)","color-bg-surface":"rgba(255, 255, 255, 1)","color-bg-surface-hover":"rgba(247, 247, 247, 1)","color-bg-surface-active":"rgba(243, 243, 243, 1)","color-bg-surface-selected":"rgba(241, 241, 241, 1)","color-bg-surface-disabled":"rgba(0, 0, 0, 0.05)","color-bg-surface-secondary":"rgba(247, 247, 247, 1)","color-bg-surface-secondary-hover":"rgba(241, 241, 241, 1)","color-bg-surface-secondary-active":"rgba(235, 235, 235, 1)","color-bg-surface-secondary-selected":"rgba(235, 235, 235, 1)","color-bg-surface-tertiary":"rgba(243, 243, 243, 1)","color-bg-surface-tertiary-hover":"rgba(235, 235, 235, 1)","color-bg-surface-tertiary-active":"rgba(227, 227, 227, 1)","color-bg-surface-brand":"rgba(227, 227, 227, 1)","color-bg-surface-brand-hover":"rgba(235, 235, 235, 1)","color-bg-surface-brand-active":"rgba(241, 241, 241, 1)","color-bg-surface-brand-selected":"rgba(241, 241, 241, 1)","color-bg-surface-info":"rgba(234, 244, 255, 1)","color-bg-surface-info-hover":"rgba(224, 240, 255, 1)","color-bg-surface-info-active":"rgba(202, 230, 255, 1)","color-bg-surface-success":"rgba(205, 254, 212, 1)","color-bg-surface-success-hover":"rgba(175, 254, 191, 1)","color-bg-surface-success-active":"rgba(146, 252, 172, 1)","color-bg-surface-caution":"rgba(255, 248, 219, 1)","color-bg-surface-caution-hover":"rgba(255, 244, 191, 1)","color-bg-surface-caution-active":"rgba(255, 239, 157, 1)","color-bg-surface-warning":"rgba(255, 241, 227, 1)","color-bg-surface-warning-hover":"rgba(255, 235, 213, 1)","color-bg-surface-warning-active":"rgba(255, 228, 198, 1)","color-bg-surface-critical":"rgba(254, 232, 235, 1)","color-bg-surface-critical-hover":"rgba(254, 225, 230, 1)","color-bg-surface-critical-active":"rgba(254, 217, 223, 1)","color-bg-surface-emphasis":"rgba(240, 242, 255, 1)","color-bg-surface-emphasis-hover":"rgba(234, 237, 255, 1)","color-bg-surface-emphasis-active":"rgba(226, 231, 255, 1)","color-bg-surface-magic":"rgba(248, 247, 255, 1)","color-bg-surface-magic-hover":"rgba(243, 241, 255, 1)","color-bg-surface-magic-active":"rgba(233, 229, 255, 1)","color-bg-surface-inverse":"rgba(48, 48, 48, 1)","color-bg-surface-transparent":"rgba(0, 0, 0, 0)","color-bg-fill":"rgba(255, 255, 255, 1)","color-bg-fill-hover":"rgba(250, 250, 250, 1)","color-bg-fill-active":"rgba(247, 247, 247, 1)","color-bg-fill-selected":"rgba(204, 204, 204, 1)","color-bg-fill-disabled":"rgba(0, 0, 0, 0.05)","color-bg-fill-secondary":"rgba(241, 241, 241, 1)","color-bg-fill-secondary-hover":"rgba(235, 235, 235, 1)","color-bg-fill-secondary-active":"rgba(227, 227, 227, 1)","color-bg-fill-secondary-selected":"rgba(227, 227, 227, 1)","color-bg-fill-tertiary":"rgba(227, 227, 227, 1)","color-bg-fill-tertiary-hover":"rgba(212, 212, 212, 1)","color-bg-fill-tertiary-active":"rgba(204, 204, 204, 1)","color-bg-fill-brand":"rgba(48, 48, 48, 1)","color-bg-fill-brand-hover":"rgba(26, 26, 26, 1)","color-bg-fill-brand-active":"rgba(26, 26, 26, 1)","color-bg-fill-brand-selected":"rgba(48, 48, 48, 1)","color-bg-fill-brand-disabled":"rgba(0, 0, 0, 0.17)","color-bg-fill-info":"rgba(145, 208, 255, 1)","color-bg-fill-info-hover":"rgba(81, 192, 255, 1)","color-bg-fill-info-active":"rgba(0, 148, 213, 1)","color-bg-fill-info-secondary":"rgba(213, 235, 255, 1)","color-bg-fill-success":"rgba(4, 123, 93, 1)","color-bg-fill-success-hover":"rgba(3, 94, 76, 1)","color-bg-fill-success-active":"rgba(1, 75, 64, 1)","color-bg-fill-success-secondary":"rgba(175, 254, 191, 1)","color-bg-fill-warning":"rgba(255, 184, 0, 1)","color-bg-fill-warning-hover":"rgba(229, 165, 0, 1)","color-bg-fill-warning-active":"rgba(178, 132, 0, 1)","color-bg-fill-warning-secondary":"rgba(255, 214, 164, 1)","color-bg-fill-caution":"rgba(255, 230, 0, 1)","color-bg-fill-caution-hover":"rgba(234, 211, 0, 1)","color-bg-fill-caution-active":"rgba(225, 203, 0, 1)","color-bg-fill-caution-secondary":"rgba(255, 235, 120, 1)","color-bg-fill-critical":"rgba(199, 10, 36, 1)","color-bg-fill-critical-hover":"rgba(163, 10, 36, 1)","color-bg-fill-critical-active":"rgba(142, 11, 33, 1)","color-bg-fill-critical-selected":"rgba(142, 11, 33, 1)","color-bg-fill-critical-secondary":"rgba(254, 209, 215, 1)","color-bg-fill-emphasis":"rgba(0, 91, 211, 1)","color-bg-fill-emphasis-hover":"rgba(0, 66, 153, 1)","color-bg-fill-emphasis-active":"rgba(0, 46, 106, 1)","color-bg-fill-magic":"rgba(128, 81, 255, 1)","color-bg-fill-magic-secondary":"rgba(233, 229, 255, 1)","color-bg-fill-magic-secondary-hover":"rgba(228, 222, 255, 1)","color-bg-fill-magic-secondary-active":"rgba(223, 217, 255, 1)","color-bg-fill-inverse":"rgba(48, 48, 48, 1)","color-bg-fill-inverse-hover":"rgba(74, 74, 74, 1)","color-bg-fill-inverse-active":"rgba(97, 97, 97, 1)","color-bg-fill-transparent":"rgba(0, 0, 0, 0.02)","color-bg-fill-transparent-hover":"rgba(0, 0, 0, 0.05)","color-bg-fill-transparent-active":"rgba(0, 0, 0, 0.08)","color-bg-fill-transparent-selected":"rgba(0, 0, 0, 0.08)","color-bg-fill-transparent-secondary":"rgba(0, 0, 0, 0.06)","color-bg-fill-transparent-secondary-hover":"rgba(0, 0, 0, 0.08)","color-bg-fill-transparent-secondary-active":"rgba(0, 0, 0, 0.11)","color-text":"rgba(48, 48, 48, 1)","color-text-secondary":"rgba(97, 97, 97, 1)","color-text-disabled":"rgba(181, 181, 181, 1)","color-text-link":"rgba(0, 91, 211, 1)","color-text-link-hover":"rgba(0, 66, 153, 1)","color-text-link-active":"rgba(0, 46, 106, 1)","color-text-brand":"rgba(74, 74, 74, 1)","color-text-brand-hover":"rgba(48, 48, 48, 1)","color-text-brand-on-bg-fill":"rgba(255, 255, 255, 1)","color-text-brand-on-bg-fill-hover":"rgba(227, 227, 227, 1)","color-text-brand-on-bg-fill-active":"rgba(204, 204, 204, 1)","color-text-brand-on-bg-fill-disabled":"rgba(255, 255, 255, 1)","color-text-info":"rgba(0, 58, 90, 1)","color-text-info-hover":"rgba(0, 58, 90, 1)","color-text-info-active":"rgba(0, 33, 51, 1)","color-text-info-secondary":"rgba(0, 124, 180, 1)","color-text-info-on-bg-fill":"rgba(0, 33, 51, 1)","color-text-success":"rgba(1, 75, 64, 1)","color-text-success-hover":"rgba(7, 54, 48, 1)","color-text-success-active":"rgba(2, 38, 34, 1)","color-text-success-secondary":"rgba(4, 123, 93, 1)","color-text-success-on-bg-fill":"rgba(250, 255, 251, 1)","color-text-caution":"rgba(79, 71, 0, 1)","color-text-caution-hover":"rgba(51, 46, 0, 1)","color-text-caution-active":"rgba(31, 28, 0, 1)","color-text-caution-secondary":"rgba(130, 117, 0, 1)","color-text-caution-on-bg-fill":"rgba(51, 46, 0, 1)","color-text-warning":"rgba(94, 66, 0, 1)","color-text-warning-hover":"rgba(65, 45, 0, 1)","color-text-warning-active":"rgba(37, 26, 0, 1)","color-text-warning-secondary":"rgba(149, 111, 0, 1)","color-text-warning-on-bg-fill":"rgba(37, 26, 0, 1)","color-text-critical":"rgba(142, 11, 33, 1)","color-text-critical-hover":"rgba(95, 7, 22, 1)","color-text-critical-active":"rgba(47, 4, 11, 1)","color-text-critical-secondary":"rgba(199, 10, 36, 1)","color-text-critical-on-bg-fill":"rgba(255, 250, 251, 1)","color-text-emphasis":"rgba(0, 91, 211, 1)","color-text-emphasis-hover":"rgba(0, 66, 153, 1)","color-text-emphasis-active":"rgba(0, 46, 106, 1)","color-text-emphasis-on-bg-fill":"rgba(252, 253, 255, 1)","color-text-emphasis-on-bg-fill-hover":"rgba(226, 231, 255, 1)","color-text-emphasis-on-bg-fill-active":"rgba(213, 220, 255, 1)","color-text-magic":"rgba(87, 0, 209, 1)","color-text-magic-secondary":"rgba(113, 38, 255, 1)","color-text-magic-on-bg-fill":"rgba(253, 253, 255, 1)","color-text-inverse":"rgba(227, 227, 227, 1)","color-text-inverse-secondary":"rgba(181, 181, 181, 1)","color-text-link-inverse":"rgba(197, 208, 255, 1)","color-border":"rgba(227, 227, 227, 1)","color-border-hover":"rgba(204, 204, 204, 1)","color-border-disabled":"rgba(235, 235, 235, 1)","color-border-secondary":"rgba(235, 235, 235, 1)","color-border-tertiary":"rgba(204, 204, 204, 1)","color-border-focus":"rgba(0, 91, 211, 1)","color-border-brand":"rgba(227, 227, 227, 1)","color-border-info":"rgba(168, 216, 255, 1)","color-border-success":"rgba(146, 252, 172, 1)","color-border-caution":"rgba(255, 235, 120, 1)","color-border-warning":"rgba(255, 200, 121, 1)","color-border-critical":"rgba(254, 193, 199, 1)","color-border-critical-secondary":"rgba(142, 11, 33, 1)","color-border-emphasis":"rgba(0, 91, 211, 1)","color-border-emphasis-hover":"rgba(0, 66, 153, 1)","color-border-emphasis-active":"rgba(0, 46, 106, 1)","color-border-magic":"rgba(228, 222, 255, 1)","color-border-magic-secondary":"rgba(148, 116, 255, 1)","color-border-magic-secondary-hover":"rgba(128, 81, 255, 1)","color-border-inverse":"rgba(97, 97, 97, 1)","color-border-inverse-hover":"rgba(204, 204, 204, 1)","color-border-inverse-active":"rgba(227, 227, 227, 1)","color-tooltip-tail-down-border":"rgba(212, 212, 212, 1)","color-tooltip-tail-up-border":"rgba(227, 227, 227, 1)","color-icon":"rgba(74, 74, 74, 1)","color-icon-hover":"rgba(48, 48, 48, 1)","color-icon-active":"rgba(26, 26, 26, 1)","color-icon-disabled":"rgba(204, 204, 204, 1)","color-icon-secondary":"rgba(138, 138, 138, 1)","color-icon-secondary-hover":"rgba(97, 97, 97, 1)","color-icon-secondary-active":"rgba(74, 74, 74, 1)","color-icon-brand":"rgba(26, 26, 26, 1)","color-icon-info":"rgba(0, 148, 213, 1)","color-icon-success":"rgba(4, 123, 93, 1)","color-icon-caution":"rgba(153, 138, 0, 1)","color-icon-warning":"rgba(178, 132, 0, 1)","color-icon-critical":"rgba(226, 44, 56, 1)","color-icon-emphasis":"rgba(0, 91, 211, 1)","color-icon-emphasis-hover":"rgba(0, 66, 153, 1)","color-icon-emphasis-active":"rgba(0, 46, 106, 1)","color-icon-magic":"rgba(128, 81, 255, 1)","color-icon-inverse":"rgba(227, 227, 227, 1)","color-avatar-bg-fill":"rgba(181, 181, 181, 1)","color-avatar-five-bg-fill":"rgba(253, 75, 146, 1)","color-avatar-five-text-on-bg-fill":"rgba(255, 246, 248, 1)","color-avatar-four-bg-fill":"rgba(81, 192, 255, 1)","color-avatar-four-text-on-bg-fill":"rgba(0, 33, 51, 1)","color-avatar-one-bg-fill":"rgba(197, 48, 197, 1)","color-avatar-one-text-on-bg-fill":"rgba(253, 239, 253, 1)","color-avatar-seven-bg-fill":"rgba(148, 116, 255, 1)","color-avatar-seven-text-on-bg-fill":"rgba(248, 247, 255, 1)","color-avatar-six-bg-fill":"rgba(37, 232, 43, 1)","color-avatar-six-text-on-bg-fill":"rgba(3, 61, 5, 1)","color-avatar-text-on-bg-fill":"rgba(255, 255, 255, 1)","color-avatar-three-bg-fill":"rgba(44, 224, 212, 1)","color-avatar-three-text-on-bg-fill":"rgba(3, 60, 57, 1)","color-avatar-two-bg-fill":"rgba(82, 244, 144, 1)","color-avatar-two-text-on-bg-fill":"rgba(1, 75, 64, 1)","color-backdrop-bg":"rgba(0, 0, 0, 0.71)","color-button-gradient-bg-fill":"none","color-checkbox-bg-surface-disabled":"rgba(0, 0, 0, 0.08)","color-checkbox-icon-disabled":"rgba(255, 255, 255, 1)","color-input-bg-surface":"rgba(253, 253, 253, 1)","color-input-bg-surface-hover":"rgba(250, 250, 250, 1)","color-input-bg-surface-active":"rgba(247, 247, 247, 1)","color-input-border":"rgba(138, 138, 138, 1)","color-input-border-hover":"rgba(97, 97, 97, 1)","color-input-border-active":"rgba(26, 26, 26, 1)","color-nav-bg":"rgba(235, 235, 235, 1)","color-nav-bg-surface":"rgba(0, 0, 0, 0.02)","color-nav-bg-surface-hover":"rgba(241, 241, 241, 1)","color-nav-bg-surface-active":"rgba(250, 250, 250, 1)","color-nav-bg-surface-selected":"rgba(250, 250, 250, 1)","color-radio-button-bg-surface-disabled":"rgba(0, 0, 0, 0.08)","color-radio-button-icon-disabled":"rgba(255, 255, 255, 1)","color-video-thumbnail-play-button-bg-fill-hover":"rgba(0, 0, 0, 0.81)","color-video-thumbnail-play-button-bg-fill":"rgba(0, 0, 0, 0.71)","color-video-thumbnail-play-button-text-on-bg-fill":"rgba(255, 255, 255, 1)","color-scrollbar-thumb-bg-hover":"rgba(138, 138, 138, 1)","color-scrollbar-thumb-bg":"rgba(181, 181, 181, 1)"},font:{"font-family-sans":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","font-family-mono":"ui-monospace, SFMono-Regular, 'SF Mono', Consolas, 'Liberation Mono', Menlo, monospace","font-size-275":"0.6875rem","font-size-300":"0.75rem","font-size-325":"0.8125rem","font-size-350":"0.875rem","font-size-400":"1rem","font-size-450":"1.125rem","font-size-500":"1.25rem","font-size-550":"1.375rem","font-size-600":"1.5rem","font-size-750":"1.875rem","font-size-800":"2rem","font-size-900":"2.25rem","font-size-1000":"2.5rem","font-weight-regular":"450","font-weight-medium":"550","font-weight-semibold":"650","font-weight-bold":"700","font-letter-spacing-densest":"-0.03375rem","font-letter-spacing-denser":"-0.01875rem","font-letter-spacing-dense":"-0.0125rem","font-letter-spacing-normal":"0rem","font-line-height-300":"0.75rem","font-line-height-400":"1rem","font-line-height-500":"1.25rem","font-line-height-600":"1.5rem","font-line-height-700":"1.75rem","font-line-height-800":"2rem","font-line-height-1000":"2.5rem","font-line-height-1200":"3rem"},height:{"height-0":"0rem","height-025":"0.0625rem","height-050":"0.125rem","height-100":"0.25rem","height-150":"0.375rem","height-200":"0.5rem","height-300":"0.75rem","height-400":"1rem","height-500":"1.25rem","height-600":"1.5rem","height-700":"1.75rem","height-800":"2rem","height-900":"2.25rem","height-1000":"2.5rem","height-1200":"3rem","height-1600":"4rem","height-2000":"5rem","height-2400":"6rem","height-2800":"7rem","height-3200":"8rem"},motion:{"motion-duration-0":"0ms","motion-duration-50":"50ms","motion-duration-100":"100ms","motion-duration-150":"150ms","motion-duration-200":"200ms","motion-duration-250":"250ms","motion-duration-300":"300ms","motion-duration-350":"350ms","motion-duration-400":"400ms","motion-duration-450":"450ms","motion-duration-500":"500ms","motion-duration-5000":"5000ms","motion-ease":"cubic-bezier(0.25, 0.1, 0.25, 1)","motion-ease-in":"cubic-bezier(0.42, 0, 1, 1)","motion-ease-out":"cubic-bezier(0.19, 0.91, 0.38, 1)","motion-ease-in-out":"cubic-bezier(0.42, 0, 0.58, 1)","motion-linear":"cubic-bezier(0, 0, 1, 1)","motion-keyframes-bounce":"{ from, 65%, 85% { transform: scale(1) } 75% { transform: scale(0.85) } 82.5% { transform: scale(1.05) } }","motion-keyframes-fade-in":"{ to { opacity: 1 } }","motion-keyframes-pulse":"{ from, 75% { transform: scale(0.85); opacity: 1; } to { transform: scale(2.5); opacity: 0; } }","motion-keyframes-spin":"{ to { transform: rotate(1turn) } }","motion-keyframes-appear-above":"{ from { transform: translateY(var(--p-space-100)); opacity: 0; } to { transform: none; opacity: 1; } }","motion-keyframes-appear-below":"{ from { transform: translateY(calc(var(--p-space-100) * -1)); opacity: 0; } to { transform: none; opacity: 1; } }"},shadow:{"shadow-0":"none","shadow-100":"none","shadow-200":"0rem 0.1875rem 0.0625rem -0.0625rem rgba(26, 26, 26, 0.07)","shadow-300":"0rem 0.25rem 0.375rem -0.125rem rgba(26, 26, 26, 0.20)","shadow-400":"0rem 0.5rem 1rem -0.25rem rgba(26, 26, 26, 0.22)","shadow-500":"0rem 0.75rem 1.25rem -0.5rem rgba(26, 26, 26, 0.24)","shadow-600":"0rem 1.25rem 1.25rem -0.5rem rgba(26, 26, 26, 0.28)","shadow-bevel-100":"none","shadow-inset-100":"0rem 0.0625rem 0.125rem 0rem rgba(26, 26, 26, 0.15) inset, 0rem 0.0625rem 0.0625rem 0rem rgba(26, 26, 26, 0.15) inset","shadow-inset-200":"0rem 0.125rem 0.0625rem 0rem rgba(26, 26, 26, 0.20) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.12) inset, -0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.12) inset","shadow-button":"0 0 0 var(--p-border-width-025) var(--p-color-border) inset","shadow-button-hover":"0 0 0 var(--p-border-width-025) var(--p-color-border) inset","shadow-button-inset":"0 0 0 var(--p-border-width-025) var(--p-color-border) inset","shadow-button-primary":"none","shadow-button-primary-hover":"none","shadow-button-primary-inset":"none","shadow-button-primary-critical":"none","shadow-button-primary-critical-hover":"none","shadow-button-primary-critical-inset":"none","shadow-button-primary-success":"none","shadow-button-primary-success-hover":"none","shadow-button-primary-success-inset":"none","shadow-border-inset":"0rem 0rem 0rem 0.0625rem rgba(0, 0, 0, 0.08) inset"},space:{"space-0":"0rem","space-025":"0.0625rem","space-050":"0.125rem","space-100":"0.25rem","space-150":"0.375rem","space-200":"0.5rem","space-300":"0.75rem","space-400":"1rem","space-500":"1.25rem","space-600":"1.5rem","space-800":"2rem","space-1000":"2.5rem","space-1200":"3rem","space-1600":"4rem","space-2000":"5rem","space-2400":"6rem","space-2800":"7rem","space-3200":"8rem","space-button-group-gap":"0.5rem","space-card-gap":"0.5rem","space-card-padding":"1rem","space-table-cell-padding":"0.375rem"},text:{"text-heading-3xl-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-3xl-font-size":"2.25rem","text-heading-3xl-font-weight":"700","text-heading-3xl-font-letter-spacing":"-0.03375rem","text-heading-3xl-font-line-height":"3rem","text-heading-2xl-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-2xl-font-size":"2rem","text-heading-2xl-font-weight":"700","text-heading-2xl-font-letter-spacing":"-0.01875rem","text-heading-2xl-font-line-height":"2.5rem","text-heading-xl-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-xl-font-size":"1.375rem","text-heading-xl-font-weight":"700","text-heading-xl-font-letter-spacing":"-0.0125rem","text-heading-xl-font-line-height":"1.75rem","text-heading-lg-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-lg-font-size":"1.125rem","text-heading-lg-font-weight":"650","text-heading-lg-font-letter-spacing":"-0.0125rem","text-heading-lg-font-line-height":"1.5rem","text-heading-md-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-md-font-size":"1rem","text-heading-md-font-weight":"650","text-heading-md-font-letter-spacing":"0rem","text-heading-md-font-line-height":"1.25rem","text-heading-sm-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-sm-font-size":"0.875rem","text-heading-sm-font-weight":"650","text-heading-sm-font-letter-spacing":"0rem","text-heading-sm-font-line-height":"1.25rem","text-heading-xs-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-xs-font-size":"0.75rem","text-heading-xs-font-weight":"650","text-heading-xs-font-letter-spacing":"0rem","text-heading-xs-font-line-height":"1rem","text-body-lg-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-body-lg-font-size":"1.125rem","text-body-lg-font-weight":"450","text-body-lg-font-letter-spacing":"0rem","text-body-lg-font-line-height":"1.75rem","text-body-md-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-body-md-font-size":"1rem","text-body-md-font-weight":"450","text-body-md-font-letter-spacing":"0rem","text-body-md-font-line-height":"1.5rem","text-body-sm-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-body-sm-font-size":"0.875rem","text-body-sm-font-weight":"450","text-body-sm-font-letter-spacing":"0rem","text-body-sm-font-line-height":"1.25rem","text-body-xs-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-body-xs-font-size":"0.75rem","text-body-xs-font-weight":"450","text-body-xs-font-letter-spacing":"0rem","text-body-xs-font-line-height":"1rem"},width:{"width-0":"0rem","width-025":"0.0625rem","width-050":"0.125rem","width-100":"0.25rem","width-150":"0.375rem","width-200":"0.5rem","width-300":"0.75rem","width-400":"1rem","width-500":"1.25rem","width-600":"1.5rem","width-700":"1.75rem","width-800":"2rem","width-900":"2.25rem","width-1000":"2.5rem","width-1200":"3rem","width-1600":"4rem","width-2000":"5rem","width-2400":"6rem","width-2800":"7rem","width-3200":"8rem"},zIndex:{"z-index-0":"auto","z-index-1":"100","z-index-2":"400","z-index-3":"510","z-index-4":"512","z-index-5":"513","z-index-6":"514","z-index-7":"515","z-index-8":"516","z-index-9":"517","z-index-10":"518","z-index-11":"519","z-index-12":"520"}},"light-high-contrast-experimental":{border:{"border-radius-0":"0rem","border-radius-050":"0.125rem","border-radius-100":"0.25rem","border-radius-150":"0.375rem","border-radius-200":"0.5rem","border-radius-300":"0.75rem","border-radius-400":"1rem","border-radius-500":"1.25rem","border-radius-750":"1.875rem","border-radius-full":"624.9375rem","border-width-0":"0rem","border-width-0165":"0.04125rem","border-width-025":"0.0625rem","border-width-050":"0.125rem","border-width-100":"0.25rem"},breakpoints:{"breakpoints-xs":"0rem","breakpoints-sm":"30.625rem","breakpoints-md":"48rem","breakpoints-lg":"65rem","breakpoints-xl":"90rem"},color:{"color-scheme":"light","color-bg":"rgba(241, 241, 241, 1)","color-bg-inverse":"rgba(26, 26, 26, 1)","color-bg-surface":"rgba(255, 255, 255, 1)","color-bg-surface-hover":"rgba(247, 247, 247, 1)","color-bg-surface-active":"rgba(243, 243, 243, 1)","color-bg-surface-selected":"rgba(241, 241, 241, 1)","color-bg-surface-disabled":"rgba(0, 0, 0, 0.05)","color-bg-surface-secondary":"rgba(241, 241, 241, 1)","color-bg-surface-secondary-hover":"rgba(241, 241, 241, 1)","color-bg-surface-secondary-active":"rgba(235, 235, 235, 1)","color-bg-surface-secondary-selected":"rgba(235, 235, 235, 1)","color-bg-surface-tertiary":"rgba(243, 243, 243, 1)","color-bg-surface-tertiary-hover":"rgba(235, 235, 235, 1)","color-bg-surface-tertiary-active":"rgba(227, 227, 227, 1)","color-bg-surface-brand":"rgba(227, 227, 227, 1)","color-bg-surface-brand-hover":"rgba(235, 235, 235, 1)","color-bg-surface-brand-active":"rgba(241, 241, 241, 1)","color-bg-surface-brand-selected":"rgba(241, 241, 241, 1)","color-bg-surface-info":"rgba(234, 244, 255, 1)","color-bg-surface-info-hover":"rgba(224, 240, 255, 1)","color-bg-surface-info-active":"rgba(202, 230, 255, 1)","color-bg-surface-success":"rgba(205, 254, 212, 1)","color-bg-surface-success-hover":"rgba(175, 254, 191, 1)","color-bg-surface-success-active":"rgba(146, 252, 172, 1)","color-bg-surface-caution":"rgba(255, 248, 219, 1)","color-bg-surface-caution-hover":"rgba(255, 244, 191, 1)","color-bg-surface-caution-active":"rgba(255, 239, 157, 1)","color-bg-surface-warning":"rgba(255, 241, 227, 1)","color-bg-surface-warning-hover":"rgba(255, 235, 213, 1)","color-bg-surface-warning-active":"rgba(255, 228, 198, 1)","color-bg-surface-critical":"rgba(254, 232, 235, 1)","color-bg-surface-critical-hover":"rgba(254, 225, 230, 1)","color-bg-surface-critical-active":"rgba(254, 217, 223, 1)","color-bg-surface-emphasis":"rgba(240, 242, 255, 1)","color-bg-surface-emphasis-hover":"rgba(234, 237, 255, 1)","color-bg-surface-emphasis-active":"rgba(226, 231, 255, 1)","color-bg-surface-magic":"rgba(248, 247, 255, 1)","color-bg-surface-magic-hover":"rgba(243, 241, 255, 1)","color-bg-surface-magic-active":"rgba(233, 229, 255, 1)","color-bg-surface-inverse":"rgba(48, 48, 48, 1)","color-bg-surface-transparent":"rgba(0, 0, 0, 0)","color-bg-fill":"rgba(255, 255, 255, 1)","color-bg-fill-hover":"rgba(250, 250, 250, 1)","color-bg-fill-active":"rgba(247, 247, 247, 1)","color-bg-fill-selected":"rgba(204, 204, 204, 1)","color-bg-fill-disabled":"rgba(0, 0, 0, 0.05)","color-bg-fill-secondary":"rgba(241, 241, 241, 1)","color-bg-fill-secondary-hover":"rgba(235, 235, 235, 1)","color-bg-fill-secondary-active":"rgba(227, 227, 227, 1)","color-bg-fill-secondary-selected":"rgba(227, 227, 227, 1)","color-bg-fill-tertiary":"rgba(227, 227, 227, 1)","color-bg-fill-tertiary-hover":"rgba(212, 212, 212, 1)","color-bg-fill-tertiary-active":"rgba(204, 204, 204, 1)","color-bg-fill-brand":"rgba(48, 48, 48, 1)","color-bg-fill-brand-hover":"rgba(26, 26, 26, 1)","color-bg-fill-brand-active":"rgba(26, 26, 26, 1)","color-bg-fill-brand-selected":"rgba(48, 48, 48, 1)","color-bg-fill-brand-disabled":"rgba(0, 0, 0, 0.17)","color-bg-fill-info":"rgba(145, 208, 255, 1)","color-bg-fill-info-hover":"rgba(81, 192, 255, 1)","color-bg-fill-info-active":"rgba(0, 148, 213, 1)","color-bg-fill-info-secondary":"rgba(213, 235, 255, 1)","color-bg-fill-success":"rgba(4, 123, 93, 1)","color-bg-fill-success-hover":"rgba(3, 94, 76, 1)","color-bg-fill-success-active":"rgba(1, 75, 64, 1)","color-bg-fill-success-secondary":"rgba(175, 254, 191, 1)","color-bg-fill-warning":"rgba(255, 184, 0, 1)","color-bg-fill-warning-hover":"rgba(229, 165, 0, 1)","color-bg-fill-warning-active":"rgba(178, 132, 0, 1)","color-bg-fill-warning-secondary":"rgba(255, 214, 164, 1)","color-bg-fill-caution":"rgba(255, 230, 0, 1)","color-bg-fill-caution-hover":"rgba(234, 211, 0, 1)","color-bg-fill-caution-active":"rgba(225, 203, 0, 1)","color-bg-fill-caution-secondary":"rgba(255, 235, 120, 1)","color-bg-fill-critical":"rgba(199, 10, 36, 1)","color-bg-fill-critical-hover":"rgba(163, 10, 36, 1)","color-bg-fill-critical-active":"rgba(142, 11, 33, 1)","color-bg-fill-critical-selected":"rgba(142, 11, 33, 1)","color-bg-fill-critical-secondary":"rgba(254, 209, 215, 1)","color-bg-fill-emphasis":"rgba(0, 91, 211, 1)","color-bg-fill-emphasis-hover":"rgba(0, 66, 153, 1)","color-bg-fill-emphasis-active":"rgba(0, 46, 106, 1)","color-bg-fill-magic":"rgba(128, 81, 255, 1)","color-bg-fill-magic-secondary":"rgba(233, 229, 255, 1)","color-bg-fill-magic-secondary-hover":"rgba(228, 222, 255, 1)","color-bg-fill-magic-secondary-active":"rgba(223, 217, 255, 1)","color-bg-fill-inverse":"rgba(48, 48, 48, 1)","color-bg-fill-inverse-hover":"rgba(74, 74, 74, 1)","color-bg-fill-inverse-active":"rgba(97, 97, 97, 1)","color-bg-fill-transparent":"rgba(0, 0, 0, 0.02)","color-bg-fill-transparent-hover":"rgba(0, 0, 0, 0.05)","color-bg-fill-transparent-active":"rgba(0, 0, 0, 0.08)","color-bg-fill-transparent-selected":"rgba(0, 0, 0, 0.08)","color-bg-fill-transparent-secondary":"rgba(0, 0, 0, 0.06)","color-bg-fill-transparent-secondary-hover":"rgba(0, 0, 0, 0.08)","color-bg-fill-transparent-secondary-active":"rgba(0, 0, 0, 0.11)","color-text":"rgba(26, 26, 26, 1)","color-text-secondary":"rgba(26, 26, 26, 1)","color-text-disabled":"rgba(181, 181, 181, 1)","color-text-link":"rgba(0, 91, 211, 1)","color-text-link-hover":"rgba(0, 66, 153, 1)","color-text-link-active":"rgba(0, 46, 106, 1)","color-text-brand":"rgba(26, 26, 26, 1)","color-text-brand-hover":"rgba(48, 48, 48, 1)","color-text-brand-on-bg-fill":"rgba(255, 255, 255, 1)","color-text-brand-on-bg-fill-hover":"rgba(227, 227, 227, 1)","color-text-brand-on-bg-fill-active":"rgba(204, 204, 204, 1)","color-text-brand-on-bg-fill-disabled":"rgba(255, 255, 255, 1)","color-text-info":"rgba(0, 58, 90, 1)","color-text-info-hover":"rgba(0, 58, 90, 1)","color-text-info-active":"rgba(0, 33, 51, 1)","color-text-info-secondary":"rgba(0, 124, 180, 1)","color-text-info-on-bg-fill":"rgba(0, 33, 51, 1)","color-text-success":"rgba(1, 75, 64, 1)","color-text-success-hover":"rgba(7, 54, 48, 1)","color-text-success-active":"rgba(2, 38, 34, 1)","color-text-success-secondary":"rgba(4, 123, 93, 1)","color-text-success-on-bg-fill":"rgba(250, 255, 251, 1)","color-text-caution":"rgba(79, 71, 0, 1)","color-text-caution-hover":"rgba(51, 46, 0, 1)","color-text-caution-active":"rgba(31, 28, 0, 1)","color-text-caution-secondary":"rgba(130, 117, 0, 1)","color-text-caution-on-bg-fill":"rgba(51, 46, 0, 1)","color-text-warning":"rgba(94, 66, 0, 1)","color-text-warning-hover":"rgba(65, 45, 0, 1)","color-text-warning-active":"rgba(37, 26, 0, 1)","color-text-warning-secondary":"rgba(149, 111, 0, 1)","color-text-warning-on-bg-fill":"rgba(37, 26, 0, 1)","color-text-critical":"rgba(142, 11, 33, 1)","color-text-critical-hover":"rgba(95, 7, 22, 1)","color-text-critical-active":"rgba(47, 4, 11, 1)","color-text-critical-secondary":"rgba(199, 10, 36, 1)","color-text-critical-on-bg-fill":"rgba(255, 250, 251, 1)","color-text-emphasis":"rgba(0, 91, 211, 1)","color-text-emphasis-hover":"rgba(0, 66, 153, 1)","color-text-emphasis-active":"rgba(0, 46, 106, 1)","color-text-emphasis-on-bg-fill":"rgba(252, 253, 255, 1)","color-text-emphasis-on-bg-fill-hover":"rgba(226, 231, 255, 1)","color-text-emphasis-on-bg-fill-active":"rgba(213, 220, 255, 1)","color-text-magic":"rgba(87, 0, 209, 1)","color-text-magic-secondary":"rgba(113, 38, 255, 1)","color-text-magic-on-bg-fill":"rgba(253, 253, 255, 1)","color-text-inverse":"rgba(227, 227, 227, 1)","color-text-inverse-secondary":"rgba(181, 181, 181, 1)","color-text-link-inverse":"rgba(197, 208, 255, 1)","color-border":"rgba(138, 138, 138, 1)","color-border-hover":"rgba(204, 204, 204, 1)","color-border-disabled":"rgba(235, 235, 235, 1)","color-border-secondary":"rgba(138, 138, 138, 1)","color-border-tertiary":"rgba(204, 204, 204, 1)","color-border-focus":"rgba(0, 91, 211, 1)","color-border-brand":"rgba(227, 227, 227, 1)","color-border-info":"rgba(168, 216, 255, 1)","color-border-success":"rgba(146, 252, 172, 1)","color-border-caution":"rgba(255, 235, 120, 1)","color-border-warning":"rgba(255, 200, 121, 1)","color-border-critical":"rgba(254, 193, 199, 1)","color-border-critical-secondary":"rgba(142, 11, 33, 1)","color-border-emphasis":"rgba(0, 91, 211, 1)","color-border-emphasis-hover":"rgba(0, 66, 153, 1)","color-border-emphasis-active":"rgba(0, 46, 106, 1)","color-border-magic":"rgba(228, 222, 255, 1)","color-border-magic-secondary":"rgba(148, 116, 255, 1)","color-border-magic-secondary-hover":"rgba(128, 81, 255, 1)","color-border-inverse":"rgba(97, 97, 97, 1)","color-border-inverse-hover":"rgba(204, 204, 204, 1)","color-border-inverse-active":"rgba(227, 227, 227, 1)","color-tooltip-tail-down-border":"rgba(212, 212, 212, 1)","color-tooltip-tail-up-border":"rgba(227, 227, 227, 1)","color-icon":"rgba(74, 74, 74, 1)","color-icon-hover":"rgba(48, 48, 48, 1)","color-icon-active":"rgba(26, 26, 26, 1)","color-icon-disabled":"rgba(204, 204, 204, 1)","color-icon-secondary":"rgba(74, 74, 74, 1)","color-icon-secondary-hover":"rgba(97, 97, 97, 1)","color-icon-secondary-active":"rgba(74, 74, 74, 1)","color-icon-brand":"rgba(26, 26, 26, 1)","color-icon-info":"rgba(0, 148, 213, 1)","color-icon-success":"rgba(4, 123, 93, 1)","color-icon-caution":"rgba(153, 138, 0, 1)","color-icon-warning":"rgba(178, 132, 0, 1)","color-icon-critical":"rgba(226, 44, 56, 1)","color-icon-emphasis":"rgba(0, 91, 211, 1)","color-icon-emphasis-hover":"rgba(0, 66, 153, 1)","color-icon-emphasis-active":"rgba(0, 46, 106, 1)","color-icon-magic":"rgba(128, 81, 255, 1)","color-icon-inverse":"rgba(227, 227, 227, 1)","color-avatar-bg-fill":"rgba(181, 181, 181, 1)","color-avatar-five-bg-fill":"rgba(253, 75, 146, 1)","color-avatar-five-text-on-bg-fill":"rgba(255, 246, 248, 1)","color-avatar-four-bg-fill":"rgba(81, 192, 255, 1)","color-avatar-four-text-on-bg-fill":"rgba(0, 33, 51, 1)","color-avatar-one-bg-fill":"rgba(197, 48, 197, 1)","color-avatar-one-text-on-bg-fill":"rgba(253, 239, 253, 1)","color-avatar-seven-bg-fill":"rgba(148, 116, 255, 1)","color-avatar-seven-text-on-bg-fill":"rgba(248, 247, 255, 1)","color-avatar-six-bg-fill":"rgba(37, 232, 43, 1)","color-avatar-six-text-on-bg-fill":"rgba(3, 61, 5, 1)","color-avatar-text-on-bg-fill":"rgba(255, 255, 255, 1)","color-avatar-three-bg-fill":"rgba(44, 224, 212, 1)","color-avatar-three-text-on-bg-fill":"rgba(3, 60, 57, 1)","color-avatar-two-bg-fill":"rgba(82, 244, 144, 1)","color-avatar-two-text-on-bg-fill":"rgba(1, 75, 64, 1)","color-backdrop-bg":"rgba(0, 0, 0, 0.71)","color-button-gradient-bg-fill":"linear-gradient(180deg, rgba(48, 48, 48, 0) 63.53%, rgba(255, 255, 255, 0.15) 100%)","color-checkbox-bg-surface-disabled":"rgba(0, 0, 0, 0.08)","color-checkbox-icon-disabled":"rgba(255, 255, 255, 1)","color-input-bg-surface":"rgba(253, 253, 253, 1)","color-input-bg-surface-hover":"rgba(250, 250, 250, 1)","color-input-bg-surface-active":"rgba(247, 247, 247, 1)","color-input-border":"rgba(74, 74, 74, 1)","color-input-border-hover":"rgba(97, 97, 97, 1)","color-input-border-active":"rgba(26, 26, 26, 1)","color-nav-bg":"rgba(235, 235, 235, 1)","color-nav-bg-surface":"rgba(0, 0, 0, 0.02)","color-nav-bg-surface-hover":"rgba(241, 241, 241, 1)","color-nav-bg-surface-active":"rgba(250, 250, 250, 1)","color-nav-bg-surface-selected":"rgba(250, 250, 250, 1)","color-radio-button-bg-surface-disabled":"rgba(0, 0, 0, 0.08)","color-radio-button-icon-disabled":"rgba(255, 255, 255, 1)","color-video-thumbnail-play-button-bg-fill-hover":"rgba(0, 0, 0, 0.81)","color-video-thumbnail-play-button-bg-fill":"rgba(0, 0, 0, 0.71)","color-video-thumbnail-play-button-text-on-bg-fill":"rgba(255, 255, 255, 1)","color-scrollbar-thumb-bg-hover":"rgba(138, 138, 138, 1)","color-scrollbar-thumb-bg":"rgba(181, 181, 181, 1)"},font:{"font-family-sans":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","font-family-mono":"ui-monospace, SFMono-Regular, 'SF Mono', Consolas, 'Liberation Mono', Menlo, monospace","font-size-275":"0.6875rem","font-size-300":"0.75rem","font-size-325":"0.8125rem","font-size-350":"0.875rem","font-size-400":"1rem","font-size-450":"1.125rem","font-size-500":"1.25rem","font-size-550":"1.375rem","font-size-600":"1.5rem","font-size-750":"1.875rem","font-size-800":"2rem","font-size-900":"2.25rem","font-size-1000":"2.5rem","font-weight-regular":"450","font-weight-medium":"550","font-weight-semibold":"650","font-weight-bold":"700","font-letter-spacing-densest":"-0.03375rem","font-letter-spacing-denser":"-0.01875rem","font-letter-spacing-dense":"-0.0125rem","font-letter-spacing-normal":"0rem","font-line-height-300":"0.75rem","font-line-height-400":"1rem","font-line-height-500":"1.25rem","font-line-height-600":"1.5rem","font-line-height-700":"1.75rem","font-line-height-800":"2rem","font-line-height-1000":"2.5rem","font-line-height-1200":"3rem"},height:{"height-0":"0rem","height-025":"0.0625rem","height-050":"0.125rem","height-100":"0.25rem","height-150":"0.375rem","height-200":"0.5rem","height-300":"0.75rem","height-400":"1rem","height-500":"1.25rem","height-600":"1.5rem","height-700":"1.75rem","height-800":"2rem","height-900":"2.25rem","height-1000":"2.5rem","height-1200":"3rem","height-1600":"4rem","height-2000":"5rem","height-2400":"6rem","height-2800":"7rem","height-3200":"8rem"},motion:{"motion-duration-0":"0ms","motion-duration-50":"50ms","motion-duration-100":"100ms","motion-duration-150":"150ms","motion-duration-200":"200ms","motion-duration-250":"250ms","motion-duration-300":"300ms","motion-duration-350":"350ms","motion-duration-400":"400ms","motion-duration-450":"450ms","motion-duration-500":"500ms","motion-duration-5000":"5000ms","motion-ease":"cubic-bezier(0.25, 0.1, 0.25, 1)","motion-ease-in":"cubic-bezier(0.42, 0, 1, 1)","motion-ease-out":"cubic-bezier(0.19, 0.91, 0.38, 1)","motion-ease-in-out":"cubic-bezier(0.42, 0, 0.58, 1)","motion-linear":"cubic-bezier(0, 0, 1, 1)","motion-keyframes-bounce":"{ from, 65%, 85% { transform: scale(1) } 75% { transform: scale(0.85) } 82.5% { transform: scale(1.05) } }","motion-keyframes-fade-in":"{ to { opacity: 1 } }","motion-keyframes-pulse":"{ from, 75% { transform: scale(0.85); opacity: 1; } to { transform: scale(2.5); opacity: 0; } }","motion-keyframes-spin":"{ to { transform: rotate(1turn) } }","motion-keyframes-appear-above":"{ from { transform: translateY(var(--p-space-100)); opacity: 0; } to { transform: none; opacity: 1; } }","motion-keyframes-appear-below":"{ from { transform: translateY(calc(var(--p-space-100) * -1)); opacity: 0; } to { transform: none; opacity: 1; } }"},shadow:{"shadow-0":"none","shadow-100":"0rem 0.0625rem 0rem 0rem rgba(26, 26, 26, 0.07)","shadow-200":"0rem 0.1875rem 0.0625rem -0.0625rem rgba(26, 26, 26, 0.07)","shadow-300":"0rem 0.25rem 0.375rem -0.125rem rgba(26, 26, 26, 0.20)","shadow-400":"0rem 0.5rem 1rem -0.25rem rgba(26, 26, 26, 0.22)","shadow-500":"0rem 0.75rem 1.25rem -0.5rem rgba(26, 26, 26, 0.24)","shadow-600":"0rem 1.25rem 1.25rem -0.5rem rgba(26, 26, 26, 0.28)","shadow-bevel-100":"0rem 0.0625rem 0rem 0rem rgba(26, 26, 26, 0.07), 0rem 0.0625rem 0rem 0rem rgba(208, 208, 208, 0.40) inset, 0.0625rem 0rem 0rem 0rem #CCC inset, -0.0625rem 0rem 0rem 0rem #CCC inset, 0rem -0.0625rem 0rem 0rem #999 inset","shadow-inset-100":"0rem 0.0625rem 0.125rem 0rem rgba(26, 26, 26, 0.15) inset, 0rem 0.0625rem 0.0625rem 0rem rgba(26, 26, 26, 0.15) inset","shadow-inset-200":"0rem 0.125rem 0.0625rem 0rem rgba(26, 26, 26, 0.20) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.12) inset, -0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.12) inset","shadow-button":"0rem -0.0625rem 0rem 0rem #b5b5b5 inset, 0rem 0rem 0rem 0.0625rem rgba(0, 0, 0, 0.1) inset, 0rem 0.03125rem 0rem 0.09375rem #FFF inset","shadow-button-hover":"0rem 0.0625rem 0rem 0rem #EBEBEB inset, -0.0625rem 0rem 0rem 0rem #EBEBEB inset, 0.0625rem 0rem 0rem 0rem #EBEBEB inset, 0rem -0.0625rem 0rem 0rem #CCC inset","shadow-button-inset":"-0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.122) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.122) inset, 0rem 0.125rem 0.0625rem 0rem rgba(26, 26, 26, 0.2) inset","shadow-button-primary":"0rem -0.0625rem 0rem 0.0625rem rgba(0, 0, 0, 0.8) inset, 0rem 0rem 0rem 0.0625rem rgba(48, 48, 48, 1) inset, 0rem 0.03125rem 0rem 0.09375rem rgba(255, 255, 255, 0.25) inset","shadow-button-primary-hover":"0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.24) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem -0.0625rem 0rem 0rem #000 inset, 0rem -0.0625rem 0rem 0.0625rem #1A1A1A","shadow-button-primary-inset":"0rem 0.1875rem 0rem 0rem rgb(0, 0, 0) inset","shadow-button-primary-critical":"0rem -0.0625rem 0rem 0.0625rem rgba(142, 31, 11, 0.8) inset, 0rem 0rem 0rem 0.0625rem rgba(181, 38, 11, 0.8) inset, 0rem 0.03125rem 0rem 0.09375rem rgba(255, 255, 255, 0.349) inset","shadow-button-primary-critical-hover":"0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.48) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem -0.09375rem 0rem 0rem rgba(0, 0, 0, 0.25) inset","shadow-button-primary-critical-inset":"-0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.2) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.2) inset, 0rem 0.125rem 0rem 0rem rgba(0, 0, 0, 0.6) inset","shadow-button-primary-success":"0rem -0.0625rem 0rem 0.0625rem rgba(12, 81, 50, 0.8) inset, 0rem 0rem 0rem 0.0625rem rgba(19, 111, 69, 0.8) inset, 0rem 0.03125rem 0rem 0.09375rem rgba(255, 255, 255, 0.251) inset","shadow-button-primary-success-hover":"0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.48) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem -0.09375rem 0rem 0rem rgba(0, 0, 0, 0.25) inset","shadow-button-primary-success-inset":"-0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.2) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.2) inset, 0rem 0.125rem 0rem 0rem rgba(0, 0, 0, 0.6) inset","shadow-border-inset":"0rem 0rem 0rem 0.0625rem rgba(0, 0, 0, 0.08) inset"},space:{"space-0":"0rem","space-025":"0.0625rem","space-050":"0.125rem","space-100":"0.25rem","space-150":"0.375rem","space-200":"0.5rem","space-300":"0.75rem","space-400":"1rem","space-500":"1.25rem","space-600":"1.5rem","space-800":"2rem","space-1000":"2.5rem","space-1200":"3rem","space-1600":"4rem","space-2000":"5rem","space-2400":"6rem","space-2800":"7rem","space-3200":"8rem","space-button-group-gap":"0.5rem","space-card-gap":"1rem","space-card-padding":"1rem","space-table-cell-padding":"0.375rem"},text:{"text-heading-3xl-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-3xl-font-size":"2.25rem","text-heading-3xl-font-weight":"700","text-heading-3xl-font-letter-spacing":"-0.03375rem","text-heading-3xl-font-line-height":"3rem","text-heading-2xl-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-2xl-font-size":"1.875rem","text-heading-2xl-font-weight":"700","text-heading-2xl-font-letter-spacing":"-0.01875rem","text-heading-2xl-font-line-height":"2.5rem","text-heading-xl-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-xl-font-size":"1.5rem","text-heading-xl-font-weight":"700","text-heading-xl-font-letter-spacing":"-0.0125rem","text-heading-xl-font-line-height":"2rem","text-heading-lg-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-lg-font-size":"1.25rem","text-heading-lg-font-weight":"650","text-heading-lg-font-letter-spacing":"-0.0125rem","text-heading-lg-font-line-height":"1.5rem","text-heading-md-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-md-font-size":"0.875rem","text-heading-md-font-weight":"650","text-heading-md-font-letter-spacing":"0rem","text-heading-md-font-line-height":"1.25rem","text-heading-sm-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-sm-font-size":"0.8125rem","text-heading-sm-font-weight":"650","text-heading-sm-font-letter-spacing":"0rem","text-heading-sm-font-line-height":"1.25rem","text-heading-xs-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-xs-font-size":"0.75rem","text-heading-xs-font-weight":"650","text-heading-xs-font-letter-spacing":"0rem","text-heading-xs-font-line-height":"1rem","text-body-lg-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-body-lg-font-size":"0.875rem","text-body-lg-font-weight":"450","text-body-lg-font-letter-spacing":"0rem","text-body-lg-font-line-height":"1.25rem","text-body-md-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-body-md-font-size":"0.8125rem","text-body-md-font-weight":"450","text-body-md-font-letter-spacing":"0rem","text-body-md-font-line-height":"1.25rem","text-body-sm-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-body-sm-font-size":"0.75rem","text-body-sm-font-weight":"450","text-body-sm-font-letter-spacing":"0rem","text-body-sm-font-line-height":"1rem","text-body-xs-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-body-xs-font-size":"0.6875rem","text-body-xs-font-weight":"450","text-body-xs-font-letter-spacing":"0rem","text-body-xs-font-line-height":"0.75rem"},width:{"width-0":"0rem","width-025":"0.0625rem","width-050":"0.125rem","width-100":"0.25rem","width-150":"0.375rem","width-200":"0.5rem","width-300":"0.75rem","width-400":"1rem","width-500":"1.25rem","width-600":"1.5rem","width-700":"1.75rem","width-800":"2rem","width-900":"2.25rem","width-1000":"2.5rem","width-1200":"3rem","width-1600":"4rem","width-2000":"5rem","width-2400":"6rem","width-2800":"7rem","width-3200":"8rem"},zIndex:{"z-index-0":"auto","z-index-1":"100","z-index-2":"400","z-index-3":"510","z-index-4":"512","z-index-5":"513","z-index-6":"514","z-index-7":"515","z-index-8":"516","z-index-9":"517","z-index-10":"518","z-index-11":"519","z-index-12":"520"}},"dark-experimental":{border:{"border-radius-0":"0rem","border-radius-050":"0.125rem","border-radius-100":"0.25rem","border-radius-150":"0.375rem","border-radius-200":"0.5rem","border-radius-300":"0.75rem","border-radius-400":"1rem","border-radius-500":"1.25rem","border-radius-750":"1.875rem","border-radius-full":"624.9375rem","border-width-0":"0rem","border-width-0165":"0.04125rem","border-width-025":"0.0625rem","border-width-050":"0.125rem","border-width-100":"0.25rem"},breakpoints:{"breakpoints-xs":"0rem","breakpoints-sm":"30.625rem","breakpoints-md":"48rem","breakpoints-lg":"65rem","breakpoints-xl":"90rem"},color:{"color-scheme":"dark","color-bg":"rgba(26, 26, 26, 1)","color-bg-inverse":"rgba(26, 26, 26, 1)","color-bg-surface":"rgba(48, 48, 48, 1)","color-bg-surface-hover":"rgba(74, 74, 74, 1)","color-bg-surface-active":"rgba(97, 97, 97, 1)","color-bg-surface-selected":"rgba(97, 97, 97, 1)","color-bg-surface-disabled":"rgba(0, 0, 0, 0.05)","color-bg-surface-secondary":"rgba(247, 247, 247, 1)","color-bg-surface-secondary-hover":"rgba(255, 255, 255, 0.06)","color-bg-surface-secondary-active":"rgba(255, 255, 255, 0.14)","color-bg-surface-secondary-selected":"rgba(235, 235, 235, 1)","color-bg-surface-tertiary":"rgba(255, 255, 255, 0.08)","color-bg-surface-tertiary-hover":"rgba(235, 235, 235, 1)","color-bg-surface-tertiary-active":"rgba(227, 227, 227, 1)","color-bg-surface-brand":"rgba(227, 227, 227, 1)","color-bg-surface-brand-hover":"rgba(235, 235, 235, 1)","color-bg-surface-brand-active":"rgba(241, 241, 241, 1)","color-bg-surface-brand-selected":"rgba(74, 74, 74, 1)","color-bg-surface-info":"rgba(234, 244, 255, 1)","color-bg-surface-info-hover":"rgba(224, 240, 255, 1)","color-bg-surface-info-active":"rgba(202, 230, 255, 1)","color-bg-surface-success":"rgba(205, 254, 212, 1)","color-bg-surface-success-hover":"rgba(175, 254, 191, 1)","color-bg-surface-success-active":"rgba(146, 252, 172, 1)","color-bg-surface-caution":"rgba(255, 248, 219, 1)","color-bg-surface-caution-hover":"rgba(255, 244, 191, 1)","color-bg-surface-caution-active":"rgba(255, 239, 157, 1)","color-bg-surface-warning":"rgba(255, 241, 227, 1)","color-bg-surface-warning-hover":"rgba(255, 235, 213, 1)","color-bg-surface-warning-active":"rgba(255, 228, 198, 1)","color-bg-surface-critical":"rgba(254, 232, 235, 1)","color-bg-surface-critical-hover":"rgba(254, 225, 230, 1)","color-bg-surface-critical-active":"rgba(254, 217, 223, 1)","color-bg-surface-emphasis":"rgba(240, 242, 255, 1)","color-bg-surface-emphasis-hover":"rgba(234, 237, 255, 1)","color-bg-surface-emphasis-active":"rgba(226, 231, 255, 1)","color-bg-surface-magic":"rgba(248, 247, 255, 1)","color-bg-surface-magic-hover":"rgba(243, 241, 255, 1)","color-bg-surface-magic-active":"rgba(233, 229, 255, 1)","color-bg-surface-inverse":"rgba(48, 48, 48, 1)","color-bg-surface-transparent":"rgba(0, 0, 0, 0)","color-bg-fill":"rgba(48, 48, 48, 1)","color-bg-fill-hover":"rgba(255, 255, 255, 0.05)","color-bg-fill-active":"rgba(97, 97, 97, 1)","color-bg-fill-selected":"rgba(97, 97, 97, 1)","color-bg-fill-disabled":"rgba(255, 255, 255, 0.05)","color-bg-fill-secondary":"rgba(255, 255, 255, 0.08)","color-bg-fill-secondary-hover":"rgba(255, 255, 255, 0.11)","color-bg-fill-secondary-active":"rgba(227, 227, 227, 1)","color-bg-fill-secondary-selected":"rgba(255, 255, 255, 0.17)","color-bg-fill-tertiary":"rgba(48, 48, 48, 1)","color-bg-fill-tertiary-hover":"rgba(212, 212, 212, 1)","color-bg-fill-tertiary-active":"rgba(204, 204, 204, 1)","color-bg-fill-brand":"rgba(255, 255, 255, 1)","color-bg-fill-brand-hover":"rgba(243, 243, 243, 1)","color-bg-fill-brand-active":"rgba(247, 247, 247, 1)","color-bg-fill-brand-selected":"rgba(212, 212, 212, 1)","color-bg-fill-brand-disabled":"rgba(255, 255, 255, 0.22)","color-bg-fill-info":"rgba(145, 208, 255, 1)","color-bg-fill-info-hover":"rgba(81, 192, 255, 1)","color-bg-fill-info-active":"rgba(0, 148, 213, 1)","color-bg-fill-info-secondary":"rgba(213, 235, 255, 1)","color-bg-fill-success":"rgba(4, 123, 93, 1)","color-bg-fill-success-hover":"rgba(3, 94, 76, 1)","color-bg-fill-success-active":"rgba(1, 75, 64, 1)","color-bg-fill-success-secondary":"rgba(175, 254, 191, 1)","color-bg-fill-warning":"rgba(255, 184, 0, 1)","color-bg-fill-warning-hover":"rgba(229, 165, 0, 1)","color-bg-fill-warning-active":"rgba(178, 132, 0, 1)","color-bg-fill-warning-secondary":"rgba(255, 214, 164, 1)","color-bg-fill-caution":"rgba(255, 230, 0, 1)","color-bg-fill-caution-hover":"rgba(234, 211, 0, 1)","color-bg-fill-caution-active":"rgba(225, 203, 0, 1)","color-bg-fill-caution-secondary":"rgba(255, 235, 120, 1)","color-bg-fill-critical":"rgba(199, 10, 36, 1)","color-bg-fill-critical-hover":"rgba(163, 10, 36, 1)","color-bg-fill-critical-active":"rgba(142, 11, 33, 1)","color-bg-fill-critical-selected":"rgba(142, 11, 33, 1)","color-bg-fill-critical-secondary":"rgba(254, 209, 215, 1)","color-bg-fill-emphasis":"rgba(0, 91, 211, 1)","color-bg-fill-emphasis-hover":"rgba(0, 66, 153, 1)","color-bg-fill-emphasis-active":"rgba(0, 46, 106, 1)","color-bg-fill-magic":"rgba(128, 81, 255, 1)","color-bg-fill-magic-secondary":"rgba(233, 229, 255, 1)","color-bg-fill-magic-secondary-hover":"rgba(228, 222, 255, 1)","color-bg-fill-magic-secondary-active":"rgba(223, 217, 255, 1)","color-bg-fill-inverse":"rgba(48, 48, 48, 1)","color-bg-fill-inverse-hover":"rgba(74, 74, 74, 1)","color-bg-fill-inverse-active":"rgba(97, 97, 97, 1)","color-bg-fill-transparent":"rgba(255, 255, 255, 0.11)","color-bg-fill-transparent-hover":"rgba(255, 255, 255, 0.14)","color-bg-fill-transparent-active":"rgba(255, 255, 255, 0.17)","color-bg-fill-transparent-selected":"rgba(255, 255, 255, 0.22)","color-bg-fill-transparent-secondary":"rgba(0, 0, 0, 0.06)","color-bg-fill-transparent-secondary-hover":"rgba(0, 0, 0, 0.08)","color-bg-fill-transparent-secondary-active":"rgba(0, 0, 0, 0.11)","color-text":"rgba(227, 227, 227, 1)","color-text-secondary":"rgba(181, 181, 181, 1)","color-text-disabled":"rgba(74, 74, 74, 1)","color-text-link":"rgba(0, 91, 211, 1)","color-text-link-hover":"rgba(0, 66, 153, 1)","color-text-link-active":"rgba(0, 46, 106, 1)","color-text-brand":"rgba(74, 74, 74, 1)","color-text-brand-hover":"rgba(48, 48, 48, 1)","color-text-brand-on-bg-fill":"rgba(48, 48, 48, 1)","color-text-brand-on-bg-fill-hover":"rgba(227, 227, 227, 1)","color-text-brand-on-bg-fill-active":"rgba(204, 204, 204, 1)","color-text-brand-on-bg-fill-disabled":"rgba(138, 138, 138, 1)","color-text-info":"rgba(0, 58, 90, 1)","color-text-info-hover":"rgba(0, 58, 90, 1)","color-text-info-active":"rgba(0, 33, 51, 1)","color-text-info-secondary":"rgba(0, 124, 180, 1)","color-text-info-on-bg-fill":"rgba(0, 33, 51, 1)","color-text-success":"rgba(1, 75, 64, 1)","color-text-success-hover":"rgba(7, 54, 48, 1)","color-text-success-active":"rgba(2, 38, 34, 1)","color-text-success-secondary":"rgba(4, 123, 93, 1)","color-text-success-on-bg-fill":"rgba(250, 255, 251, 1)","color-text-caution":"rgba(79, 71, 0, 1)","color-text-caution-hover":"rgba(51, 46, 0, 1)","color-text-caution-active":"rgba(31, 28, 0, 1)","color-text-caution-secondary":"rgba(130, 117, 0, 1)","color-text-caution-on-bg-fill":"rgba(51, 46, 0, 1)","color-text-warning":"rgba(94, 66, 0, 1)","color-text-warning-hover":"rgba(65, 45, 0, 1)","color-text-warning-active":"rgba(37, 26, 0, 1)","color-text-warning-secondary":"rgba(149, 111, 0, 1)","color-text-warning-on-bg-fill":"rgba(37, 26, 0, 1)","color-text-critical":"rgba(142, 11, 33, 1)","color-text-critical-hover":"rgba(95, 7, 22, 1)","color-text-critical-active":"rgba(47, 4, 11, 1)","color-text-critical-secondary":"rgba(199, 10, 36, 1)","color-text-critical-on-bg-fill":"rgba(255, 250, 251, 1)","color-text-emphasis":"rgba(0, 91, 211, 1)","color-text-emphasis-hover":"rgba(0, 66, 153, 1)","color-text-emphasis-active":"rgba(0, 46, 106, 1)","color-text-emphasis-on-bg-fill":"rgba(252, 253, 255, 1)","color-text-emphasis-on-bg-fill-hover":"rgba(226, 231, 255, 1)","color-text-emphasis-on-bg-fill-active":"rgba(213, 220, 255, 1)","color-text-magic":"rgba(87, 0, 209, 1)","color-text-magic-secondary":"rgba(113, 38, 255, 1)","color-text-magic-on-bg-fill":"rgba(253, 253, 255, 1)","color-text-inverse":"rgba(227, 227, 227, 1)","color-text-inverse-secondary":"rgba(181, 181, 181, 1)","color-text-link-inverse":"rgba(197, 208, 255, 1)","color-border":"rgba(227, 227, 227, 1)","color-border-hover":"rgba(204, 204, 204, 1)","color-border-disabled":"rgba(235, 235, 235, 1)","color-border-secondary":"rgba(74, 74, 74, 1)","color-border-tertiary":"rgba(204, 204, 204, 1)","color-border-focus":"rgba(0, 91, 211, 1)","color-border-brand":"rgba(227, 227, 227, 1)","color-border-info":"rgba(168, 216, 255, 1)","color-border-success":"rgba(146, 252, 172, 1)","color-border-caution":"rgba(255, 235, 120, 1)","color-border-warning":"rgba(255, 200, 121, 1)","color-border-critical":"rgba(254, 193, 199, 1)","color-border-critical-secondary":"rgba(142, 11, 33, 1)","color-border-emphasis":"rgba(0, 91, 211, 1)","color-border-emphasis-hover":"rgba(0, 66, 153, 1)","color-border-emphasis-active":"rgba(0, 46, 106, 1)","color-border-magic":"rgba(228, 222, 255, 1)","color-border-magic-secondary":"rgba(148, 116, 255, 1)","color-border-magic-secondary-hover":"rgba(128, 81, 255, 1)","color-border-inverse":"rgba(97, 97, 97, 1)","color-border-inverse-hover":"rgba(204, 204, 204, 1)","color-border-inverse-active":"rgba(227, 227, 227, 1)","color-tooltip-tail-down-border":"rgba(60, 60, 60, 1)","color-tooltip-tail-up-border":"rgba(71, 71, 71, 1)","color-icon":"rgba(227, 227, 227, 1)","color-icon-hover":"rgba(48, 48, 48, 1)","color-icon-active":"rgba(26, 26, 26, 1)","color-icon-disabled":"rgba(74, 74, 74, 1)","color-icon-secondary":"rgba(181, 181, 181, 1)","color-icon-secondary-hover":"rgba(97, 97, 97, 1)","color-icon-secondary-active":"rgba(74, 74, 74, 1)","color-icon-brand":"rgba(74, 74, 74, 1)","color-icon-info":"rgba(0, 148, 213, 1)","color-icon-success":"rgba(4, 123, 93, 1)","color-icon-caution":"rgba(153, 138, 0, 1)","color-icon-warning":"rgba(178, 132, 0, 1)","color-icon-critical":"rgba(226, 44, 56, 1)","color-icon-emphasis":"rgba(0, 91, 211, 1)","color-icon-emphasis-hover":"rgba(0, 66, 153, 1)","color-icon-emphasis-active":"rgba(0, 46, 106, 1)","color-icon-magic":"rgba(128, 81, 255, 1)","color-icon-inverse":"rgba(227, 227, 227, 1)","color-avatar-bg-fill":"rgba(181, 181, 181, 1)","color-avatar-five-bg-fill":"rgba(253, 75, 146, 1)","color-avatar-five-text-on-bg-fill":"rgba(255, 246, 248, 1)","color-avatar-four-bg-fill":"rgba(81, 192, 255, 1)","color-avatar-four-text-on-bg-fill":"rgba(0, 33, 51, 1)","color-avatar-one-bg-fill":"rgba(197, 48, 197, 1)","color-avatar-one-text-on-bg-fill":"rgba(253, 239, 253, 1)","color-avatar-seven-bg-fill":"rgba(148, 116, 255, 1)","color-avatar-seven-text-on-bg-fill":"rgba(248, 247, 255, 1)","color-avatar-six-bg-fill":"rgba(37, 232, 43, 1)","color-avatar-six-text-on-bg-fill":"rgba(3, 61, 5, 1)","color-avatar-text-on-bg-fill":"rgba(255, 255, 255, 1)","color-avatar-three-bg-fill":"rgba(44, 224, 212, 1)","color-avatar-three-text-on-bg-fill":"rgba(3, 60, 57, 1)","color-avatar-two-bg-fill":"rgba(82, 244, 144, 1)","color-avatar-two-text-on-bg-fill":"rgba(1, 75, 64, 1)","color-backdrop-bg":"rgba(0, 0, 0, 0.71)","color-button-gradient-bg-fill":"linear-gradient(180deg, rgba(48, 48, 48, 0) 63.53%, rgba(255, 255, 255, 0.15) 100%)","color-checkbox-bg-surface-disabled":"rgba(0, 0, 0, 0.08)","color-checkbox-icon-disabled":"rgba(255, 255, 255, 1)","color-input-bg-surface":"rgba(253, 253, 253, 1)","color-input-bg-surface-hover":"rgba(250, 250, 250, 1)","color-input-bg-surface-active":"rgba(247, 247, 247, 1)","color-input-border":"rgba(138, 138, 138, 1)","color-input-border-hover":"rgba(97, 97, 97, 1)","color-input-border-active":"rgba(26, 26, 26, 1)","color-nav-bg":"rgba(235, 235, 235, 1)","color-nav-bg-surface":"rgba(0, 0, 0, 0.02)","color-nav-bg-surface-hover":"rgba(241, 241, 241, 1)","color-nav-bg-surface-active":"rgba(250, 250, 250, 1)","color-nav-bg-surface-selected":"rgba(250, 250, 250, 1)","color-radio-button-bg-surface-disabled":"rgba(0, 0, 0, 0.08)","color-radio-button-icon-disabled":"rgba(255, 255, 255, 1)","color-video-thumbnail-play-button-bg-fill-hover":"rgba(0, 0, 0, 0.81)","color-video-thumbnail-play-button-bg-fill":"rgba(0, 0, 0, 0.71)","color-video-thumbnail-play-button-text-on-bg-fill":"rgba(255, 255, 255, 1)","color-scrollbar-thumb-bg-hover":"rgba(138, 138, 138, 1)","color-scrollbar-thumb-bg":"rgba(181, 181, 181, 1)"},font:{"font-family-sans":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","font-family-mono":"ui-monospace, SFMono-Regular, 'SF Mono', Consolas, 'Liberation Mono', Menlo, monospace","font-size-275":"0.6875rem","font-size-300":"0.75rem","font-size-325":"0.8125rem","font-size-350":"0.875rem","font-size-400":"1rem","font-size-450":"1.125rem","font-size-500":"1.25rem","font-size-550":"1.375rem","font-size-600":"1.5rem","font-size-750":"1.875rem","font-size-800":"2rem","font-size-900":"2.25rem","font-size-1000":"2.5rem","font-weight-regular":"450","font-weight-medium":"550","font-weight-semibold":"650","font-weight-bold":"700","font-letter-spacing-densest":"-0.03375rem","font-letter-spacing-denser":"-0.01875rem","font-letter-spacing-dense":"-0.0125rem","font-letter-spacing-normal":"0rem","font-line-height-300":"0.75rem","font-line-height-400":"1rem","font-line-height-500":"1.25rem","font-line-height-600":"1.5rem","font-line-height-700":"1.75rem","font-line-height-800":"2rem","font-line-height-1000":"2.5rem","font-line-height-1200":"3rem"},height:{"height-0":"0rem","height-025":"0.0625rem","height-050":"0.125rem","height-100":"0.25rem","height-150":"0.375rem","height-200":"0.5rem","height-300":"0.75rem","height-400":"1rem","height-500":"1.25rem","height-600":"1.5rem","height-700":"1.75rem","height-800":"2rem","height-900":"2.25rem","height-1000":"2.5rem","height-1200":"3rem","height-1600":"4rem","height-2000":"5rem","height-2400":"6rem","height-2800":"7rem","height-3200":"8rem"},motion:{"motion-duration-0":"0ms","motion-duration-50":"50ms","motion-duration-100":"100ms","motion-duration-150":"150ms","motion-duration-200":"200ms","motion-duration-250":"250ms","motion-duration-300":"300ms","motion-duration-350":"350ms","motion-duration-400":"400ms","motion-duration-450":"450ms","motion-duration-500":"500ms","motion-duration-5000":"5000ms","motion-ease":"cubic-bezier(0.25, 0.1, 0.25, 1)","motion-ease-in":"cubic-bezier(0.42, 0, 1, 1)","motion-ease-out":"cubic-bezier(0.19, 0.91, 0.38, 1)","motion-ease-in-out":"cubic-bezier(0.42, 0, 0.58, 1)","motion-linear":"cubic-bezier(0, 0, 1, 1)","motion-keyframes-bounce":"{ from, 65%, 85% { transform: scale(1) } 75% { transform: scale(0.85) } 82.5% { transform: scale(1.05) } }","motion-keyframes-fade-in":"{ to { opacity: 1 } }","motion-keyframes-pulse":"{ from, 75% { transform: scale(0.85); opacity: 1; } to { transform: scale(2.5); opacity: 0; } }","motion-keyframes-spin":"{ to { transform: rotate(1turn) } }","motion-keyframes-appear-above":"{ from { transform: translateY(var(--p-space-100)); opacity: 0; } to { transform: none; opacity: 1; } }","motion-keyframes-appear-below":"{ from { transform: translateY(calc(var(--p-space-100) * -1)); opacity: 0; } to { transform: none; opacity: 1; } }"},shadow:{"shadow-0":"none","shadow-100":"0rem 0.0625rem 0rem 0rem rgba(26, 26, 26, 0.07)","shadow-200":"0rem 0.1875rem 0.0625rem -0.0625rem rgba(26, 26, 26, 0.07)","shadow-300":"0rem 0.25rem 0.375rem -0.125rem rgba(26, 26, 26, 0.20)","shadow-400":"0rem 0.5rem 1rem -0.25rem rgba(26, 26, 26, 0.22)","shadow-500":"0rem 0.75rem 1.25rem -0.5rem rgba(26, 26, 26, 0.24)","shadow-600":"0rem 1.25rem 1.25rem -0.5rem rgba(26, 26, 26, 0.28)","shadow-bevel-100":"0.0625rem 0rem 0rem 0rem rgba(204, 204, 204, 0.08) inset, -0.0625rem 0rem 0rem 0rem rgba(204, 204, 204, 0.08) inset, 0rem -0.0625rem 0rem 0rem rgba(204, 204, 204, 0.08) inset, 0rem 0.0625rem 0rem 0rem rgba(204, 204, 204, 0.16) inset","shadow-inset-100":"0rem 0.0625rem 0.125rem 0rem rgba(26, 26, 26, 0.15) inset, 0rem 0.0625rem 0.0625rem 0rem rgba(26, 26, 26, 0.15) inset","shadow-inset-200":"0rem 0.125rem 0.0625rem 0rem rgba(26, 26, 26, 0.20) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.12) inset, -0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.12) inset","shadow-button":"0rem -0.0625rem 0rem 0rem #b5b5b5 inset, 0rem 0rem 0rem 0.0625rem rgba(0, 0, 0, 0.1) inset, 0rem 0.03125rem 0rem 0.09375rem #FFF inset","shadow-button-hover":"0rem 0.0625rem 0rem 0rem #EBEBEB inset, -0.0625rem 0rem 0rem 0rem #EBEBEB inset, 0.0625rem 0rem 0rem 0rem #EBEBEB inset, 0rem -0.0625rem 0rem 0rem #CCC inset","shadow-button-inset":"-0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.122) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.122) inset, 0rem 0.125rem 0.0625rem 0rem rgba(26, 26, 26, 0.2) inset","shadow-button-primary":"0rem -0.0625rem 0rem 0.0625rem rgba(0, 0, 0, 0.8) inset, 0rem 0rem 0rem 0.0625rem rgba(48, 48, 48, 1) inset, 0rem 0.03125rem 0rem 0.09375rem rgba(255, 255, 255, 0.25) inset","shadow-button-primary-hover":"0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.24) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem -0.0625rem 0rem 0rem #000 inset, 0rem -0.0625rem 0rem 0.0625rem #1A1A1A","shadow-button-primary-inset":"0rem 0.1875rem 0rem 0rem rgb(0, 0, 0) inset","shadow-button-primary-critical":"0rem -0.0625rem 0rem 0.0625rem rgba(142, 31, 11, 0.8) inset, 0rem 0rem 0rem 0.0625rem rgba(181, 38, 11, 0.8) inset, 0rem 0.03125rem 0rem 0.09375rem rgba(255, 255, 255, 0.349) inset","shadow-button-primary-critical-hover":"0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.48) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem -0.09375rem 0rem 0rem rgba(0, 0, 0, 0.25) inset","shadow-button-primary-critical-inset":"-0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.2) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.2) inset, 0rem 0.125rem 0rem 0rem rgba(0, 0, 0, 0.6) inset","shadow-button-primary-success":"0rem -0.0625rem 0rem 0.0625rem rgba(12, 81, 50, 0.8) inset, 0rem 0rem 0rem 0.0625rem rgba(19, 111, 69, 0.8) inset, 0rem 0.03125rem 0rem 0.09375rem rgba(255, 255, 255, 0.251) inset","shadow-button-primary-success-hover":"0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.48) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem -0.09375rem 0rem 0rem rgba(0, 0, 0, 0.25) inset","shadow-button-primary-success-inset":"-0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.2) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.2) inset, 0rem 0.125rem 0rem 0rem rgba(0, 0, 0, 0.6) inset","shadow-border-inset":"0rem 0rem 0rem 0.0625rem rgba(0, 0, 0, 0.08) inset"},space:{"space-0":"0rem","space-025":"0.0625rem","space-050":"0.125rem","space-100":"0.25rem","space-150":"0.375rem","space-200":"0.5rem","space-300":"0.75rem","space-400":"1rem","space-500":"1.25rem","space-600":"1.5rem","space-800":"2rem","space-1000":"2.5rem","space-1200":"3rem","space-1600":"4rem","space-2000":"5rem","space-2400":"6rem","space-2800":"7rem","space-3200":"8rem","space-button-group-gap":"0.5rem","space-card-gap":"1rem","space-card-padding":"1rem","space-table-cell-padding":"0.375rem"},text:{"text-heading-3xl-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-3xl-font-size":"2.25rem","text-heading-3xl-font-weight":"700","text-heading-3xl-font-letter-spacing":"-0.03375rem","text-heading-3xl-font-line-height":"3rem","text-heading-2xl-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-2xl-font-size":"1.875rem","text-heading-2xl-font-weight":"700","text-heading-2xl-font-letter-spacing":"-0.01875rem","text-heading-2xl-font-line-height":"2.5rem","text-heading-xl-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-xl-font-size":"1.5rem","text-heading-xl-font-weight":"700","text-heading-xl-font-letter-spacing":"-0.0125rem","text-heading-xl-font-line-height":"2rem","text-heading-lg-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-lg-font-size":"1.25rem","text-heading-lg-font-weight":"650","text-heading-lg-font-letter-spacing":"-0.0125rem","text-heading-lg-font-line-height":"1.5rem","text-heading-md-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-md-font-size":"0.875rem","text-heading-md-font-weight":"650","text-heading-md-font-letter-spacing":"0rem","text-heading-md-font-line-height":"1.25rem","text-heading-sm-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-sm-font-size":"0.8125rem","text-heading-sm-font-weight":"650","text-heading-sm-font-letter-spacing":"0rem","text-heading-sm-font-line-height":"1.25rem","text-heading-xs-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-heading-xs-font-size":"0.75rem","text-heading-xs-font-weight":"650","text-heading-xs-font-letter-spacing":"0rem","text-heading-xs-font-line-height":"1rem","text-body-lg-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-body-lg-font-size":"0.875rem","text-body-lg-font-weight":"450","text-body-lg-font-letter-spacing":"0rem","text-body-lg-font-line-height":"1.25rem","text-body-md-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-body-md-font-size":"0.8125rem","text-body-md-font-weight":"450","text-body-md-font-letter-spacing":"0rem","text-body-md-font-line-height":"1.25rem","text-body-sm-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-body-sm-font-size":"0.75rem","text-body-sm-font-weight":"450","text-body-sm-font-letter-spacing":"0rem","text-body-sm-font-line-height":"1rem","text-body-xs-font-family":"'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif","text-body-xs-font-size":"0.6875rem","text-body-xs-font-weight":"450","text-body-xs-font-letter-spacing":"0rem","text-body-xs-font-line-height":"0.75rem"},width:{"width-0":"0rem","width-025":"0.0625rem","width-050":"0.125rem","width-100":"0.25rem","width-150":"0.375rem","width-200":"0.5rem","width-300":"0.75rem","width-400":"1rem","width-500":"1.25rem","width-600":"1.5rem","width-700":"1.75rem","width-800":"2rem","width-900":"2.25rem","width-1000":"2.5rem","width-1200":"3rem","width-1600":"4rem","width-2000":"5rem","width-2400":"6rem","width-2800":"7rem","width-3200":"8rem"},zIndex:{"z-index-0":"auto","z-index-1":"100","z-index-2":"400","z-index-3":"510","z-index-4":"512","z-index-5":"513","z-index-6":"514","z-index-7":"515","z-index-8":"516","z-index-9":"517","z-index-10":"518","z-index-11":"519","z-index-12":"520"}}},mu=fu[aa];Z2(fu[aa]);const gu=w.createContext(null),hu=w.createContext(null);function Ym(r){return fu[r]}function X2(){const r=w.useContext(gu);if(!r)throw new Error("No theme was provided. Your application must be wrapped in an <AppProvider> or <ThemeProvider> component. See https://polaris.shopify.com/components/app-provider for implementation instructions.");return r}function J2(){const r=w.useContext(hu);if(!r)throw new Error("No themeName was provided. Your application must be wrapped in an <AppProvider> or <ThemeProvider> component. See https://polaris.shopify.com/components/app-provider for implementation instructions.");return r}function Xm(r){const o=typeof r;return r!=null&&(o==="object"||o==="function")}function Le(...r){return r.filter(Boolean).join(" ")}function Rt(r,o){return`${r}${o.charAt(0).toUpperCase()}${o.slice(1)}`}function pu(r){const o=Object.entries(r).filter(([i,l])=>l!=null);return o.length?Object.fromEntries(o):void 0}function Qr(r,o,i,l){if(!l)return{};let c;return Xm(l)?c=Object.fromEntries(Object.entries(l).map(([d,f])=>[d,`var(--p-${i}-${f})`])):c={[Gm[0]]:`var(--p-${i}-${l})`},Object.fromEntries(Object.entries(c).map(([d,f])=>[`--pc-${r}-${o}-${d}`,f]))}function Sl(r,o,i){return i?Xm(i)?Object.fromEntries(Object.entries(i).map(([l,c])=>[`--pc-${r}-${o}-${l}`,c])):{[`--pc-${r}-${o}-${Gm[0]}`]:i}:{}}var q2={themeContainer:"Polaris-ThemeProvider--themeContainer"};const K2=["light","dark-experimental"],ev=r=>K2.includes(r);function tv(r){const{as:o="div",children:i,className:l,theme:c=aa}=r;return g.createElement(hu.Provider,{value:c},g.createElement(gu.Provider,{value:Ym(c)},g.createElement(o,{"data-portal-id":r["data-portal-id"],className:Le(Qm(c),q2.themeContainer,l)},i)))}const vu=w.createContext(!1),la=typeof window>"u"||typeof document>"u",qo=la?w.useEffect:w.useLayoutEffect;function bu(r,o,i,l){const c=w.useRef(o),d=w.useRef(l);qo(()=>{c.current=o},[o]),qo(()=>{d.current=l},[l]),w.useEffect(()=>{if(!(typeof r=="string"&&i!==null))return;let f;if(typeof i>"u")f=window;else if("current"in i){if(i.current===null)return;f=i.current}else f=i;const h=d.current,m=v=>c.current(v);return f.addEventListener(r,m,h),()=>{f.removeEventListener(r,m,h)}},[r,i])}const Jm={navigationBarCollapsed:"767.95px",stackedContent:"1039.95px"},qm={media:"",addListener:Oi,removeListener:Oi,matches:!1,onchange:Oi,addEventListener:Oi,removeEventListener:Oi,dispatchEvent:r=>!0};function Oi(){}function D0(){return la?qm:window.matchMedia(`(max-width: ${Jm.navigationBarCollapsed})`)}function rv(){return la?qm:window.matchMedia(`(max-width: ${Jm.stackedContent})`)}const Jc=new Set,yu=iv(mu.breakpoints);la||yu.forEach(([r,o])=>{const i=c=>{for(const d of Jc)d(r,c.matches)},l=window.matchMedia(o);l.addListener?l.addListener(i):l.addEventListener("change",i)});function nv(r){return Object.fromEntries(yu.map(([o])=>[o,!1]))}function ov(){return Object.fromEntries(yu.map(([r,o])=>[r,window.matchMedia(o).matches]))}function Dl(r){const[o,i]=w.useState(nv());return qo(()=>{i(ov());const l=(c,d)=>{i(f=>({...f,[c]:d}))};return Jc.add(l),()=>{Jc.delete(l)}},[]),o}function iv(r){return Object.entries(G2(r)).map(([i,l])=>Object.entries(l).map(([c,d])=>[`${i.split("-")[1]}${av(c)}`,d])).flat()}function av(r){return r.charAt(0).toUpperCase()+r.slice(1)}function Ll(r,o,i){let l,c,d,f,h,m,v=0,b=!1,y=!1,S=!0;const C=!o&&o!==0;if(typeof r!="function")throw new TypeError("Expected a function");const L=o||0;typeof i=="object"&&(b=!!i.leading,y="maxWait"in i,d=y?Math.max(Number(i.maxWait)||0,L):void 0,S="trailing"in i?!!i.trailing:S);function M(re){const ne=l,fe=c;return l=void 0,c=void 0,v=re,f=r.apply(fe,ne),f}function z(re,ne){return C?(cancelAnimationFrame(h),requestAnimationFrame(re)):setTimeout(re,ne)}function B(re){if(C)return cancelAnimationFrame(re);clearTimeout(re)}function R(re){return v=re,h=z(X,L),b?M(re):f}function H(re){const ne=re-m,fe=re-v,oe=L-ne;return y&&d?Math.min(oe,d-fe):oe}function Z(re){const ne=re-m,fe=re-v;return m===void 0||ne>=L||ne<0||y&&d&&fe>=d}function X(){const re=Date.now();if(Z(re))return te(re);h=z(X,H(re))}function te(re){return h=void 0,S&&l?M(re):(l=c=void 0,f)}function I(){h!==void 0&&B(h),v=0,l=m=c=h=void 0}function D(){return h===void 0?f:te(Date.now())}function U(){return h!==void 0}function V(...re){const ne=Date.now(),fe=Z(ne);if(l=re,c=this,m=ne,fe){if(h===void 0)return R(m);if(y)return h=z(X,L),M(m)}return h===void 0&&(h=z(X,L)),f}return V.cancel=I,V.flush=D,V.pending=U,V}class yo{static get zero(){return new yo}constructor({top:o=0,left:i=0,width:l=0,height:c=0}={}){this.top=o,this.left=i,this.width=l,this.height=c}get center(){return{x:this.left+this.width/2,y:this.top+this.height/2}}}function fn(r){try{const o=r.getBoundingClientRect();return new yo({top:o.top,left:o.left,width:o.width,height:o.height})}catch{return new yo({width:window.innerWidth,height:window.innerHeight})}}const ml=1e3/60;class Km{constructor(o){this.stickyItems=[],this.stuckItems=[],this.container=null,this.topBarOffset=0,this.handleResize=Ll(()=>{this.manageStickyItems()},ml,{leading:!0,trailing:!0,maxWait:ml}),this.handleScroll=Ll(()=>{this.manageStickyItems()},ml,{leading:!0,trailing:!0,maxWait:ml}),o&&this.setContainer(o)}registerStickyItem(o){this.stickyItems.push(o)}unregisterStickyItem(o){const i=this.stickyItems.findIndex(({stickyNode:l})=>o===l);this.stickyItems.splice(i,1)}getStickyItem(o){return this.stickyItems.find(({stickyNode:i})=>o===i)}setContainer(o){this.container=o,eg(o)&&this.setTopBarOffset(o),this.container.addEventListener("scroll",this.handleScroll),window.addEventListener("resize",this.handleResize),this.manageStickyItems()}removeScrollListener(){this.container&&(this.container.removeEventListener("scroll",this.handleScroll),window.removeEventListener("resize",this.handleResize))}manageStickyItems(){if(this.stickyItems.length<=0)return;const o=this.container?lv(this.container):0,i=fn(this.container).top+this.topBarOffset;this.stickyItems.forEach(l=>{const{handlePositioning:c}=l,{sticky:d,top:f,left:h,width:m}=this.evaluateStickyItem(l,o,i);this.updateStuckItems(l,d),c(d,f,h,m)})}evaluateStickyItem(o,i,l){var z;const{stickyNode:c,placeHolderNode:d,boundingElement:f,offset:h,disableWhenStacked:m}=o;if(m&&rv().matches)return{sticky:!1,top:0,left:0,width:"auto"};const v=h?this.getOffset(c)+parseInt(mu.space["space-500"],10):this.getOffset(c),b=i+v,y=d.getBoundingClientRect().top-l+i,S=l+v,C=d.getBoundingClientRect().width,L=d.getBoundingClientRect().left;let M;if(f==null)M=b>=y;else{const B=c.getBoundingClientRect().height||((z=c.firstElementChild)==null?void 0:z.getBoundingClientRect().height)||0,R=f.getBoundingClientRect().bottom-B+i-l;M=b>=y&&b<R}return{sticky:M,top:S,left:L,width:C}}updateStuckItems(o,i){const{stickyNode:l}=o;i&&!this.isNodeStuck(l)?this.addStuckItem(o):!i&&this.isNodeStuck(l)&&this.removeStuckItem(o)}addStuckItem(o){this.stuckItems.push(o)}removeStuckItem(o){const{stickyNode:i}=o,l=this.stuckItems.findIndex(({stickyNode:c})=>i===c);this.stuckItems.splice(l,1)}getOffset(o){if(this.stuckItems.length===0)return 0;let i=0,l=0;const c=this.stuckItems.length,d=fn(o);for(;l<c;){const f=this.stuckItems[l].stickyNode;if(f!==o){const h=fn(f);sv(d,h)||(i+=fn(f).height)}else break;l++}return i}isNodeStuck(o){return this.stuckItems.findIndex(({stickyNode:l})=>o===l)>=0}setTopBarOffset(o){const i=o.querySelector(`:not(${uu.selector}) ${Wm.selector}`);this.topBarOffset=i?i.clientHeight:0}}function eg(r){return r===document}function lv(r){return eg(r)?document.body.scrollTop||document.documentElement.scrollTop:r.scrollTop}function sv(r,o){const i=r.left,l=r.left+r.width,c=o.left;return o.left+o.width<i||l<c}const j0="data-lock-scrolling",U0="data-lock-scrolling-hidden",H0="data-lock-scrolling-wrapper";let gl=0;function cv(){const{body:r}=document;return r.scrollHeight>r.clientHeight}class uv{constructor(){this.scrollLocks=0,this.locked=!1}registerScrollLock(){this.scrollLocks+=1,this.handleScrollLocking()}unregisterScrollLock(){this.scrollLocks-=1,this.handleScrollLocking()}handleScrollLocking(){if(la)return;const{scrollLocks:o}=this,{body:i}=document,l=i.firstElementChild;o===0?(i.removeAttribute(j0),i.removeAttribute(U0),l&&l.removeAttribute(H0),window.scroll(0,gl),this.locked=!1):o>0&&!this.locked&&(gl=window.pageYOffset,i.setAttribute(j0,""),cv()||i.setAttribute(U0,""),l&&(l.setAttribute(H0,""),l.scrollTop=gl),this.locked=!0)}resetScrollPosition(){gl=0}}const dv=/\[(.*?)\]|(\w+)/g;function W0(r,o,i){if(r==null)return;const l=Array.isArray(o)?o:fv(o);let c=r;for(let d=0;d<l.length;d++){const f=c[l[d]];if(f===void 0)return i;c=f}return c}function fv(r){const o=[];let i;for(;i=dv.exec(r);){const[,l,c]=i;o.push(l||c)}return o}function mv(...r){let o={};for(const i of r)o=tg(o,i);return o}function tg(r,o){const i=Array.isArray(r)?[...r]:{...r};for(const l in o)if(Object.prototype.hasOwnProperty.call(o,l))$0(o[l])&&$0(i[l])?i[l]=tg(i[l],o[l]):i[l]=o[l];else continue;return i}function $0(r){return r!==null&&typeof r=="object"}const gv=/{([^}]*)}/g;class V0{constructor(o){this.translation={},this.translation=Array.isArray(o)?mv(...o.slice().reverse()):o}translate(o,i){const l=W0(this.translation,o,"");return l?i?l.replace(gv,c=>{const d=c.substring(1,c.length-1);if(i[d]===void 0){const f=JSON.stringify(i);throw new Error(`Error in translation for key '${o}'. No replacement found for key '${d}'. The following replacements were passed: '${f}'`)}return i[d]}):l:""}translationKeyExists(o){return!!W0(this.translation,o)}}const hv=w.createContext(void 0),rg=w.createContext(void 0),pv=w.createContext(void 0),ng=w.createContext(void 0),og=w.createContext(void 0),ig=w.createContext(void 0);class qi extends w.PureComponent{componentDidMount(){this.attachListener()}componentDidUpdate({passive:o,...i}){this.detachListener(i),this.attachListener()}componentWillUnmount(){this.detachListener()}render(){return null}attachListener(){const{event:o,handler:i,capture:l,passive:c,window:d}=this.props;(d||globalThis.window).addEventListener(o,i,{capture:l,passive:c})}detachListener(o){const{event:i,handler:l,capture:c,window:d}=o||this.props;(d||globalThis.window).removeEventListener(i,l,c)}}const vv=function({children:o}){const[i,l]=w.useState(!1),c=w.useCallback(Ll(()=>{i!==D0().matches&&l(!i)},40,{trailing:!0,leading:!0,maxWait:40}),[i]);w.useEffect(()=>{l(D0().matches)},[]);const d=w.useMemo(()=>({isNavigationCollapsed:i}),[i]);return g.createElement(ig.Provider,{value:d},g.createElement(qi,{event:"resize",handler:c}),o)};function jl(){const[r,o]=w.useState(!1);return w.useEffect(()=>{o(!0)},[]),r}const xu=w.createContext(void 0);function bv(r,o){return g.createElement("div",{id:"PolarisPortalsContainer",ref:o})}const yv=w.forwardRef(bv);function xv({children:r,container:o}){const i=jl(),l=w.useRef(null),c=w.useMemo(()=>o?{container:o}:i?{container:l.current}:{container:null},[o,i]);return g.createElement(xu.Provider,{value:c},r,o?null:g.createElement(yv,{ref:l}))}const wv=w.createContext(void 0);function Sv({children:r}){const[o,i]=w.useState([]),l=w.useCallback(f=>{i(h=>[...h,f])},[]),c=w.useCallback(f=>{let h=!0;return i(m=>{const v=[...m],b=v.indexOf(f);return b===-1?h=!1:v.splice(b,1),v}),h},[]),d=w.useMemo(()=>({trapFocusList:o,add:l,remove:c}),[l,o,c]);return g.createElement(wv.Provider,{value:d},r)}const ag=w.createContext(void 0),Ev={tooltip:0,hovercard:0};function Pv({children:r}){const[o,i]=w.useState(Ev),l=w.useCallback(f=>{i(h=>({...h,[f]:h[f]+1}))},[]),c=w.useCallback(f=>{i(h=>({...h,[f]:h[f]-1}))},[]),d=w.useMemo(()=>({presenceList:Object.entries(o).reduce((f,h)=>{const[m,v]=h;return{...f,[m]:v>=1}},{}),presenceCounter:o,addPresence:l,removePresence:c}),[l,c,o]);return g.createElement(ag.Provider,{value:d},r)}const kv=20,El=30,Cv=El+10;function _v(){var c;const r=document.createElement("div");r.setAttribute("style",`position: absolute; opacity: 0; transform: translate3d(-9999px, -9999px, 0); pointer-events: none; width:${El}px; height:${El}px;`);const o=document.createElement("div");o.setAttribute("style",`width:100%; height: ${Cv}; overflow:scroll; scrollbar-width: thin;`),r.appendChild(o),document.body.appendChild(r);const i=El-(((c=r.firstElementChild)==null?void 0:c.clientWidth)??0),l=Math.min(i,kv);document.documentElement.style.setProperty("--pc-app-provider-scrollbar-width",`${l}px`),document.body.removeChild(r)}class Iv extends w.Component{constructor(o){super(o),this.setBodyStyles=()=>{document.body.style.backgroundColor="var(--p-color-bg)",document.body.style.color="var(--p-color-text)"},this.setRootAttributes=()=>{const c=this.getThemeName();Y2.forEach(d=>{document.documentElement.classList.toggle(Qm(d),d===c)})},this.getThemeName=()=>this.props.theme??aa,this.stickyManager=new Km,this.scrollLockManager=new uv;const{i18n:i,linkComponent:l}=this.props;this.state={link:l,intl:new V0(i)}}componentDidMount(){if(document!=null){this.stickyManager.setContainer(document),this.setBodyStyles(),this.setRootAttributes();const o=navigator.userAgent.includes("Safari")&&!navigator.userAgent.includes("Chrome")&&(navigator.userAgent.includes("Version/16.1")||navigator.userAgent.includes("Version/16.2")||navigator.userAgent.includes("Version/16.3")),i=navigator.userAgent.includes("Shopify Mobile/iOS")&&(navigator.userAgent.includes("OS 16_1")||navigator.userAgent.includes("OS 16_2")||navigator.userAgent.includes("OS 16_3"));(o||i)&&document.documentElement.classList.add("Polaris-Safari-16-Font-Optical-Sizing-Patch")}_v()}componentDidUpdate({i18n:o,linkComponent:i}){const{i18n:l,linkComponent:c}=this.props;this.setRootAttributes(),!(l===o&&c===i)&&this.setState({link:c,intl:new V0(l)})}render(){const{children:o,features:i={}}=this.props,l=this.getThemeName(),{intl:c,link:d}=this.state;return g.createElement(hu.Provider,{value:l},g.createElement(gu.Provider,{value:Ym(l)},g.createElement(hv.Provider,{value:i},g.createElement(rg.Provider,{value:c},g.createElement(pv.Provider,{value:this.scrollLockManager},g.createElement(ng.Provider,{value:this.stickyManager},g.createElement(og.Provider,{value:d},g.createElement(vv,null,g.createElement(xv,null,g.createElement(Sv,null,g.createElement(Pv,null,o)))))))))))}}var lg=function(o){return g.createElement("svg",Object.assign({viewBox:"0 0 20 20"},o),g.createElement("path",{d:"M10 6a.75.75 0 0 1 .75.75v3.5a.75.75 0 0 1-1.5 0v-3.5a.75.75 0 0 1 .75-.75Z"}),g.createElement("path",{d:"M11 13a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"}),g.createElement("path",{fillRule:"evenodd",d:"M17 10a7 7 0 1 1-14 0 7 7 0 0 1 14 0Zm-1.5 0a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0Z"}))};lg.displayName="AlertCircleIcon";var sg=function(o){return g.createElement("svg",Object.assign({viewBox:"0 0 20 20"},o),g.createElement("path",{d:"M10 6a.75.75 0 0 1 .75.75v3.5a.75.75 0 0 1-1.5 0v-3.5a.75.75 0 0 1 .75-.75Z"}),g.createElement("path",{d:"M11 13a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"}),g.createElement("path",{fillRule:"evenodd",d:"M11.237 3.177a1.75 1.75 0 0 0-2.474 0l-5.586 5.585a1.75 1.75 0 0 0 0 2.475l5.586 5.586a1.75 1.75 0 0 0 2.474 0l5.586-5.586a1.75 1.75 0 0 0 0-2.475l-5.586-5.585Zm-1.414 1.06a.25.25 0 0 1 .354 0l5.586 5.586a.25.25 0 0 1 0 .354l-5.586 5.585a.25.25 0 0 1-.354 0l-5.586-5.585a.25.25 0 0 1 0-.354l5.586-5.586Z"}))};sg.displayName="AlertDiamondIcon";var cg=function(o){return g.createElement("svg",Object.assign({viewBox:"0 0 20 20"},o),g.createElement("path",{d:"M10 6.75a.75.75 0 0 1 .75.75v3.5a.75.75 0 1 1-1.5 0v-3.5a.75.75 0 0 1 .75-.75Z"}),g.createElement("path",{d:"M11 13.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"}),g.createElement("path",{fillRule:"evenodd",d:"M10 3.5c-1.045 0-1.784.702-2.152 1.447a449.26 449.26 0 0 1-2.005 3.847l-.028.052a403.426 403.426 0 0 0-2.008 3.856c-.372.752-.478 1.75.093 2.614.57.863 1.542 1.184 2.464 1.184h7.272c.922 0 1.895-.32 2.464-1.184.57-.864.465-1.862.093-2.614-.21-.424-1.113-2.147-2.004-3.847l-.032-.061a429.497 429.497 0 0 1-2.005-3.847c-.368-.745-1.107-1.447-2.152-1.447Zm-.808 2.112c.404-.816 1.212-.816 1.616 0 .202.409 1.112 2.145 2.022 3.88a418.904 418.904 0 0 1 2.018 3.875c.404.817 0 1.633-1.212 1.633h-7.272c-1.212 0-1.617-.816-1.212-1.633.202-.408 1.113-2.147 2.023-3.883a421.932 421.932 0 0 0 2.017-3.872Z"}))};cg.displayName="AlertTriangleIcon";var ug=function(o){return g.createElement("svg",Object.assign({viewBox:"0 0 20 20"},o),g.createElement("path",{fillRule:"evenodd",d:"M16.5 10a.75.75 0 0 1-.75.75h-9.69l2.72 2.72a.75.75 0 0 1-1.06 1.06l-4-4a.75.75 0 0 1 0-1.06l4-4a.75.75 0 1 1 1.06 1.06l-2.72 2.72h9.69a.75.75 0 0 1 .75.75Z"}))};ug.displayName="ArrowLeftIcon";var dg=function(o){return g.createElement("svg",Object.assign({viewBox:"0 0 20 20"},o),g.createElement("path",{fillRule:"evenodd",d:"M15.78 5.97a.75.75 0 0 1 0 1.06l-6.5 6.5a.75.75 0 0 1-1.06 0l-3.25-3.25a.75.75 0 1 1 1.06-1.06l2.72 2.72 5.97-5.97a.75.75 0 0 1 1.06 0Z"}))};dg.displayName="CheckIcon";var wu=function(o){return g.createElement("svg",Object.assign({viewBox:"0 0 20 20"},o),g.createElement("path",{fillRule:"evenodd",d:"M5.72 8.47a.75.75 0 0 1 1.06 0l3.47 3.47 3.47-3.47a.75.75 0 1 1 1.06 1.06l-4 4a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 0 1 0-1.06Z"}))};wu.displayName="ChevronDownIcon";var fg=function(o){return g.createElement("svg",Object.assign({viewBox:"0 0 20 20"},o),g.createElement("path",{fillRule:"evenodd",d:"M11.764 5.204a.75.75 0 0 1 .032 1.06l-3.516 3.736 3.516 3.736a.75.75 0 1 1-1.092 1.028l-4-4.25a.75.75 0 0 1 0-1.028l4-4.25a.75.75 0 0 1 1.06-.032Z"}))};fg.displayName="ChevronLeftIcon";var mg=function(o){return g.createElement("svg",Object.assign({viewBox:"0 0 20 20"},o),g.createElement("path",{fillRule:"evenodd",d:"M7.72 14.53a.75.75 0 0 1 0-1.06l3.47-3.47-3.47-3.47a.75.75 0 0 1 1.06-1.06l4 4a.75.75 0 0 1 0 1.06l-4 4a.75.75 0 0 1-1.06 0Z"}))};mg.displayName="ChevronRightIcon";var Su=function(o){return g.createElement("svg",Object.assign({viewBox:"0 0 20 20"},o),g.createElement("path",{fillRule:"evenodd",d:"M14.53 12.28a.75.75 0 0 1-1.06 0l-3.47-3.47-3.47 3.47a.75.75 0 0 1-1.06-1.06l4-4a.75.75 0 0 1 1.06 0l4 4a.75.75 0 0 1 0 1.06Z"}))};Su.displayName="ChevronUpIcon";var gg=function(o){return g.createElement("svg",Object.assign({viewBox:"0 0 20 20"},o),g.createElement("path",{d:"M10 14a.75.75 0 0 1-.75-.75v-3.5a.75.75 0 0 1 1.5 0v3.5a.75.75 0 0 1-.75.75Z"}),g.createElement("path",{d:"M9 7a1 1 0 1 1 2 0 1 1 0 0 1-2 0Z"}),g.createElement("path",{fillRule:"evenodd",d:"M17 10a7 7 0 1 1-14 0 7 7 0 0 1 14 0Zm-1.5 0a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0Z"}))};gg.displayName="InfoIcon";var hg=function(o){return g.createElement("svg",Object.assign({viewBox:"0 0 20 20"},o),g.createElement("path",{d:"M6 10a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Z"}),g.createElement("path",{d:"M11.5 10a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Z"}),g.createElement("path",{d:"M17 10a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Z"}))};hg.displayName="MenuHorizontalIcon";var pg=function(o){return g.createElement("svg",Object.assign({viewBox:"0 0 20 20"},o),g.createElement("path",{fillRule:"evenodd",d:"M12.323 13.383a5.5 5.5 0 1 1 1.06-1.06l2.897 2.897a.75.75 0 1 1-1.06 1.06l-2.897-2.897Zm.677-4.383a4 4 0 1 1-8 0 4 4 0 0 1 8 0Z"}))};pg.displayName="SearchIcon";var vg=function(o){return g.createElement("svg",Object.assign({viewBox:"0 0 20 20"},o),g.createElement("path",{d:"M10.884 4.323a1.25 1.25 0 0 0-1.768 0l-2.646 2.647a.75.75 0 0 0 1.06 1.06l2.47-2.47 2.47 2.47a.75.75 0 1 0 1.06-1.06l-2.646-2.647Z"}),g.createElement("path",{d:"m13.53 13.03-2.646 2.647a1.25 1.25 0 0 1-1.768 0l-2.646-2.647a.75.75 0 0 1 1.06-1.06l2.47 2.47 2.47-2.47a.75.75 0 0 1 1.06 1.06Z"}))};vg.displayName="SelectIcon";var bg=function(o){return g.createElement("svg",Object.assign({viewBox:"0 0 20 20"},o),g.createElement("path",{d:"M13.03 6.97a.75.75 0 0 1 0 1.06l-1.97 1.97 1.97 1.97a.75.75 0 1 1-1.06 1.06l-1.97-1.97-1.97 1.97a.75.75 0 0 1-1.06-1.06l1.97-1.97-1.97-1.97a.75.75 0 0 1 1.06-1.06l1.97 1.97 1.97-1.97a.75.75 0 0 1 1.06 0Z"}),g.createElement("path",{fillRule:"evenodd",d:"M10 17a7 7 0 1 0 0-14 7 7 0 0 0 0 14Zm0-1.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11Z"}))};bg.displayName="XCircleIcon";var yg=function(o){return g.createElement("svg",Object.assign({viewBox:"0 0 20 20"},o),g.createElement("path",{d:"M13.97 15.03a.75.75 0 1 0 1.06-1.06l-3.97-3.97 3.97-3.97a.75.75 0 0 0-1.06-1.06l-3.97 3.97-3.97-3.97a.75.75 0 0 0-1.06 1.06l3.97 3.97-3.97 3.97a.75.75 0 1 0 1.06 1.06l3.97-3.97 3.97 3.97Z"}))};yg.displayName="XIcon";function Rv(r){const{top:o,left:i,bottom:l,right:c}=r.getBoundingClientRect(),d=r.ownerDocument.defaultView||globalThis.window;return o>=0&&c<=d.innerWidth&&l<=d.innerHeight&&i>=0}const qc='a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not([aria-disabled="true"]):not([tabindex="-1"]):not(:disabled),*[tabindex]',G0='a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not([aria-disabled="true"]):not([tabindex="-1"]):not(:disabled),*[tabindex]:not([tabindex="-1"])',Tv='a[role="menuitem"],frame[role="menuitem"],iframe[role="menuitem"],input[role="menuitem"]:not([type=hidden]):not(:disabled),select[role="menuitem"]:not(:disabled),textarea[role="menuitem"]:not(:disabled),button[role="menuitem"]:not(:disabled),*[tabindex]:not([tabindex="-1"])',Ul=({currentTarget:r})=>r.blur();function Mv(r,o){const i=[...document.querySelectorAll(qc)],l=i.indexOf(r)+1,c=i.slice(l);for(const d of c)if(Rv(d)&&(!o||o&&o(d)))return d;return null}function Nv(r,o=!0){return!o&&Eu(r,qc)?r:r.querySelector(qc)}function Bi(r){const o="a,button,frame,iframe,input:not([type=hidden]),select,textarea,*[tabindex]";return Eu(r,o)?r:r.querySelector(o)}function Q0(r,o){const i=Mv(r,o);return i&&i instanceof HTMLElement?(i.focus(),!0):!1}function Lv(r,o=!0){return!o&&Eu(r,G0)?r:r.querySelector(G0)}function Fv(r,o){const i=xg(r),l=wg(i,o);l===-1?i[0].focus():i[(l-1+i.length)%i.length].focus()}function zv(r,o){const i=xg(r),l=wg(i,o);l===-1?i[0].focus():i[(l+1)%i.length].focus()}function xg(r){return r.querySelectorAll(Tv)}function wg(r,o){let i=0;for(const l of r){if(l===o)break;i++}return i===r.length?-1:i}function Eu(r,o){if(r.matches)return r.matches(o);const i=(r.ownerDocument||document).querySelectorAll(o);let l=i.length;for(;--l>=0&&i.item(l)!==r;)return l>-1}var yt={Button:"Polaris-Button",disabled:"Polaris-Button--disabled",pressed:"Polaris-Button--pressed",variantPrimary:"Polaris-Button--variantPrimary",variantSecondary:"Polaris-Button--variantSecondary",variantTertiary:"Polaris-Button--variantTertiary",variantPlain:"Polaris-Button--variantPlain",removeUnderline:"Polaris-Button--removeUnderline",variantMonochromePlain:"Polaris-Button--variantMonochromePlain",toneSuccess:"Polaris-Button--toneSuccess",toneCritical:"Polaris-Button--toneCritical",sizeMicro:"Polaris-Button--sizeMicro",sizeSlim:"Polaris-Button--sizeSlim",sizeMedium:"Polaris-Button--sizeMedium",sizeLarge:"Polaris-Button--sizeLarge",textAlignCenter:"Polaris-Button--textAlignCenter",textAlignStart:"Polaris-Button--textAlignStart",textAlignLeft:"Polaris-Button--textAlignLeft",textAlignEnd:"Polaris-Button--textAlignEnd",textAlignRight:"Polaris-Button--textAlignRight",fullWidth:"Polaris-Button--fullWidth",iconOnly:"Polaris-Button--iconOnly",iconWithText:"Polaris-Button--iconWithText",disclosure:"Polaris-Button--disclosure",loading:"Polaris-Button--loading",pressable:"Polaris-Button--pressable",hidden:"Polaris-Button--hidden",Icon:"Polaris-Button__Icon",Spinner:"Polaris-Button__Spinner"},Di={Icon:"Polaris-Icon",toneInherit:"Polaris-Icon--toneInherit",toneBase:"Polaris-Icon--toneBase",toneSubdued:"Polaris-Icon--toneSubdued",toneCaution:"Polaris-Icon--toneCaution",toneWarning:"Polaris-Icon--toneWarning",toneCritical:"Polaris-Icon--toneCritical",toneInteractive:"Polaris-Icon--toneInteractive",toneInfo:"Polaris-Icon--toneInfo",toneSuccess:"Polaris-Icon--toneSuccess",tonePrimary:"Polaris-Icon--tonePrimary",toneEmphasis:"Polaris-Icon--toneEmphasis",toneMagic:"Polaris-Icon--toneMagic",toneTextCaution:"Polaris-Icon--toneTextCaution",toneTextWarning:"Polaris-Icon--toneTextWarning",toneTextCritical:"Polaris-Icon--toneTextCritical",toneTextInfo:"Polaris-Icon--toneTextInfo",toneTextPrimary:"Polaris-Icon--toneTextPrimary",toneTextSuccess:"Polaris-Icon--toneTextSuccess",toneTextMagic:"Polaris-Icon--toneTextMagic",Svg:"Polaris-Icon__Svg",Img:"Polaris-Icon__Img",Placeholder:"Polaris-Icon__Placeholder"},Br={root:"Polaris-Text--root",block:"Polaris-Text--block",truncate:"Polaris-Text--truncate",visuallyHidden:"Polaris-Text--visuallyHidden",start:"Polaris-Text--start",center:"Polaris-Text--center",end:"Polaris-Text--end",justify:"Polaris-Text--justify",base:"Polaris-Text--base",inherit:"Polaris-Text--inherit",disabled:"Polaris-Text--disabled",success:"Polaris-Text--success",critical:"Polaris-Text--critical",caution:"Polaris-Text--caution",subdued:"Polaris-Text--subdued",magic:"Polaris-Text--magic","magic-subdued":"Polaris-Text__magic--subdued","text-inverse":"Polaris-Text__text--inverse","text-inverse-secondary":"Polaris-Text--textInverseSecondary",headingXs:"Polaris-Text--headingXs",headingSm:"Polaris-Text--headingSm",headingMd:"Polaris-Text--headingMd",headingLg:"Polaris-Text--headingLg",headingXl:"Polaris-Text--headingXl",heading2xl:"Polaris-Text--heading2xl",heading3xl:"Polaris-Text--heading3xl",bodyXs:"Polaris-Text--bodyXs",bodySm:"Polaris-Text--bodySm",bodyMd:"Polaris-Text--bodyMd",bodyLg:"Polaris-Text--bodyLg",regular:"Polaris-Text--regular",medium:"Polaris-Text--medium",semibold:"Polaris-Text--semibold",bold:"Polaris-Text--bold",break:"Polaris-Text--break",numeric:"Polaris-Text--numeric","line-through":"Polaris-Text__line--through"};const ze=({alignment:r,as:o,breakWord:i,children:l,tone:c,fontWeight:d,id:f,numeric:h=!1,truncate:m=!1,variant:v,visuallyHidden:b=!1,textDecorationLine:y})=>{const S=o||(b?"span":"p"),C=Le(Br.root,v&&Br[v],d&&Br[d],(r||m)&&Br.block,r&&Br[r],i&&Br.break,c&&Br[c],h&&Br.numeric,m&&Br.truncate,b&&Br.visuallyHidden,y&&Br[y]);return g.createElement(S,Object.assign({className:C},f&&{id:f}),l)};function Tt({source:r,tone:o,accessibilityLabel:i}){let l;typeof r=="function"?l="function":r==="placeholder"?l="placeholder":l="external";const c=Le(Di.Icon,o&&Di[Rt("tone",o)]),{mdDown:d}=Dl(),f=r,h={function:g.createElement(f,Object.assign({className:Di.Svg,focusable:"false","aria-hidden":"true"},d?{viewBox:"1 1 18 18"}:{})),placeholder:g.createElement("div",{className:Di.Placeholder}),external:g.createElement("img",{className:Di.Img,src:`data:image/svg+xml;utf8,${r}`,alt:"","aria-hidden":"true"})};return g.createElement("span",{className:c},i&&g.createElement(ze,{as:"span",visuallyHidden:!0},i),h[l])}var Z0={Spinner:"Polaris-Spinner",sizeSmall:"Polaris-Spinner--sizeSmall",sizeLarge:"Polaris-Spinner--sizeLarge"};function Sg({size:r="large",accessibilityLabel:o,hasFocusableParent:i}){const l=jl(),c=Le(Z0.Spinner,r&&Z0[Rt("size",r)]),d=r==="large"?g.createElement("svg",{viewBox:"0 0 44 44",xmlns:"http://www.w3.org/2000/svg"},g.createElement("path",{d:"M15.542 1.487A21.507 21.507 0 00.5 22c0 11.874 9.626 21.5 21.5 21.5 9.847 0 18.364-6.675 20.809-16.072a1.5 1.5 0 00-2.904-.756C37.803 34.755 30.473 40.5 22 40.5 11.783 40.5 3.5 32.217 3.5 22c0-8.137 5.3-15.247 12.942-17.65a1.5 1.5 0 10-.9-2.863z"})):g.createElement("svg",{viewBox:"0 0 20 20",xmlns:"http://www.w3.org/2000/svg"},g.createElement("path",{d:"M7.229 1.173a9.25 9.25 0 1011.655 11.412 1.25 1.25 0 10-2.4-.698 6.75 6.75 0 11-8.506-8.329 1.25 1.25 0 10-.75-2.385z"})),f={...!i&&{role:"status"}},h=(l||!i)&&g.createElement(ze,{as:"span",visuallyHidden:!0},o);return g.createElement(g.Fragment,null,g.createElement("span",{className:c},d),g.createElement("span",f,h))}function Av(r,o){const i=w.useCallback(l=>{r&&(l.preventDefault(),l.stopPropagation())},[r]);return r?i:o}function Ov(){return w.useContext(og)}const Eg=w.memo(w.forwardRef(function(o,i){const l=Ov();if(l)return g.createElement(l,Object.assign({},F0.props,o,{ref:i}));const{external:c,url:d,target:f,...h}=o;let m;c?m="_blank":m=f??void 0;const v=m==="_blank"?"noopener noreferrer":void 0;return g.createElement("a",Object.assign({target:m},h,{href:d,rel:v},F0.props,{ref:i}))}));function Bv({id:r,children:o,className:i,url:l,external:c,target:d,download:f,submit:h,disabled:m,loading:v,pressed:b,accessibilityLabel:y,role:S,ariaControls:C,ariaExpanded:L,ariaDescribedBy:M,ariaChecked:z,onClick:B,onFocus:R,onBlur:H,onKeyDown:Z,onKeyPress:X,onKeyUp:te,onMouseEnter:I,onTouchStart:D,...U}){let V;const re={id:r,className:i,"aria-label":y},ne={...re,role:S,onClick:B,onFocus:R,onBlur:H,onMouseUp:Ul,onMouseEnter:I,onTouchStart:D},fe=Av(m,B);return l?V=m?g.createElement("a",re,o):g.createElement(Eg,Object.assign({},ne,{url:l,external:c,target:d,download:f},U),o):V=g.createElement("button",Object.assign({},ne,{"aria-disabled":m,type:h?"submit":"button","aria-busy":v?!0:void 0,"aria-controls":C,"aria-expanded":L,"aria-describedby":M,"aria-checked":z,"aria-pressed":b,onKeyDown:Z,onKeyUp:te,onKeyPress:X,onClick:fe,tabIndex:m?-1:void 0},U),o),V}class Dv extends Error{constructor(o=""){super(`${o&&`${o} `}Your application must be wrapped in an <AppProvider> component. See https://polaris.shopify.com/components/app-provider for implementation instructions.`),this.name="MissingAppProviderError"}}function _r(){const r=w.useContext(rg);if(!r)throw new Dv("No i18n was provided.");return r}function $t({id:r,children:o,url:i,disabled:l,external:c,download:d,target:f,submit:h,loading:m,pressed:v,accessibilityLabel:b,role:y,ariaControls:S,ariaExpanded:C,ariaDescribedBy:L,ariaChecked:M,onClick:z,onFocus:B,onBlur:R,onKeyDown:H,onKeyPress:Z,onKeyUp:X,onMouseEnter:te,onTouchStart:I,onPointerDown:D,icon:U,disclosure:V,removeUnderline:re,size:ne="medium",textAlign:fe="center",fullWidth:oe,dataPrimaryLink:Ee,tone:Ne,variant:xe="secondary"}){const W=_r(),ie=l||m,{mdUp:q}=Dl(),k=Le(yt.Button,yt.pressable,yt[Rt("variant",xe)],yt[Rt("size",ne)],yt[Rt("textAlign",fe)],oe&&yt.fullWidth,V&&yt.disclosure,U&&o&&yt.iconWithText,U&&o==null&&yt.iconOnly,ie&&yt.disabled,m&&yt.loading,v&&!l&&!i&&yt.pressed,re&&yt.removeUnderline,Ne&&yt[Rt("tone",Ne)]),j=V?g.createElement("span",{className:m?yt.hidden:yt.Icon},g.createElement(Tt,{source:m?"placeholder":Uv(V,Su,wu)})):null,ve=jv(U)?g.createElement(Tt,{source:m?"placeholder":U}):U,ye=ve?g.createElement("span",{className:m?yt.hidden:yt.Icon},ve):null,we=["plain","monochromePlain"].includes(xe);let Ce="medium";we?Ce="regular":xe==="primary"&&(Ce=q?"medium":"semibold");let _e="bodySm";(ne==="large"||we&&ne!=="micro")&&(_e="bodyMd");const Fe=o?g.createElement(ze,{as:"span",variant:_e,fontWeight:Ce,key:l?"text-disabled":"text"},o):null,Ae=m?g.createElement("span",{className:yt.Spinner},g.createElement(Sg,{size:"small",accessibilityLabel:W.translate("Polaris.Button.spinnerAccessibilityLabel")})):null,Xe={id:r,className:k,accessibilityLabel:b,ariaDescribedBy:L,role:y,onClick:z,onFocus:B,onBlur:R,onMouseUp:Ul,onMouseEnter:te,onTouchStart:I,"data-primary-link":Ee},ft={url:i,external:c,download:d,target:f},Ze={submit:h,disabled:ie,loading:m,ariaControls:S,ariaExpanded:C,ariaChecked:M,pressed:v,onKeyDown:H,onKeyUp:X,onKeyPress:Z,onPointerDown:D};return g.createElement(Bv,Object.assign({},Xe,ft,Ze),Ae,ye,Fe,j)}function jv(r){return typeof r=="string"||typeof r=="object"&&r.body||typeof r=="function"}function Uv(r,o,i){return r==="select"?vg:r==="up"?o:i}function Pg({content:r,onAction:o,plain:i,destructive:l,...c},d,f){const h=i?"plain":void 0,m=l?"primary":void 0,v=!(d!=null&&d.tone)&&l?"critical":d==null?void 0:d.tone;return g.createElement($t,Object.assign({key:f,onClick:o,tone:v,variant:h||m},c,d),r)}var Hv={ShadowBevel:"Polaris-ShadowBevel"};function Wv(r){const{as:o="div",bevel:i=!0,borderRadius:l,boxShadow:c,children:d,zIndex:f="0"}=r,h=o;return g.createElement(h,{className:Hv.ShadowBevel,style:{"--pc-shadow-bevel-z-index":f,...Sl("shadow-bevel","content",Nc(i,m=>m?'""':"none")),...Sl("shadow-bevel","box-shadow",Nc(i,m=>m?`var(--p-shadow-${c})`:"none")),...Sl("shadow-bevel","border-radius",Nc(i,m=>m?`var(--p-border-radius-${l})`:"var(--p-border-radius-0)"))}},d)}function Nc(r,o){return typeof r=="boolean"?o(r):Object.fromEntries(Object.entries(r).map(([i,l])=>[i,o(l)]))}var hl={listReset:"Polaris-Box--listReset",Box:"Polaris-Box",visuallyHidden:"Polaris-Box--visuallyHidden",printHidden:"Polaris-Box--printHidden"};const Qe=w.forwardRef(({as:r="div",background:o,borderColor:i,borderStyle:l,borderWidth:c,borderBlockStartWidth:d,borderBlockEndWidth:f,borderInlineStartWidth:h,borderInlineEndWidth:m,borderRadius:v,borderEndStartRadius:b,borderEndEndRadius:y,borderStartStartRadius:S,borderStartEndRadius:C,children:L,color:M,id:z,minHeight:B,minWidth:R,maxWidth:H,overflowX:Z,overflowY:X,outlineColor:te,outlineStyle:I,outlineWidth:D,padding:U,paddingBlock:V,paddingBlockStart:re,paddingBlockEnd:ne,paddingInline:fe,paddingInlineStart:oe,paddingInlineEnd:Ee,role:Ne,shadow:xe,tabIndex:W,width:ie,printHidden:q,visuallyHidden:k,position:j,insetBlockStart:ve,insetBlockEnd:ye,insetInlineStart:we,insetInlineEnd:Ce,zIndex:_e,opacity:Fe,...Ae},Xe)=>{const ft=l||(i||c||d||f||h||m?"solid":void 0),Ze=I||(te||D?"solid":void 0),Pt={"--pc-box-color":M?`var(--p-color-${M})`:void 0,"--pc-box-background":o?`var(--p-color-${o})`:void 0,"--pc-box-border-color":i?i==="transparent"?"transparent":`var(--p-color-${i})`:void 0,"--pc-box-border-style":ft,"--pc-box-border-radius":v?`var(--p-border-radius-${v})`:void 0,"--pc-box-border-end-start-radius":b?`var(--p-border-radius-${b})`:void 0,"--pc-box-border-end-end-radius":y?`var(--p-border-radius-${y})`:void 0,"--pc-box-border-start-start-radius":S?`var(--p-border-radius-${S})`:void 0,"--pc-box-border-start-end-radius":C?`var(--p-border-radius-${C})`:void 0,"--pc-box-border-width":c?`var(--p-border-width-${c})`:void 0,"--pc-box-border-block-start-width":d?`var(--p-border-width-${d})`:void 0,"--pc-box-border-block-end-width":f?`var(--p-border-width-${f})`:void 0,"--pc-box-border-inline-start-width":h?`var(--p-border-width-${h})`:void 0,"--pc-box-border-inline-end-width":m?`var(--p-border-width-${m})`:void 0,"--pc-box-min-height":B,"--pc-box-min-width":R,"--pc-box-max-width":H,"--pc-box-outline-color":te?`var(--p-color-${te})`:void 0,"--pc-box-outline-style":Ze,"--pc-box-outline-width":D?`var(--p-border-width-${D})`:void 0,"--pc-box-overflow-x":Z,"--pc-box-overflow-y":X,...Qr("box","padding-block-start","space",re||V||U),...Qr("box","padding-block-end","space",ne||V||U),...Qr("box","padding-inline-start","space",oe||fe||U),...Qr("box","padding-inline-end","space",Ee||fe||U),"--pc-box-shadow":xe?`var(--p-shadow-${xe})`:void 0,"--pc-box-width":ie,position:j,"--pc-box-inset-block-start":ve?`var(--p-space-${ve})`:void 0,"--pc-box-inset-block-end":ye?`var(--p-space-${ye})`:void 0,"--pc-box-inset-inline-start":we?`var(--p-space-${we})`:void 0,"--pc-box-inset-inline-end":Ce?`var(--p-space-${Ce})`:void 0,zIndex:_e,opacity:Fe},Ir=Le(hl.Box,k&&hl.visuallyHidden,q&&hl.printHidden,r==="ul"&&hl.listReset);return g.createElement(r,{className:Ir,id:z,ref:Xe,style:pu(Pt),role:Ne,tabIndex:W,...Ae},L)});Qe.displayName="Box";const Pu=({children:r,background:o="bg-surface",padding:i={xs:"400"},roundedAbove:l="sm"})=>{const c=Dl(),d="300",f=!!c[`${l}Up`];return g.createElement(vu.Provider,{value:!0},g.createElement(Wv,{boxShadow:"100",borderRadius:f?d:"0",zIndex:"32"},g.createElement(Qe,{background:o,padding:i,overflowX:"clip",overflowY:"clip",minHeight:"100%"},r)))};var $v={InlineStack:"Polaris-InlineStack"};const Ot=function({as:o="div",align:i,direction:l="row",blockAlign:c,gap:d,wrap:f=!0,children:h}){const m={"--pc-inline-stack-align":i,"--pc-inline-stack-block-align":c,"--pc-inline-stack-wrap":f?"wrap":"nowrap",...Qr("inline-stack","gap","space",d),...Sl("inline-stack","flex-direction",l)};return g.createElement(o,{className:$v.InlineStack,style:m},h)};var Lc={BlockStack:"Polaris-BlockStack",listReset:"Polaris-BlockStack--listReset",fieldsetReset:"Polaris-BlockStack--fieldsetReset"};const Zr=({as:r="div",children:o,align:i,inlineAlign:l,gap:c,id:d,reverseOrder:f=!1,...h})=>{const m=Le(Lc.BlockStack,(r==="ul"||r==="ol")&&Lc.listReset,r==="fieldset"&&Lc.fieldsetReset),v={"--pc-block-stack-align":i?`${i}`:null,"--pc-block-stack-inline-align":l?`${l}`:null,"--pc-block-stack-order":f?"column-reverse":"column",...Qr("block-stack","gap","space",c)};return g.createElement(r,{className:m,id:d,style:pu(v),...h},o)},kg=w.createContext(!1);function Vv({children:r,filterActions:o}){return g.createElement(kg.Provider,{value:o},r)}var sr={Item:"Polaris-ActionList__Item",default:"Polaris-ActionList--default",active:"Polaris-ActionList--active",destructive:"Polaris-ActionList--destructive",disabled:"Polaris-ActionList--disabled",Prefix:"Polaris-ActionList__Prefix",Suffix:"Polaris-ActionList__Suffix",indented:"Polaris-ActionList--indented",menu:"Polaris-ActionList--menu",Text:"Polaris-ActionList__Text"};const Gv=w.createContext(!1);var Qo={Badge:"Polaris-Badge",toneSuccess:"Polaris-Badge--toneSuccess","toneSuccess-strong":"Polaris-Badge__toneSuccess--strong",toneInfo:"Polaris-Badge--toneInfo","toneInfo-strong":"Polaris-Badge__toneInfo--strong",toneAttention:"Polaris-Badge--toneAttention","toneAttention-strong":"Polaris-Badge__toneAttention--strong",toneWarning:"Polaris-Badge--toneWarning","toneWarning-strong":"Polaris-Badge__toneWarning--strong",toneCritical:"Polaris-Badge--toneCritical","toneCritical-strong":"Polaris-Badge__toneCritical--strong",toneNew:"Polaris-Badge--toneNew",toneMagic:"Polaris-Badge--toneMagic","toneRead-only":"Polaris-Badge__toneRead--only",toneEnabled:"Polaris-Badge--toneEnabled",sizeLarge:"Polaris-Badge--sizeLarge",withinFilter:"Polaris-Badge--withinFilter",Icon:"Polaris-Badge__Icon",PipContainer:"Polaris-Badge__PipContainer"};let cr=(function(r){return r.Info="info",r.Success="success",r.Warning="warning",r.Critical="critical",r.Attention="attention",r.New="new",r.Magic="magic",r.InfoStrong="info-strong",r.SuccessStrong="success-strong",r.WarningStrong="warning-strong",r.CriticalStrong="critical-strong",r.AttentionStrong="attention-strong",r.ReadOnly="read-only",r.Enabled="enabled",r})({}),Fc=(function(r){return r.Incomplete="incomplete",r.PartiallyComplete="partiallyComplete",r.Complete="complete",r})({});function Cg(r,o,i){let l="",c="";if(!o&&!i)return"";switch(o){case Fc.Incomplete:l=r.translate("Polaris.Badge.PROGRESS_LABELS.incomplete");break;case Fc.PartiallyComplete:l=r.translate("Polaris.Badge.PROGRESS_LABELS.partiallyComplete");break;case Fc.Complete:l=r.translate("Polaris.Badge.PROGRESS_LABELS.complete");break}switch(i){case cr.Info:case cr.InfoStrong:c=r.translate("Polaris.Badge.TONE_LABELS.info");break;case cr.Success:case cr.SuccessStrong:c=r.translate("Polaris.Badge.TONE_LABELS.success");break;case cr.Warning:case cr.WarningStrong:c=r.translate("Polaris.Badge.TONE_LABELS.warning");break;case cr.Critical:case cr.CriticalStrong:c=r.translate("Polaris.Badge.TONE_LABELS.critical");break;case cr.Attention:case cr.AttentionStrong:c=r.translate("Polaris.Badge.TONE_LABELS.attention");break;case cr.New:c=r.translate("Polaris.Badge.TONE_LABELS.new");break;case cr.ReadOnly:c=r.translate("Polaris.Badge.TONE_LABELS.readOnly");break;case cr.Enabled:c=r.translate("Polaris.Badge.TONE_LABELS.enabled");break}return!i&&o?l:i&&!o?c:r.translate("Polaris.Badge.progressAndTone",{progressLabel:l,toneLabel:c})}var zc={Pip:"Polaris-Badge-Pip",toneInfo:"Polaris-Badge-Pip--toneInfo",toneSuccess:"Polaris-Badge-Pip--toneSuccess",toneNew:"Polaris-Badge-Pip--toneNew",toneAttention:"Polaris-Badge-Pip--toneAttention",toneWarning:"Polaris-Badge-Pip--toneWarning",toneCritical:"Polaris-Badge-Pip--toneCritical",progressIncomplete:"Polaris-Badge-Pip--progressIncomplete",progressPartiallyComplete:"Polaris-Badge-Pip--progressPartiallyComplete",progressComplete:"Polaris-Badge-Pip--progressComplete"};function Qv({tone:r,progress:o="complete",accessibilityLabelOverride:i}){const l=_r(),c=Le(zc.Pip,r&&zc[Rt("tone",r)],o&&zc[Rt("progress",o)]),d=i||Cg(l,o,r);return g.createElement("span",{className:c},g.createElement(ze,{as:"span",visuallyHidden:!0},d))}const Y0="medium",Zv={complete:()=>g.createElement("svg",{viewBox:"0 0 20 20"},g.createElement("path",{d:"M6 10c0-.93 0-1.395.102-1.776a3 3 0 0 1 2.121-2.122C8.605 6 9.07 6 10 6c.93 0 1.395 0 1.776.102a3 3 0 0 1 2.122 2.122C14 8.605 14 9.07 14 10s0 1.395-.102 1.777a3 3 0 0 1-2.122 2.12C11.395 14 10.93 14 10 14s-1.395 0-1.777-.102a3 3 0 0 1-2.12-2.121C6 11.395 6 10.93 6 10Z"})),partiallyComplete:()=>g.createElement("svg",{viewBox:"0 0 20 20"},g.createElement("path",{fillRule:"evenodd",d:"m8.888 6.014-.017-.018-.02.02c-.253.013-.45.038-.628.086a3 3 0 0 0-2.12 2.122C6 8.605 6 9.07 6 10s0 1.395.102 1.777a3 3 0 0 0 2.121 2.12C8.605 14 9.07 14 10 14c.93 0 1.395 0 1.776-.102a3 3 0 0 0 2.122-2.121C14 11.395 14 10.93 14 10c0-.93 0-1.395-.102-1.776a3 3 0 0 0-2.122-2.122C11.395 6 10.93 6 10 6c-.475 0-.829 0-1.112.014ZM8.446 7.34a1.75 1.75 0 0 0-1.041.94l4.314 4.315c.443-.2.786-.576.941-1.042L8.446 7.34Zm4.304 2.536L10.124 7.25c.908.001 1.154.013 1.329.06a1.75 1.75 0 0 1 1.237 1.237c.047.175.059.42.06 1.329ZM8.547 12.69c.182.05.442.06 1.453.06h.106L7.25 9.894V10c0 1.01.01 1.27.06 1.453a1.75 1.75 0 0 0 1.237 1.237Z"})),incomplete:()=>g.createElement("svg",{viewBox:"0 0 20 20"},g.createElement("path",{fillRule:"evenodd",d:"M8.547 12.69c.183.05.443.06 1.453.06s1.27-.01 1.453-.06a1.75 1.75 0 0 0 1.237-1.237c.05-.182.06-.443.06-1.453s-.01-1.27-.06-1.453a1.75 1.75 0 0 0-1.237-1.237c-.182-.05-.443-.06-1.453-.06s-1.27.01-1.453.06A1.75 1.75 0 0 0 7.31 8.547c-.05.183-.06.443-.06 1.453s.01 1.27.06 1.453a1.75 1.75 0 0 0 1.237 1.237ZM6.102 8.224C6 8.605 6 9.07 6 10s0 1.395.102 1.777a3 3 0 0 0 2.122 2.12C8.605 14 9.07 14 10 14s1.395 0 1.777-.102a3 3 0 0 0 2.12-2.121C14 11.395 14 10.93 14 10c0-.93 0-1.395-.102-1.776a3 3 0 0 0-2.121-2.122C11.395 6 10.93 6 10 6c-.93 0-1.395 0-1.776.102a3 3 0 0 0-2.122 2.122Z"}))};function Ki({children:r,tone:o,progress:i,icon:l,size:c=Y0,toneAndProgressLabelOverride:d}){const f=_r(),h=w.useContext(Gv),m=Le(Qo.Badge,o&&Qo[Rt("tone",o)],c&&c!==Y0&&Qo[Rt("size",c)],h&&Qo.withinFilter),v=d||Cg(f,i,o);let b=!!v&&g.createElement(ze,{as:"span",visuallyHidden:!0},v);return i&&!l&&(b=g.createElement("span",{className:Qo.Icon},g.createElement(Tt,{accessibilityLabel:v,source:Zv[i]}))),g.createElement("span",{className:m},b,l&&g.createElement("span",{className:Qo.Icon},g.createElement(Tt,{source:l})),r&&g.createElement(ze,{as:"span",variant:"bodySm",fontWeight:o==="new"?"medium":void 0},r))}Ki.Pip=Qv;function ea(r){const[o,i]=w.useState(r);return{value:o,toggle:w.useCallback(()=>i(l=>!l),[]),setTrue:w.useCallback(()=>i(!0),[]),setFalse:w.useCallback(()=>i(!1),[])}}var X0={TooltipContainer:"Polaris-Tooltip__TooltipContainer",HasUnderline:"Polaris-Tooltip__HasUnderline"};function Yv(){const r=w.useContext(ag);if(!r)throw new Error("No ephemeral presence manager was provided. Your application must be wrapped in an <AppProvider> component. See https://polaris.shopify.com/components/app-provider for implementation instructions.");return r}function Xv(){const r=w.useContext(xu);if(!r)throw new Error("No portals manager was provided. Your application must be wrapped in an <AppProvider> component. See https://polaris.shopify.com/components/app-provider for implementation instructions.");return r}function _g({children:r,idPrefix:o="",onPortalCreated:i=Jv}){const l=J2(),{container:c}=Xv(),d=w.useId(),f=o!==""?`${o}-${d}`:d;return w.useEffect(()=>{i()},[i]),c?ou.createPortal(g.createElement(tv,{theme:ev(l)?l:aa,"data-portal-id":f},r),c):null}function Jv(){}var Dn={TooltipOverlay:"Polaris-Tooltip-TooltipOverlay",Tail:"Polaris-Tooltip-TooltipOverlay__Tail",positionedAbove:"Polaris-Tooltip-TooltipOverlay--positionedAbove",measuring:"Polaris-Tooltip-TooltipOverlay--measuring",measured:"Polaris-Tooltip-TooltipOverlay--measured",instant:"Polaris-Tooltip-TooltipOverlay--instant",Content:"Polaris-Tooltip-TooltipOverlay__Content",default:"Polaris-Tooltip-TooltipOverlay--default",wide:"Polaris-Tooltip-TooltipOverlay--wide"};function qv(r,o,i,l,c,d,f,h=0){const m=r.top,v=m+r.height,b=r.top-h,y=c.height-r.top-r.height,S=o.height,C=i.activator+i.container,L=i.container,M=r.top-Math.max(l.top,0),z=c.top+Math.min(c.height,l.top+l.height)-(r.top+r.height),B=M>=L,R=z>=L,H=Math.min(b,S),Z=Math.min(y,S),X=Math.min(b+r.height,S),te=Math.min(y+r.height,S),I=f?0:c.top,D={height:H-C,top:m+I-H,positioning:"above"},U={height:Z-C,top:v+I,positioning:"below"},V={height:te-C,top:m+I,positioning:"cover"},re={height:X-C,top:m+I-H+r.height+C,positioning:"cover"};return d==="above"?(B||M>=z&&!R)&&(b>S||b>y)?D:U:d==="below"?(R||z>=M&&!B)&&(y>S||y>b)?U:D:d==="cover"?(R||z>=M&&!B)&&(y+r.height>S||y>b)?V:re:B&&R?b>y?D:U:M>L?D:U}function Kv(r,o,i,l,c){const d=i.width-o.width;if(c==="left")return Math.min(d,Math.max(0,r.left-l.horizontal));if(c==="right"){const f=i.width-(r.left+r.width);return Math.min(d,Math.max(0,f-l.horizontal))}return Math.min(d,Math.max(0,r.center.x-o.width/2))}function e5(r,o){const{center:i}=r;return i.y<o.top||i.y>o.top+o.height}function t5(r,o=Ig()){const i=Math.max(r.top,0),l=Math.max(r.left,0),c=Math.min(r.top+r.height,o.height),d=Math.min(r.left+r.width,o.width);return new yo({top:i,left:l,height:c-i,width:d-l})}function Ig(r){const o=(r==null?void 0:r.ownerDocument)||globalThis.document,i=o.defaultView||globalThis.window;return new yo({top:i.scrollY,left:i.scrollX,height:i.innerHeight,width:o.body.clientWidth})}var Ac={PositionedOverlay:"Polaris-PositionedOverlay",fixed:"Polaris-PositionedOverlay--fixed",preventInteraction:"Polaris-PositionedOverlay--preventInteraction"};const J0=Symbol("unique_identifier");function r5(r){const o=w.useRef(J0);return o.current===J0&&(o.current=r()),o}function n5(r){const o=jl(),i=w.useRef(!1);if(o&&!i.current)return i.current=!0,r()}const Rg=w.createContext(void 0);var so={Scrollable:"Polaris-Scrollable",hasTopShadow:"Polaris-Scrollable--hasTopShadow",hasBottomShadow:"Polaris-Scrollable--hasBottomShadow",horizontal:"Polaris-Scrollable--horizontal",vertical:"Polaris-Scrollable--vertical",scrollbarWidthThin:"Polaris-Scrollable--scrollbarWidthThin",scrollbarWidthNone:"Polaris-Scrollable--scrollbarWidthNone",scrollbarWidthAuto:"Polaris-Scrollable--scrollbarWidthAuto",scrollbarGutterStable:"Polaris-Scrollable--scrollbarGutterStable","scrollbarGutterStableboth-edges":"Polaris-Scrollable__scrollbarGutterStableboth--edges"};function o5(){const r=w.useRef(null),o=w.useContext(Rg);w.useEffect(()=>{!o||!r.current||o(r.current.offsetTop)},[o]);const i=w.useId();return g.createElement("a",{id:i,ref:r})}const q0=100,Tg=2,Mg=w.forwardRef(({children:r,className:o,horizontal:i=!0,vertical:l=!0,shadow:c,hint:d,focusable:f,scrollbarWidth:h="thin",scrollbarGutter:m,onScrolledToBottom:v,...b},y)=>{const[S,C]=w.useState(!1),[L,M]=w.useState(!1),z=r5(()=>new Km),B=w.useRef(null),R=w.useCallback((te,I={})=>{var V;const D=I.behavior||"smooth",U=Ng()?"auto":D;(V=B.current)==null||V.scrollTo({top:te,behavior:U})},[]),H=w.useRef();w.useImperativeHandle(y||H,()=>({scrollTo:R}));const Z=w.useCallback(()=>{const te=B.current;te&&requestAnimationFrame(()=>{const{scrollTop:I,clientHeight:D,scrollHeight:U}=te,V=U>D,re=I>0,ne=I+D>=U-Tg;C(re),M(!ne),V&&ne&&v&&v()})},[v]);n5(()=>{Z(),d&&requestAnimationFrame(()=>i5(B.current))}),w.useEffect(()=>{var D;const te=B.current;if(!te)return;const I=Ll(Z,50,{trailing:!0});return(D=z.current)==null||D.setContainer(te),te.addEventListener("scroll",Z),globalThis.addEventListener("resize",I),()=>{te.removeEventListener("scroll",Z),globalThis.removeEventListener("resize",I)}},[z,Z]);const X=Le(o,so.Scrollable,l&&so.vertical,i&&so.horizontal,c&&S&&so.hasTopShadow,c&&L&&so.hasBottomShadow,h&&so[Rt("scrollbarWidth",h)],m&&so[Rt("scrollbarGutter",m.replace(" ",""))]);return g.createElement(Rg.Provider,{value:R},g.createElement(ng.Provider,{value:z.current},g.createElement("div",Object.assign({className:X},uu.props,b,{ref:B,tabIndex:f?0:void 0}),r)))});Mg.displayName="Scrollable";function Ng(){try{return window.matchMedia("(prefers-reduced-motion: reduce)").matches}catch{return!1}}function i5(r){if(!r||Ng())return;const o=r.scrollHeight-r.clientHeight,i=Math.min(q0,o)-Tg,l=()=>{requestAnimationFrame(()=>{r.scrollTop>=i&&(r.removeEventListener("scroll",l),r.scrollTo({top:0,behavior:"smooth"}))})};r.addEventListener("scroll",l),r.scrollTo({top:q0,behavior:"smooth"})}const a5=r=>{const o=r.closest(uu.selector);return o instanceof HTMLElement?o:document},Ko=Mg;Ko.ScrollTo=o5;Ko.forNode=a5;const K0={childList:!0,subtree:!0,characterData:!0,attributeFilter:["style"]};class Lg extends w.PureComponent{constructor(o){super(o),this.state={measuring:!0,activatorRect:fn(this.props.activator),right:void 0,left:void 0,top:0,height:0,width:null,positioning:"below",zIndex:null,outsideScrollableContainer:!1,lockPosition:!1,chevronOffset:0},this.overlay=null,this.scrollableContainers=[],this.overlayDetails=()=>{const{measuring:i,left:l,right:c,positioning:d,height:f,activatorRect:h,chevronOffset:m}=this.state;return{measuring:i,left:l,right:c,desiredHeight:f,positioning:d,activatorRect:h,chevronOffset:m}},this.setOverlay=i=>{this.overlay=i},this.setScrollableContainers=()=>{const i=[];let l=Ko.forNode(this.props.activator);if(l)for(i.push(l);l!=null&&l.parentElement;)l=Ko.forNode(l.parentElement),i.push(l);this.scrollableContainers=i},this.registerScrollHandlers=()=>{this.scrollableContainers.forEach(i=>{i.addEventListener("scroll",this.handleMeasurement)})},this.unregisterScrollHandlers=()=>{this.scrollableContainers.forEach(i=>{i.removeEventListener("scroll",this.handleMeasurement)})},this.handleMeasurement=()=>{const{lockPosition:i,top:l}=this.state;this.observer.disconnect(),this.setState(({left:c,top:d,right:f})=>({left:c,right:f,top:d,height:0,positioning:"below",measuring:!0}),()=>{if(this.overlay==null||this.firstScrollableContainer==null)return;const{activator:c,preferredPosition:d="below",preferredAlignment:f="center",onScrollOut:h,fullWidth:m,fixed:v,preferInputActivator:b=!0}=this.props,y=c.ownerDocument,S=b&&c.querySelector("input")||c,C=fn(S),L=fn(this.overlay),M=c5(this.firstScrollableContainer)?y.body:this.firstScrollableContainer,z=fn(M),B=m||d==="cover"?new yo({...L,width:C.width}):L;M===y.body&&(z.height=y.body.scrollHeight);let R=0;const H=M.querySelector(`${Wm.selector}`);H&&(R=H.clientHeight);let Z={activator:0,container:0,horizontal:0};this.overlay.firstElementChild&&(Z=l5(this.overlay.firstElementChild));const X=Ig(c),te=s5(c),I=te==null?te:te+1,D=qv(C,B,Z,z,X,d,v,R),U=Kv(C,B,X,Z,f),V=C.center.x-U+Z.horizontal*2;this.setState({measuring:!1,activatorRect:fn(c),left:f!=="right"?U:void 0,right:f==="right"?U:void 0,top:i?l:D.top,lockPosition:!!v,height:D.height||0,width:m||d==="cover"?B.width:null,positioning:D.positioning,outsideScrollableContainer:h!=null&&e5(C,t5(z,X)),zIndex:I,chevronOffset:V},()=>{this.overlay&&(this.observer.observe(this.overlay,K0),this.observer.observe(c,K0))})})},this.observer=new MutationObserver(this.handleMeasurement)}componentDidMount(){this.setScrollableContainers(),this.scrollableContainers.length&&!this.props.fixed&&this.registerScrollHandlers(),this.handleMeasurement()}componentWillUnmount(){this.observer.disconnect(),this.scrollableContainers.length&&!this.props.fixed&&this.unregisterScrollHandlers()}componentDidUpdate(){const{outsideScrollableContainer:o,top:i}=this.state,{onScrollOut:l,active:c}=this.props;c&&l!=null&&i!==0&&o&&l()}render(){var C;const{left:o,right:i,top:l,zIndex:c,width:d}=this.state,{render:f,fixed:h,preventInteraction:m,classNames:v,zIndexOverride:b}=this.props,y={top:l==null||isNaN(l)?void 0:l,left:o==null||isNaN(o)?void 0:o,right:i==null||isNaN(i)?void 0:i,width:d==null||isNaN(d)?void 0:d,zIndex:b||c||void 0},S=Le(Ac.PositionedOverlay,h&&Ac.fixed,m&&Ac.preventInteraction,v);return g.createElement("div",{className:S,style:y,ref:this.setOverlay},g.createElement(qi,{event:"resize",handler:this.handleMeasurement,window:(C=this.overlay)==null?void 0:C.ownerDocument.defaultView}),f(this.overlayDetails()))}get firstScrollableContainer(){return this.scrollableContainers[0]??null}forceUpdatePosition(){requestAnimationFrame(this.handleMeasurement)}}function l5(r){const i=(r.ownerDocument.defaultView||globalThis.window).getComputedStyle(r);return{activator:parseFloat(i.marginTop||"0"),container:parseFloat(i.marginBottom||"0"),horizontal:parseFloat(i.marginLeft||"0")}}function s5(r){const o=r.closest(Hm.selector)||r.ownerDocument.body,i=o===r.ownerDocument.body?"auto":parseInt(window.getComputedStyle(o).zIndex||"0",10);return i==="auto"||isNaN(i)?null:i}function c5(r){return r.ownerDocument===null}const u5=g.createElement(g.Fragment,null,g.createElement("path",{d:"M18.829 8.171 11.862.921A3 3 0 0 0 7.619.838L0 8.171h1.442l6.87-6.612a2 2 0 0 1 2.83.055l6.3 6.557h1.387Z",fill:"var(--p-color-tooltip-tail-up-border)"}),g.createElement("path",{d:"M17.442 10.171h-16v-2l6.87-6.612a2 2 0 0 1 2.83.055l6.3 6.557v2Z",fill:"var(--p-color-bg-surface)"})),d5=g.createElement(g.Fragment,null,g.createElement("path",{d:"m0 2 6.967 7.25a3 3 0 0 0 4.243.083L18.829 2h-1.442l-6.87 6.612a2 2 0 0 1-2.83-.055L1.387 2H0Z",fill:"var(--p-color-tooltip-tail-down-border)"}),g.createElement("path",{d:"M1.387 0h16v2l-6.87 6.612a2 2 0 0 1-2.83-.055L1.387 2V0Z",fill:"var(--p-color-bg-surface)"}));function f5({active:r,activator:o,preferredPosition:i="above",preventInteraction:l,id:c,children:d,accessibilityLabel:f,width:h,padding:m,borderRadius:v,zIndexOverride:b,instant:y}){const S=_r();return r?g.createElement(Lg,{active:r,activator:o,preferredPosition:i,preventInteraction:l,render:L,zIndexOverride:b}):null;function L(M){const{measuring:z,desiredHeight:B,positioning:R,chevronOffset:H}=M,Z=Le(Dn.TooltipOverlay,z&&Dn.measuring,!z&&Dn.measured,y&&Dn.instant,R==="above"&&Dn.positionedAbove),X=Le(Dn.Content,h&&Dn[h]),te=z?void 0:{minHeight:B},I={"--pc-tooltip-chevron-x-pos":`${H}px`,"--pc-tooltip-border-radius":v?`var(--p-border-radius-${v})`:void 0,"--pc-tooltip-padding":m&&m==="default"?"var(--p-space-100) var(--p-space-200)":`var(--p-space-${m})`};return g.createElement("div",Object.assign({style:I,className:Z},Hm.props),g.createElement("svg",{className:Dn.Tail,width:"19",height:"11",fill:"none"},R==="above"?d5:u5),g.createElement("div",{id:c,role:"tooltip",className:X,style:{...te,...I},"aria-label":f?S.translate("Polaris.TooltipOverlay.accessibilityLabel",{label:f}):void 0},d))}}const m5=150;function ta({children:r,content:o,dismissOnMouseOut:i,active:l,hoverDelay:c,preferredPosition:d="above",activatorWrapper:f="span",accessibilityLabel:h,width:m="default",padding:v="default",borderRadius:b,zIndexOverride:y,hasUnderline:S,persistOnClick:C,onOpen:L,onClose:M}){const z=b||"200",B=f,{value:R,setTrue:H,setFalse:Z}=ea(!!l),{value:X,toggle:te}=ea(!!l&&!!C),[I,D]=w.useState(null),{presenceList:U,addPresence:V,removePresence:re}=Yv(),ne=w.useId(),fe=w.useRef(null),oe=w.useRef(!1),[Ee,Ne]=w.useState(!l),xe=w.useRef(null),W=w.useRef(null),ie=w.useCallback(()=>{l!==!1&&H()},[l,H]);w.useEffect(()=>{const Xe=(fe.current?Nv(fe.current):null)||fe.current;Xe&&(Xe.tabIndex=0,Xe.setAttribute("aria-describedby",ne),Xe.setAttribute("data-polaris-tooltip-activator","true"))},[ne,r]),w.useEffect(()=>()=>{xe.current&&clearTimeout(xe.current),W.current&&clearTimeout(W.current)},[]);const q=w.useCallback(()=>{Ne(!U.tooltip&&!R),L==null||L(),V("tooltip")},[V,U.tooltip,L,R]),k=w.useCallback(()=>{M==null||M(),Ne(!1),W.current=setTimeout(()=>{re("tooltip")},m5)},[re,M]),j=w.useCallback(Ae=>{Ae.key==="Escape"&&(k==null||k(),Z(),C&&te())},[Z,k,C,te]);w.useEffect(()=>{l===!1&&R&&(k(),Z())},[l,R,k,Z]);const ve=I?g.createElement(_g,{idPrefix:"tooltip"},g.createElement(f5,{id:ne,preferredPosition:d,activator:I,active:R,accessibilityLabel:h,onClose:g5,preventInteraction:i,width:m,padding:v,borderRadius:z,zIndexOverride:y,instant:!Ee},g.createElement(ze,{as:"span",variant:"bodyMd"},o))):null,ye=Le(f==="div"&&X0.TooltipContainer,S&&X0.HasUnderline);return g.createElement(B,{onFocus:()=>{q(),ie()},onBlur:()=>{k(),Z(),C&&te()},onMouseLeave:_e,onMouseOver:Fe,onMouseDown:C?te:void 0,ref:we,onKeyUp:j,className:ye},r,ve);function we(Ae){const Xe=fe;if(Ae==null){Xe.current=null,D(null);return}Ae.firstElementChild&&D(Ae.firstElementChild),Xe.current=Ae}function Ce(){oe.current=!0,c&&!U.tooltip?xe.current=setTimeout(()=>{q(),ie()},c):(q(),ie())}function _e(){xe.current&&(clearTimeout(xe.current),xe.current=null),oe.current=!1,k(),X||Z()}function Fe(){!oe.current&&Ce()}}function g5(){}function Fg({id:r,badge:o,content:i,accessibilityLabel:l,helpText:c,url:d,onAction:f,onMouseEnter:h,icon:m,image:v,prefix:b,suffix:y,disabled:S,external:C,destructive:L,ellipsis:M,truncate:z,active:B,role:R,variant:H="default"}){const Z=Le(sr.Item,S&&sr.disabled,L&&sr.destructive,B&&sr.active,H==="default"&&sr.default,H==="indented"&&sr.indented,H==="menu"&&sr.menu);let X=null;b?X=g.createElement("span",{className:sr.Prefix},b):m?X=g.createElement("span",{className:sr.Prefix},g.createElement(Tt,{source:m})):v&&(X=g.createElement("span",{role:"presentation",className:sr.Prefix,style:{backgroundImage:`url(${v}`}}));let te=i||"";z&&i?te=g.createElement(h5,null,i):M&&(te=`${i}…`);const I=c?g.createElement(g.Fragment,null,g.createElement(Qe,null,te),g.createElement(ze,{as:"span",variant:"bodySm",tone:B||S?void 0:"subdued"},c)):g.createElement(ze,{as:"span",variant:"bodyMd",fontWeight:B?"semibold":"regular"},te),D=o&&g.createElement("span",{className:sr.Suffix},g.createElement(Ki,{tone:o.tone},o.content)),U=y&&g.createElement(Qe,null,g.createElement("span",{className:sr.Suffix},y)),V=g.createElement("span",{className:sr.Text},g.createElement(ze,{as:"span",variant:"bodyMd",fontWeight:B?"semibold":"regular"},I)),re=g.createElement(Ot,{blockAlign:"center",gap:"150",wrap:!1},X,V,D,U),ne=g.createElement(Qe,{width:"100%"},re),fe=B?g.createElement(Ko.ScrollTo,null):null,oe=d?g.createElement(Eg,{id:r,url:S?null:d,className:Z,external:C,"aria-label":l,onClick:S?null:f,role:R},ne):g.createElement("button",{id:r,type:"button",className:Z,disabled:S,"aria-label":l,onClick:f,onMouseUp:Ul,role:R,onMouseEnter:h},ne);return g.createElement(g.Fragment,null,fe,oe)}const h5=({children:r})=>{const o=X2(),i=w.useRef(null),[l,c]=w.useState(!1);return qo(()=>{i.current&&c(i.current.scrollWidth>i.current.offsetWidth)},[r]),l?g.createElement(ta,{zIndexOverride:Number(o.zIndex["z-index-11"]),preferredPosition:"above",hoverDelay:1e3,content:r,dismissOnMouseOut:!0},g.createElement(ze,{as:"span",truncate:!0},r)):g.createElement(ze,{as:"span",truncate:!0},g.createElement(Qe,{width:"100%",ref:i},r))};function p5({section:r,hasMultipleSections:o,isFirst:i,actionRole:l,onActionAnyItem:c}){const d=b=>()=>{b&&b(),c&&c()},f=r.items.map(({content:b,helpText:y,onAction:S,...C},L)=>{const M=g.createElement(Fg,Object.assign({content:b,helpText:y,role:l,onAction:d(S)},C));return g.createElement(Qe,{as:"li",key:`${b}-${L}`,role:l==="menuitem"?"presentation":void 0},g.createElement(Ot,{wrap:!1},M))});let h=null;r.title&&(h=typeof r.title=="string"?g.createElement(Qe,{paddingBlockStart:"300",paddingBlockEnd:"100",paddingInlineStart:"300",paddingInlineEnd:"300"},g.createElement(ze,{as:"p",variant:"headingSm"},r.title)):g.createElement(Qe,{padding:"200",paddingInlineEnd:"150"},r.title));let m;switch(l){case"option":m="presentation";break;case"menuitem":m=o?"presentation":"menu";break;default:m=void 0;break}const v=g.createElement(g.Fragment,null,h,g.createElement(Qe,Object.assign({as:"div",padding:"150"},o&&{paddingBlockStart:"0"},{tabIndex:o?void 0:-1}),g.createElement(Zr,Object.assign({gap:"050",as:"ul"},m&&{role:m}),f)));return o?g.createElement(Qe,Object.assign({as:"li",role:"presentation",borderColor:"border-secondary"},!i&&{borderBlockStartWidth:"025"},!r.title&&{paddingBlockStart:"150"}),v):v}function ra({keyCode:r,handler:o,keyEvent:i="keyup",options:l,useCapture:c,document:d=globalThis.document}){const f=w.useRef({handler:o,keyCode:r});qo(()=>{f.current={handler:o,keyCode:r}},[o,r]);const h=w.useCallback(m=>{const{handler:v,keyCode:b}=f.current;m.keyCode===b&&v(m)},[]);return w.useEffect(()=>(d.addEventListener(i,h,c||l),()=>{d.removeEventListener(i,h,c||l)}),[i,h,c,l,d]),null}var Be={TextField:"Polaris-TextField",ClearButton:"Polaris-TextField__ClearButton",Loading:"Polaris-TextField__Loading",disabled:"Polaris-TextField--disabled",error:"Polaris-TextField--error",readOnly:"Polaris-TextField--readOnly",Input:"Polaris-TextField__Input",Backdrop:"Polaris-TextField__Backdrop",multiline:"Polaris-TextField--multiline",hasValue:"Polaris-TextField--hasValue",focus:"Polaris-TextField--focus",VerticalContent:"Polaris-TextField__VerticalContent",InputAndSuffixWrapper:"Polaris-TextField__InputAndSuffixWrapper",toneMagic:"Polaris-TextField--toneMagic",Prefix:"Polaris-TextField__Prefix",Suffix:"Polaris-TextField__Suffix",AutoSizeWrapper:"Polaris-TextField__AutoSizeWrapper",AutoSizeWrapperWithSuffix:"Polaris-TextField__AutoSizeWrapperWithSuffix",suggestion:"Polaris-TextField--suggestion",borderless:"Polaris-TextField--borderless",slim:"Polaris-TextField--slim","Input-hasClearButton":"Polaris-TextField__Input--hasClearButton","Input-suffixed":"Polaris-TextField__Input--suffixed","Input-alignRight":"Polaris-TextField__Input--alignRight","Input-alignLeft":"Polaris-TextField__Input--alignLeft","Input-alignCenter":"Polaris-TextField__Input--alignCenter","Input-autoSize":"Polaris-TextField__Input--autoSize",PrefixIcon:"Polaris-TextField__PrefixIcon",CharacterCount:"Polaris-TextField__CharacterCount",AlignFieldBottom:"Polaris-TextField__AlignFieldBottom",Spinner:"Polaris-TextField__Spinner",SpinnerIcon:"Polaris-TextField__SpinnerIcon",Resizer:"Polaris-TextField__Resizer",DummyInput:"Polaris-TextField__DummyInput",Segment:"Polaris-TextField__Segment",monospaced:"Polaris-TextField--monospaced"},co={hidden:"Polaris-Labelled--hidden",LabelWrapper:"Polaris-Labelled__LabelWrapper",disabled:"Polaris-Labelled--disabled",HelpText:"Polaris-Labelled__HelpText",readOnly:"Polaris-Labelled--readOnly",Error:"Polaris-Labelled__Error",Action:"Polaris-Labelled__Action"},em={InlineError:"Polaris-InlineError",Icon:"Polaris-InlineError__Icon"};function v5({message:r,fieldID:o}){return r?g.createElement("div",{id:b5(o),className:em.InlineError},g.createElement("div",{className:em.Icon},g.createElement(Tt,{source:lg})),g.createElement(ze,{as:"span",variant:"bodyMd"},r)):null}function b5(r){return`${r}Error`}var pl={Label:"Polaris-Label",hidden:"Polaris-Label--hidden",Text:"Polaris-Label__Text",RequiredIndicator:"Polaris-Label__RequiredIndicator"};function zg(r){return`${r}Label`}function y5({children:r,id:o,hidden:i,requiredIndicator:l}){const c=Le(pl.Label,i&&pl.hidden);return g.createElement("div",{className:c},g.createElement("label",{id:zg(o),htmlFor:o,className:Le(pl.Text,l&&pl.RequiredIndicator)},g.createElement(ze,{as:"span",variant:"bodyMd"},r)))}function x5({id:r,label:o,error:i,action:l,helpText:c,children:d,labelHidden:f,requiredIndicator:h,disabled:m,readOnly:v,...b}){const y=Le(f&&co.hidden,m&&co.disabled,v&&co.readOnly),S=l?g.createElement("div",{className:co.Action},Pg(l,{variant:"plain"})):null,C=c?g.createElement("div",{className:co.HelpText,id:Ag(r),"aria-disabled":m},g.createElement(ze,{as:"span",tone:"subdued",variant:"bodyMd",breakWord:!0},c)):null,L=i&&typeof i!="boolean"&&g.createElement("div",{className:co.Error},g.createElement(v5,{message:i,fieldID:r})),M=o?g.createElement("div",{className:co.LabelWrapper},g.createElement(y5,Object.assign({id:r,requiredIndicator:h},b,{hidden:!1}),o),S):null;return g.createElement("div",{className:y},M,d,L,C)}function Ag(r){return`${r}HelpText`}var Hi={Connected:"Polaris-Connected",Item:"Polaris-Connected__Item","Item-primary":"Polaris-Connected__Item--primary","Item-focused":"Polaris-Connected__Item--focused"};function Oc({children:r,position:o}){const{value:i,setTrue:l,setFalse:c}=ea(!1),d=Le(Hi.Item,i&&Hi["Item-focused"],o==="primary"?Hi["Item-primary"]:Hi["Item-connection"]);return g.createElement("div",{onBlur:c,onFocus:l,className:d},r)}function w5({children:r,left:o,right:i}){const l=o?g.createElement(Oc,{position:"left"},o):null,c=i?g.createElement(Oc,{position:"right"},i):null;return g.createElement("div",{className:Hi.Connected},l,g.createElement(Oc,{position:"primary"},r),c)}const S5=g.forwardRef(function({onChange:o,onClick:i,onMouseDown:l,onMouseUp:c,onBlur:d},f){function h(v){return()=>o(v)}function m(v){return b=>{b.button===0&&(l==null||l(v))}}return g.createElement("div",{className:Be.Spinner,onClick:i,"aria-hidden":!0,ref:f},g.createElement("div",{role:"button",className:Be.Segment,tabIndex:-1,onClick:h(1),onMouseDown:m(h(1)),onMouseUp:c,onBlur:d},g.createElement("div",{className:Be.SpinnerIcon},g.createElement(Tt,{source:Su}))),g.createElement("div",{role:"button",className:Be.Segment,tabIndex:-1,onClick:h(-1),onMouseDown:m(h(-1)),onMouseUp:c,onBlur:d},g.createElement("div",{className:Be.SpinnerIcon},g.createElement(Tt,{source:wu}))))});function E5({contents:r,currentHeight:o=null,minimumLines:i,onHeightChange:l}){const c=w.useRef(null),d=w.useRef(null),f=w.useRef(),h=w.useRef(o);o!==h.current&&(h.current=o),w.useEffect(()=>()=>{f.current&&cancelAnimationFrame(f.current)},[]);const m=i?g.createElement("div",{ref:d,className:Be.DummyInput,dangerouslySetInnerHTML:{__html:C5(i)}}):null,v=w.useCallback(()=>{f.current&&cancelAnimationFrame(f.current),f.current=requestAnimationFrame(()=>{if(!c.current||!d.current)return;const b=Math.max(c.current.offsetHeight,d.current.offsetHeight);b!==h.current&&l(b)})},[l]);return qo(()=>{v()}),g.createElement("div",{"aria-hidden":!0,className:Be.Resizer},g.createElement(qi,{event:"resize",handler:v}),g.createElement("div",{ref:c,className:Be.DummyInput,dangerouslySetInnerHTML:{__html:_5(r)}}),m)}const Og={"&":"&amp;","<":"&lt;",">":"&gt;","\n":"<br>","\r":""},P5=new RegExp(`[${Object.keys(Og).join()}]`,"g");function k5(r){return Og[r]}function C5(r){let o="";for(let i=0;i<r;i++)o+="<br>";return o}function _5(r){return r?`${r.replace(P5,k5)}<br>`:"<br>"}function I5({prefix:r,suffix:o,verticalContent:i,placeholder:l,value:c="",helpText:d,label:f,labelAction:h,labelHidden:m,disabled:v,clearButton:b,readOnly:y,autoFocus:S,focused:C,multiline:L,error:M,connectedRight:z,connectedLeft:B,type:R="text",name:H,id:Z,role:X,step:te,largeStep:I,autoComplete:D,max:U,maxLength:V,maxHeight:re,min:ne,minLength:fe,pattern:oe,inputMode:Ee,spellCheck:Ne,ariaOwns:xe,ariaControls:W,ariaExpanded:ie,ariaActiveDescendant:q,ariaAutocomplete:k,showCharacterCount:j,align:ve,requiredIndicator:ye,monospaced:we,selectTextOnFocus:Ce,suggestion:_e,variant:Fe="inherit",size:Ae="medium",onClearButtonClick:Xe,onChange:ft,onSpinnerChange:Ze,onFocus:Pt,onBlur:Ir,tone:$n,autoSize:Vt,loading:Vn}){const hn=_r(),[jr,Yr]=w.useState(null),[Gt,Xr]=w.useState(!!C),xo=jl(),dr=w.useId(),Ve=Z??dr,pn=w.useRef(null),kt=w.useRef(null),Mt=w.useRef(null),Nt=w.useRef(null),fr=w.useRef(null),Qt=w.useRef(null),vn=w.useRef(null),Bt=w.useRef(),Jr=w.useRef(null),Rr=w.useCallback(()=>L?Mt.current:kt.current,[L]);w.useEffect(()=>{const ee=Rr();!ee||C===void 0||(C?ee.focus():ee.blur())},[C,i,Rr]),w.useEffect(()=>{const ee=kt.current;!ee||!(R==="text"||R==="tel"||R==="search"||R==="url"||R==="password")||!_e||ee.setSelectionRange(c.length,_e.length)},[Gt,c,R,_e]);const mr=_e||c,bn=te??1,qr=U??1/0,Tr=ne??-1/0,yn=Le(Be.TextField,!!mr&&Be.hasValue,v&&Be.disabled,y&&Be.readOnly,M&&Be.error,$n&&Be[Rt("tone",$n)],L&&Be.multiline,Gt&&!v&&Be.focus,Fe!=="inherit"&&Be[Fe],Ae==="slim"&&Be.slim),gr=R==="currency"?"text":R,Dt=R==="number"||R==="integer",wo=g.isValidElement(r)&&r.type===Tt,Gn=r?g.createElement("div",{className:Le(Be.Prefix,wo&&Be.PrefixIcon),id:`${Ve}-Prefix`,ref:Nt},g.createElement(ze,{as:"span",variant:"bodyMd"},r)):null,Qn=o?g.createElement("div",{className:Be.Suffix,id:`${Ve}-Suffix`,ref:fr},g.createElement(ze,{as:"span",variant:"bodyMd"},o)):null,Zn=Vn?g.createElement("div",{className:Be.Loading,id:`${Ve}-Loading`,ref:Qt},g.createElement(Sg,{size:"small"})):null;let Ur=null;if(j){const ee=mr.length,Me=V?hn.translate("Polaris.TextField.characterCountWithMaxLength",{count:ee,limit:V}):hn.translate("Polaris.TextField.characterCount",{count:ee}),Ie=Le(Be.CharacterCount,L&&Be.AlignFieldBottom),it=V?`${ee}/${V}`:ee;Ur=g.createElement("div",{id:`${Ve}-CharacterCounter`,className:Ie,"aria-label":Me,"aria-live":Gt?"polite":"off","aria-atomic":"true",onClick:hr},g.createElement(ze,{as:"span",variant:"bodyMd"},it))}const So=b&&mr!==""?g.createElement("button",{type:"button",className:Be.ClearButton,onClick:nr,disabled:v},g.createElement(ze,{as:"span",visuallyHidden:!0},hn.translate("Polaris.Common.clear")),g.createElement(Tt,{source:bg,tone:"base"})):null,rr=w.useCallback((ee,Me=bn)=>{if(ft==null&&Ze==null)return;const Ie=Eo=>(Eo.toString().split(".")[1]||[]).length,it=c?parseFloat(c):0;if(isNaN(it))return;const jt=R==="integer"?0:Math.max(Ie(it),Ie(Me)),tn=Math.min(Number(qr),Math.max(it+ee*Me,Number(Tr)));Ze!=null?Ze(String(tn.toFixed(jt)),Ve):ft!=null&&ft(String(tn.toFixed(jt)),Ve)},[Ve,qr,Tr,ft,Ze,bn,R,c]),E=w.useCallback(()=>{clearTimeout(Bt.current)},[]),T=w.useCallback(ee=>{let it=200;const jt=()=>{it>50&&(it-=10),ee(0),Bt.current=window.setTimeout(jt,it)};Bt.current=window.setTimeout(jt,it),document.addEventListener("mouseup",E,{once:!0})},[E]),O=Dt&&te!==0&&!v&&!y?g.createElement(S5,{onClick:hr,onChange:rr,onMouseDown:T,onMouseUp:E,ref:Jr,onBlur:pr}):null,$=L&&jr?{height:jr,maxHeight:re}:null,K=w.useCallback(ee=>{Yr(ee)},[]),pe=L&&xo?g.createElement(E5,{contents:mr||l,currentHeight:jr,minimumLines:typeof L=="number"?L:1,onHeightChange:K}):null,Se=[];M&&Se.push(`${Ve}Error`),d&&Se.push(Ag(Ve)),j&&Se.push(`${Ve}-CharacterCounter`);const ae=[];r&&ae.push(`${Ve}-Prefix`),o&&ae.push(`${Ve}-Suffix`),i&&ae.push(`${Ve}-VerticalContent`),ae.unshift(zg(Ve));const me=Le(Be.Input,ve&&Be[Rt("Input-align",ve)],o&&Be["Input-suffixed"],b&&Be["Input-hasClearButton"],we&&Be.monospaced,_e&&Be.suggestion,Vt&&Be["Input-autoSize"]),ce=ee=>{if(Xr(!0),Ce&&!_e){const Me=Rr();Me==null||Me.select()}Pt&&Pt(ee)};bu("wheel",ue,kt);function ue(ee){document.activeElement===ee.target&&Dt&&ee.stopPropagation()}const Re=w.createElement(L?"textarea":"input",{name:H,id:Ve,disabled:v,readOnly:y,role:X,autoFocus:S,value:mr,placeholder:l,style:$,autoComplete:D,className:me,ref:L?Mt:kt,min:ne,max:U,step:te,minLength:fe,maxLength:V,spellCheck:Ne,pattern:oe,inputMode:Ee,type:gr,rows:R5(L),size:Vt?1:void 0,"aria-describedby":Se.length?Se.join(" "):void 0,"aria-labelledby":ae.join(" "),"aria-invalid":!!M,"aria-owns":xe,"aria-activedescendant":q,"aria-autocomplete":k,"aria-controls":W,"aria-expanded":ie,"aria-required":ye,...T5(L),onFocus:ce,onBlur:pr,onClick:hr,onKeyPress:He,onKeyDown:Yn,onChange:_e?void 0:tt,onInput:_e?tt:void 0,"data-1p-ignore":D==="off"||void 0,"data-lpignore":D==="off"||void 0,"data-form-type":D==="off"?"other":void 0}),Oe=i?g.createElement("div",{className:Be.VerticalContent,id:`${Ve}-VerticalContent`,ref:vn,onClick:hr},i,Re):null,ut=i?Oe:Re,Ye=g.createElement("div",{className:Le(Be.Backdrop,B&&Be["Backdrop-connectedLeft"],z&&Be["Backdrop-connectedRight"])}),Ue=Vt?g.createElement("div",{className:Be.InputAndSuffixWrapper},g.createElement("div",{className:Le(Be.AutoSizeWrapper,o&&Be.AutoSizeWrapperWithSuffix),"data-auto-size-value":c||l},ut),Qn):g.createElement(g.Fragment,null,ut,Qn);return g.createElement(x5,{label:f,id:Ve,error:M,action:h,labelHidden:m,helpText:d,requiredIndicator:ye,disabled:v,readOnly:y},g.createElement(w5,{left:B,right:z},g.createElement("div",{className:yn,onClick:Mr,ref:pn},Gn,Ue,Ur,Zn,So,O,Ye,pe)));function tt(ee){ft&&ft(ee.currentTarget.value,Ve)}function Mr(ee){var it,jt,tn;const{target:Me}=ee,Ie=(it=kt==null?void 0:kt.current)==null?void 0:it.getAttribute("role");if(Me===kt.current&&Ie==="combobox"){(jt=kt.current)==null||jt.focus(),ce(ee);return}vr(Me)||Je(Me)||Zt(Me)||en(Me)||De(Me)||Gt||(tn=Rr())==null||tn.focus()}function hr(ee){var Me;!en(ee.target)&&!Zt(ee.target)&&ee.stopPropagation(),!(vr(ee.target)||Je(ee.target)||Zt(ee.target)||De(ee.target)||Gt)&&(Xr(!0),(Me=Rr())==null||Me.focus())}function nr(){Xe&&Xe(Ve)}function He(ee){const{key:Me,which:Ie}=ee,it=/[\d.,eE+-]$/,jt=/[\deE+-]$/;!Dt||Ie===Gr.Enter||R==="number"&&it.test(Me)||R==="integer"&&jt.test(Me)||ee.preventDefault()}function Yn(ee){if(!Dt)return;const{key:Me,which:Ie}=ee;R==="integer"&&(Me==="ArrowUp"||Ie===Gr.UpArrow)&&(rr(1),ee.preventDefault()),R==="integer"&&(Me==="ArrowDown"||Ie===Gr.DownArrow)&&(rr(-1),ee.preventDefault()),(Ie===Gr.Home||Me==="Home")&&ne!==void 0&&(Ze!=null?Ze(String(ne),Ve):ft!=null&&ft(String(ne),Ve)),(Ie===Gr.End||Me==="End")&&U!==void 0&&(Ze!=null?Ze(String(U),Ve):ft!=null&&ft(String(U),Ve)),(Ie===Gr.PageUp||Me==="PageUp")&&I!==void 0&&rr(1,I),(Ie===Gr.PageDown||Me==="PageDown")&&I!==void 0&&rr(-1,I)}function pr(ee){var Me;Xr(!1),!((Me=pn.current)!=null&&Me.contains(ee==null?void 0:ee.relatedTarget))&&Ir&&Ir(ee)}function Zt(ee){const Me=Rr();return ee instanceof HTMLElement&&Me&&(Me.contains(ee)||Me.contains(document.activeElement))}function vr(ee){return ee instanceof Element&&(Nt.current&&Nt.current.contains(ee)||fr.current&&fr.current.contains(ee))}function en(ee){return ee instanceof Element&&Jr.current&&Jr.current.contains(ee)}function De(ee){return ee instanceof Element&&Qt.current&&Qt.current.contains(ee)}function Je(ee){return ee instanceof Element&&vn.current&&(vn.current.contains(ee)||vn.current.contains(document.activeElement))}}function R5(r){if(r)return typeof r=="number"?r:1}function T5(r){if(r)return r||typeof r=="number"&&r>0?{"aria-multiline":!0}:void 0}const M5=8;function ku({items:r,sections:o=[],actionRole:i,allowFiltering:l,onActionAnyItem:c,filterLabel:d}){const f=_r(),h=w.useContext(kg);let m=[];const v=w.useRef(null),[b,y]=w.useState("");r?m=[{items:r},...o]:o&&(m=o);const S=m==null?void 0:m.some(D=>D.items.some(U=>typeof U.content=="string")),C=m.length>1,L=C&&i==="menuitem"?"menu":void 0,M=C&&i==="menuitem"?-1:void 0,z=m==null?void 0:m.map(D=>({...D,items:D.items.filter(({content:U})=>typeof U=="string"?U==null?void 0:U.toLowerCase().includes(b.toLowerCase()):U)})),B=z.map((D,U)=>D.items.length>0?g.createElement(p5,{key:typeof D.title=="string"?D.title:U,section:D,hasMultipleSections:C,actionRole:i,onActionAnyItem:c,isFirst:U===0}):null),R=D=>{D.preventDefault(),v.current&&D.target&&v.current.contains(D.target)&&Fv(v.current,D.target)},H=D=>{D.preventDefault(),v.current&&D.target&&v.current.contains(D.target)&&zv(v.current,D.target)},Z=i==="menuitem"?g.createElement(g.Fragment,null,g.createElement(ra,{keyEvent:"keydown",keyCode:Gr.DownArrow,handler:H}),g.createElement(ra,{keyEvent:"keydown",keyCode:Gr.UpArrow,handler:R})):null,X=w.useMemo(()=>(z==null?void 0:z.reduce((U,V)=>U+V.items.length,0))||0,[z]),I=((m==null?void 0:m.reduce((D,U)=>D+U.items.length,0))||0)>=M5;return g.createElement(g.Fragment,null,(l||h)&&I&&S&&g.createElement(Qe,{padding:"200",paddingBlockEnd:X>0?"0":"200"},g.createElement(I5,{clearButton:!0,labelHidden:!0,label:d||f.translate("Polaris.ActionList.SearchField.placeholder"),placeholder:d||f.translate("Polaris.ActionList.SearchField.placeholder"),autoComplete:"off",value:b,onChange:D=>y(D),prefix:g.createElement(Tt,{source:pg}),onClearButtonClick:()=>y("")})),g.createElement(Qe,{as:C?"ul":"div",ref:v,role:L,tabIndex:M},Z,B))}ku.Item=Fg;var tm={ActionMenu:"Polaris-ActionMenu"},N5={RollupActivator:"Polaris-ActionMenu-RollupActions__RollupActivator"};function L5(r,{id:o,active:i=!1,ariaHaspopup:l,activatorDisabled:c=!1}){c||(r.tabIndex=r.tabIndex||0),r.setAttribute("aria-controls",o),r.setAttribute("aria-owns",o),r.setAttribute("aria-expanded",String(i)),r.setAttribute("data-state",i?"open":"closed"),l!=null&&r.setAttribute("aria-haspopup",String(l))}function Bg(r,o,i){return r==null?null:Dg(r,o)?r:g.createElement(o,i,r)}const F5=(r,o)=>r===o;function Dg(r,o){var f;if(r==null||!w.isValidElement(r)||typeof r.type=="string")return!1;const{type:i}=r,c=((f=r.props)==null?void 0:f.__type__)||i;return(Array.isArray(o)?o:[o]).some(h=>typeof c!="string"&&F5(h,c))}function z5(r,o=()=>!0){return w.Children.toArray(r).filter(i=>w.isValidElement(i)&&o(i))}function A5({condition:r,wrapper:o,children:i}){return r?o(i):i}function Bc({condition:r,children:o}){return r?o:null}var gt={Popover:"Polaris-Popover",PopoverOverlay:"Polaris-Popover__PopoverOverlay","PopoverOverlay-noAnimation":"Polaris-Popover__PopoverOverlay--noAnimation","PopoverOverlay-entering":"Polaris-Popover__PopoverOverlay--entering","PopoverOverlay-open":"Polaris-Popover__PopoverOverlay--open",measuring:"Polaris-Popover--measuring","PopoverOverlay-exiting":"Polaris-Popover__PopoverOverlay--exiting",fullWidth:"Polaris-Popover--fullWidth",Content:"Polaris-Popover__Content",positionedAbove:"Polaris-Popover--positionedAbove",positionedCover:"Polaris-Popover--positionedCover",ContentContainer:"Polaris-Popover__ContentContainer","Content-fullHeight":"Polaris-Popover__Content--fullHeight","Content-fluidContent":"Polaris-Popover__Content--fluidContent",Pane:"Polaris-Popover__Pane","Pane-fixed":"Polaris-Popover__Pane--fixed","Pane-subdued":"Polaris-Popover__Pane--subdued","Pane-captureOverscroll":"Polaris-Popover__Pane--captureOverscroll",Section:"Polaris-Popover__Section",FocusTracker:"Polaris-Popover__FocusTracker","PopoverOverlay-hideOnPrint":"Polaris-Popover__PopoverOverlay--hideOnPrint"};function jg({children:r}){return g.createElement("div",{className:gt.Section},g.createElement(Qe,{paddingInlineStart:"300",paddingInlineEnd:"300",paddingBlockStart:"200",paddingBlockEnd:"150"},r))}function Kc({captureOverscroll:r=!1,fixed:o,sectioned:i,children:l,height:c,maxHeight:d,minHeight:f,subdued:h,onScrolledToBottom:m}){const v=Le(gt.Pane,o&&gt["Pane-fixed"],h&&gt["Pane-subdued"],r&&gt["Pane-captureOverscroll"]),b=i?Bg(l,jg,{}):l,y={height:c,maxHeight:d,minHeight:f};return o?g.createElement("div",{style:y,className:v},b):g.createElement(Ko,{shadow:!0,className:v,style:y,onScrolledToBottom:m,scrollbarWidth:"thin"},b)}let mn=(function(r){return r[r.Click=0]="Click",r[r.EscapeKeypress=1]="EscapeKeypress",r[r.FocusOut=2]="FocusOut",r[r.ScrollOut=3]="ScrollOut",r})({});var Pr=(function(r){return r.Entering="entering",r.Entered="entered",r.Exiting="exiting",r.Exited="exited",r})(Pr||{});class Ug extends w.PureComponent{constructor(o){super(o),this.state={transitionStatus:this.props.active?Pr.Entering:Pr.Exited},this.contentNode=w.createRef(),this.renderPopover=i=>{const{measuring:l,desiredHeight:c,positioning:d}=i,{id:f,children:h,sectioned:m,fullWidth:v,fullHeight:b,fluidContent:y,hideOnPrint:S,autofocusTarget:C,captureOverscroll:L}=this.props,M=d==="cover",z=Le(gt.Popover,l&&gt.measuring,(v||M)&&gt.fullWidth,S&&gt["PopoverOverlay-hideOnPrint"],d&&gt[Rt("positioned",d)]),B=l?void 0:{height:c},R=Le(gt.Content,b&&gt["Content-fullHeight"],y&&gt["Content-fluidContent"]),{window:H}=this.state;return g.createElement("div",Object.assign({className:z},L2.props),g.createElement(qi,{event:"click",handler:this.handleClick,window:H}),g.createElement(qi,{event:"touchstart",handler:this.handleClick,window:H}),g.createElement(ra,{keyCode:Gr.Escape,handler:this.handleEscape,document:H==null?void 0:H.document}),g.createElement("div",{className:gt.FocusTracker,tabIndex:0,onFocus:this.handleFocusFirstItem}),g.createElement("div",{className:gt.ContentContainer},g.createElement("div",{id:f,tabIndex:C==="none"?void 0:-1,className:R,style:B,ref:this.contentNode},O5(h,{captureOverscroll:L,sectioned:m}))),g.createElement("div",{className:gt.FocusTracker,tabIndex:0,onFocus:this.handleFocusLastItem}))},this.handleClick=i=>{const l=i.target,{contentNode:c,props:{activator:d,onClose:f,preventCloseOnChildOverlayClick:h}}=this,m=i.composedPath(),v=h?B5(m,this.context.container):nm(m,c),b=rm(d,l);v||b||this.state.transitionStatus!==Pr.Entered||f(mn.Click)},this.handleScrollOut=()=>{this.props.onClose(mn.ScrollOut)},this.handleEscape=i=>{const l=i.target,{contentNode:c,props:{activator:d}}=this,f=i.composedPath(),h=nm(f,c),m=rm(d,l);(h||m)&&this.props.onClose(mn.EscapeKeypress)},this.handleFocusFirstItem=()=>{this.props.onClose(mn.FocusOut)},this.handleFocusLastItem=()=>{this.props.onClose(mn.FocusOut)},this.overlayRef=w.createRef()}forceUpdatePosition(){var o;(o=this.overlayRef.current)==null||o.forceUpdatePosition()}changeTransitionStatus(o,i){this.setState({transitionStatus:o},i),this.contentNode.current&&this.contentNode.current.getBoundingClientRect()}componentDidMount(){this.props.active&&(this.focusContent(),this.changeTransitionStatus(Pr.Entered)),this.observer=new ResizeObserver(()=>{this.setState({window:this.props.activator.ownerDocument.defaultView})}),this.observer.observe(this.props.activator)}componentDidUpdate(o){var i,l;this.props.active&&!o.active&&(this.focusContent(),this.changeTransitionStatus(Pr.Entering,()=>{this.clearTransitionTimeout(),this.enteringTimer=window.setTimeout(()=>{this.setState({transitionStatus:Pr.Entered})},parseInt(mu.motion["motion-duration-100"],10))})),!this.props.active&&o.active&&(this.clearTransitionTimeout(),this.setState({transitionStatus:Pr.Exited})),this.props.activator!==o.activator&&((i=this.observer)==null||i.unobserve(o.activator),(l=this.observer)==null||l.observe(this.props.activator))}componentWillUnmount(){var o;this.clearTransitionTimeout(),(o=this.observer)==null||o.disconnect()}render(){const{active:o,activator:i,fullWidth:l,preferredPosition:c="below",preferredAlignment:d="center",preferInputActivator:f=!0,fixed:h,zIndexOverride:m}=this.props,{transitionStatus:v}=this.state;if(v===Pr.Exited&&!o)return null;const b=Le(gt.PopoverOverlay,v===Pr.Entering&&gt["PopoverOverlay-entering"],v===Pr.Entered&&gt["PopoverOverlay-open"],v===Pr.Exiting&&gt["PopoverOverlay-exiting"],c==="cover"&&gt["PopoverOverlay-noAnimation"]);return g.createElement(Lg,{ref:this.overlayRef,fullWidth:l,active:o,activator:i,preferInputActivator:f,preferredPosition:c,preferredAlignment:d,render:this.renderPopover.bind(this),fixed:h,onScrollOut:this.handleScrollOut,classNames:b,zIndexOverride:m})}clearTransitionTimeout(){this.enteringTimer&&window.clearTimeout(this.enteringTimer)}focusContent(){const{autofocusTarget:o="container"}=this.props;o==="none"||this.contentNode==null||requestAnimationFrame(()=>{if(this.contentNode.current==null)return;const i=Lv(this.contentNode.current);i&&o==="first-node"?i.focus({preventScroll:!1}):this.contentNode.current.focus({preventScroll:!1})})}}Ug.contextType=xu;function O5(r,o){const i=w.Children.toArray(r);return Dg(i[0],Kc)?i:Bg(i,Kc,o)}function rm(r,o){if(r===o)return!0;let i=o.parentNode;for(;i!=null;){if(i===r)return!0;i=i.parentNode}return!1}function nm(r,o){return o.current!=null&&r.includes(o.current)}function B5(r,o){return r.some(i=>i instanceof Node&&(o==null?void 0:o.contains(i)))}const D5=w.forwardRef(function({activatorWrapper:o="div",children:i,onClose:l,activator:c,preventFocusOnClose:d,active:f,fixed:h,ariaHaspopup:m,preferInputActivator:v=!0,zIndexOverride:b,...y},S){const[C,L]=w.useState(!1),[M,z]=w.useState(),B=w.useRef(null),R=w.useRef(null),H=o,Z=w.useId();function X(){var U;(U=B.current)==null||U.forceUpdatePosition()}const te=U=>{if(l(U),!(R.current==null||d)){if(U===mn.FocusOut&&M){const V=Bi(M)||Bi(R.current)||R.current;Q0(V,om)||V.focus()}else if(U===mn.EscapeKeypress&&M){const V=Bi(M)||Bi(R.current)||R.current;V?V.focus():Q0(V,om)}}};w.useImperativeHandle(S,()=>({forceUpdatePosition:X,close:(U="activator")=>{const V=U==="activator"?mn.EscapeKeypress:mn.FocusOut;te(V)}}));const I=w.useCallback(()=>{if(R.current==null)return;const V=Bi(R.current)||R.current,re="disabled"in V&&!!V.disabled;L5(V,{id:Z,active:f,ariaHaspopup:m,activatorDisabled:re})},[Z,f,m]);w.useEffect(()=>{function U(){L(!!(R.current&&(R.current.offsetParent!==null||R.current===R.current.ownerDocument.body&&R.current.clientWidth>0)))}if(!R.current)return;const V=new ResizeObserver(U);return V.observe(R.current),U(),()=>{V.disconnect()}},[]),w.useEffect(()=>{(!M&&R.current||M&&R.current&&!R.current.contains(M))&&z(R.current.firstElementChild),I()},[M,I]),w.useEffect(()=>{M&&R.current&&z(R.current.firstElementChild),I()},[M,I]);const D=M&&C?g.createElement(_g,{idPrefix:"popover"},g.createElement(Ug,Object.assign({ref:B,id:Z,activator:M,preferInputActivator:v,onClose:te,active:f,fixed:h,zIndexOverride:b},y),i)):null;return g.createElement(H,{ref:R},w.Children.only(c),D)});function om(r){let o=r.parentElement;for(;o;){if(o.matches(F2.selector))return!1;o=o.parentElement}return!0}const Hg=Object.assign(D5,{Pane:Kc,Section:jg});function j5({accessibilityLabel:r,items:o=[],sections:i=[]}){const l=_r(),{value:c,toggle:d}=ea(!1);if(o.length===0&&i.length===0)return null;const f=g.createElement("div",{className:N5.RollupActivator},g.createElement($t,{icon:hg,accessibilityLabel:r||l.translate("Polaris.ActionMenu.RollupActions.rollupButton"),onClick:d}));return g.createElement(Hg,{active:c,activator:f,preferredAlignment:"right",onClose:d,hideOnPrint:!0},g.createElement(ku,{items:o,sections:i,onActionAnyItem:d}))}var Pl={ActionsLayoutOuter:"Polaris-ActionMenu-Actions__ActionsLayoutOuter",ActionsLayout:"Polaris-ActionMenu-Actions__ActionsLayout","ActionsLayout--measuring":"Polaris-ActionMenu-Actions--actionsLayoutMeasuring",ActionsLayoutMeasurer:"Polaris-ActionMenu-Actions__ActionsLayoutMeasurer"};function im(r=[],o=[],i,l,c){const d=l.reduce((S,C)=>S+C,0),f=r.map((S,C)=>C),h=o.map((S,C)=>C),m=[],v=[],b=[],y=[];if(c>d)m.push(...f),b.push(...h);else{let S=0;f.forEach(C=>{const L=l[C];if(S+L>=c-i){v.push(C);return}m.push(C),S+=L}),h.forEach(C=>{const L=l[C+r.length];if(S+L>=c-i){y.push(C);return}b.push(C),S+=L})}return{visibleActions:m,hiddenActions:v,visibleGroups:b,hiddenGroups:y}}var U5={Details:"Polaris-ActionMenu-MenuGroup__Details"},am={SecondaryAction:"Polaris-ActionMenu-SecondaryAction",critical:"Polaris-ActionMenu-SecondaryAction--critical"};function Vi({children:r,tone:o,helpText:i,onAction:l,destructive:c,...d}){const f=g.createElement($t,Object.assign({onClick:l,tone:c?"critical":void 0},d),r),h=i?g.createElement(ta,{preferredPosition:"below",content:i},f):f;return g.createElement("div",{className:Le(am.SecondaryAction,o==="critical"&&am.critical)},h)}function lm({accessibilityLabel:r,active:o,actions:i,details:l,title:c,icon:d,disabled:f,onClick:h,onClose:m,onOpen:v,sections:b}){const y=w.useCallback(()=>{m(c)},[m,c]),S=w.useCallback(()=>{v(c)},[v,c]),C=w.useCallback(()=>{h?h(S):S()},[h,S]),L=g.createElement(Vi,{disclosure:!0,disabled:f,icon:d,accessibilityLabel:r,onClick:C},c);return g.createElement(Hg,{active:!!o,activator:L,preferredAlignment:"left",onClose:y,hideOnPrint:!0},g.createElement(ku,{items:i,sections:b,onActionAnyItem:y}),l&&g.createElement("div",{className:U5.Details},l))}const H5=8;function W5({actions:r=[],groups:o=[],handleMeasurement:i}){const l=_r(),c=w.useRef(null),d={title:l.translate("Polaris.ActionMenu.Actions.moreActions")},f=g.createElement(Vi,{disclosure:!0},d.title),h=w.useCallback(()=>{if(!c.current)return;const b=c.current.offsetWidth,y=c.current.children,C=Array.from(y).map(M=>Math.ceil(M.getBoundingClientRect().width)+H5),L=C.pop()||0;i({containerWidth:b,disclosureWidth:L,hiddenActionsWidths:C})},[i]);w.useEffect(()=>{h()},[h,r,o]);const m=r.map(b=>{const{content:y,onAction:S,...C}=b;return g.createElement(Vi,Object.assign({key:y,onClick:S},C),y)}),v=o.map(b=>{const{title:y,icon:S}=b;return g.createElement(Vi,{key:y,disclosure:!0,icon:S},y)});return bu("resize",h),g.createElement("div",{className:Pl.ActionsLayoutMeasurer,ref:c},m,v,f)}function $5({actions:r,groups:o,onActionRollup:i}){const l=_r(),c=w.useRef(null),[d,f]=w.useState(void 0),[h,m]=w.useReducer((oe,Ee)=>({...oe,...Ee}),{disclosureWidth:0,containerWidth:1/0,actionsWidths:[],visibleActions:[],hiddenActions:[],visibleGroups:[],hiddenGroups:[],hasMeasured:!1}),{visibleActions:v,hiddenActions:b,visibleGroups:y,hiddenGroups:S,containerWidth:C,disclosureWidth:L,actionsWidths:M,hasMeasured:z}=h,B={title:l.translate("Polaris.ActionMenu.Actions.moreActions"),actions:[]},R=w.useCallback(oe=>f(d?void 0:oe),[d]),H=w.useCallback(()=>f(void 0),[]);w.useEffect(()=>{if(C===0)return;const{visibleActions:oe,visibleGroups:Ee,hiddenActions:Ne,hiddenGroups:xe}=im(r,o,L,M,C);m({visibleActions:oe,visibleGroups:Ee,hiddenActions:Ne,hiddenGroups:xe,hasMeasured:C!==1/0})},[C,L,r,o,M,m]);const Z=w.useMemo(()=>r??[],[r]),X=w.useMemo(()=>o??[],[o]),te=Z.filter((oe,Ee)=>!!v.includes(Ee)).map(oe=>{const{content:Ee,onAction:Ne,...xe}=oe;return g.createElement(Vi,Object.assign({key:Ee,onClick:Ne},xe),Ee)}),D=(S.length>0||b.length>0?[...X,B]:[...X]).filter((oe,Ee)=>{const Ne=X.length===0,xe=y.includes(Ee),W=oe===B;return Ne?b.length>0:W?!0:xe}),U=b.map(oe=>Z[oe]).filter(oe=>oe!=null),V=S.map(oe=>X[oe]).filter(oe=>oe!=null),re=D.map(oe=>{const{title:Ee,actions:Ne,...xe}=oe,W=oe===B,ie=[...U,...V],[q,k]=ie.reduce(([j,ve],ye)=>(V5(ye)?ve.push({title:ye.title,items:ye.actions.map(we=>({...we,disabled:ye.disabled||we.disabled}))}):j.push(ye),[j,ve]),[[],[]]);return W?g.createElement(lm,Object.assign({key:Ee,title:Ee,active:Ee===d,actions:[...q,...Ne],sections:k},xe,{onOpen:R,onClose:H})):g.createElement(lm,Object.assign({key:Ee,title:Ee,active:Ee===d,actions:Ne},xe,{onOpen:R,onClose:H}))}),ne=w.useCallback(oe=>{const{hiddenActionsWidths:Ee,containerWidth:Ne,disclosureWidth:xe}=oe,{visibleActions:W,hiddenActions:ie,visibleGroups:q,hiddenGroups:k}=im(Z,X,xe,Ee,Ne);if(i){const j=ie.length>0||k.length>0;c.current!==j&&(i(j),c.current=j)}m({visibleActions:W,hiddenActions:ie,visibleGroups:q,hiddenGroups:k,actionsWidths:Ee,containerWidth:Ne,disclosureWidth:xe,hasMeasured:!0})},[Z,X,i]),fe=g.createElement(W5,{actions:r,groups:o,handleMeasurement:ne});return g.createElement("div",{className:Pl.ActionsLayoutOuter},fe,g.createElement("div",{className:Le(Pl.ActionsLayout,!z&&Pl["ActionsLayout--measuring"])},te,re))}function V5(r){return"title"in r}function G5({actions:r=[],groups:o=[],rollup:i,rollupActionsLabel:l,onActionRollup:c}){if(r.length===0&&o.length===0)return null;const d=Le(tm.ActionMenu,i&&tm.rollup),f=o.map(h=>Z5(h));return g.createElement("div",{className:d},i?g.createElement(j5,{accessibilityLabel:l,items:r,sections:f}):g.createElement($5,{actions:r,groups:o,onActionRollup:c}))}function Q5(r=[]){return r.length===0?!1:r.some(o=>o.actions.length>0)}function Z5({title:r,actions:o,disabled:i}){return{title:r,items:o.map(l=>({...l,disabled:i||l.disabled}))}}const Y5=w.createContext(!1);var go={Banner:"Polaris-Banner",keyFocused:"Polaris-Banner--keyFocused",withinContentContainer:"Polaris-Banner--withinContentContainer",withinPage:"Polaris-Banner--withinPage",DismissIcon:"Polaris-Banner__DismissIcon","text-success-on-bg-fill":"Polaris-Banner--textSuccessOnBgFill","text-success":"Polaris-Banner__text--success","text-warning-on-bg-fill":"Polaris-Banner--textWarningOnBgFill","text-warning":"Polaris-Banner__text--warning","text-critical-on-bg-fill":"Polaris-Banner--textCriticalOnBgFill","text-critical":"Polaris-Banner__text--critical","text-info-on-bg-fill":"Polaris-Banner--textInfoOnBgFill","text-info":"Polaris-Banner__text--info","icon-secondary":"Polaris-Banner__icon--secondary"};const Dc={success:{withinPage:{background:"bg-fill-success",text:"text-success-on-bg-fill",icon:"text-success-on-bg-fill"},withinContentContainer:{background:"bg-surface-success",text:"text-success",icon:"text-success"},icon:dg},warning:{withinPage:{background:"bg-fill-warning",text:"text-warning-on-bg-fill",icon:"text-warning-on-bg-fill"},withinContentContainer:{background:"bg-surface-warning",text:"text-warning",icon:"text-warning"},icon:cg},critical:{withinPage:{background:"bg-fill-critical",text:"text-critical-on-bg-fill",icon:"text-critical-on-bg-fill"},withinContentContainer:{background:"bg-surface-critical",text:"text-critical",icon:"text-critical"},icon:sg},info:{withinPage:{background:"bg-fill-info",text:"text-info-on-bg-fill",icon:"text-info-on-bg-fill"},withinContentContainer:{background:"bg-surface-info",text:"text-info",icon:"text-info"},icon:gg}};function X5(r){const o=w.useRef(null),[i,l]=w.useState(!1);return w.useImperativeHandle(r,()=>({focus:()=>{var h;(h=o.current)==null||h.focus(),l(!0)}}),[]),{wrapperRef:o,handleKeyUp:h=>{h.target===o.current&&l(!0)},handleBlur:()=>l(!1),handleMouseUp:h=>{h.currentTarget.blur(),l(!1)},shouldShowFocus:i}}var Un={ButtonGroup:"Polaris-ButtonGroup",Item:"Polaris-ButtonGroup__Item","Item-plain":"Polaris-ButtonGroup__Item--plain",variantSegmented:"Polaris-ButtonGroup--variantSegmented","Item-focused":"Polaris-ButtonGroup__Item--focused",fullWidth:"Polaris-ButtonGroup--fullWidth",extraTight:"Polaris-ButtonGroup--extraTight",tight:"Polaris-ButtonGroup--tight",loose:"Polaris-ButtonGroup--loose",noWrap:"Polaris-ButtonGroup--noWrap"};function J5({button:r}){const{value:o,setTrue:i,setFalse:l}=ea(!1),c=Le(Un.Item,o&&Un["Item-focused"],r.props.variant==="plain"&&Un["Item-plain"]);return g.createElement("div",{className:c,onFocus:i,onBlur:l},r)}function Wg({children:r,gap:o,variant:i,fullWidth:l,connectedTop:c,noWrap:d}){const f=Le(Un.ButtonGroup,o&&Un[o],i&&Un[Rt("variant",i)],l&&Un.fullWidth,d&&Un.noWrap),h=z5(r).map((m,v)=>g.createElement(J5,{button:m,key:v}));return g.createElement("div",{className:f,"data-buttongroup-variant":i,"data-buttongroup-connected-top":c,"data-buttongroup-full-width":l,"data-buttongroup-no-wrap":d},h)}const $g=w.forwardRef(function(o,i){const{tone:l,stopAnnouncements:c}=o,d=w.useContext(vu),{wrapperRef:f,handleKeyUp:h,handleBlur:m,handleMouseUp:v,shouldShowFocus:b}=X5(i),y=Le(go.Banner,b&&go.keyFocused,d?go.withinContentContainer:go.withinPage);return g.createElement(Y5.Provider,{value:!0},g.createElement("div",{className:y,tabIndex:0,ref:f,role:l==="warning"||l==="critical"?"alert":"status","aria-live":c?"off":"polite",onMouseUp:v,onKeyUp:h,onBlur:m},g.createElement(q5,o)))});function q5({tone:r="info",icon:o,hideIcon:i,onDismiss:l,action:c,secondaryAction:d,title:f,children:h}){const m=_r(),v=w.useContext(vu),b=!f&&!v,y=Object.keys(Dc).includes(r)?r:"info",S=Dc[y][v?"withinContentContainer":"withinPage"],C={backgroundColor:S.background,textColor:S.text,bannerTitle:f?g.createElement(ze,{as:"h2",variant:"headingSm",breakWord:!0},f):null,bannerIcon:i?null:g.createElement("span",{className:go[S.icon]},g.createElement(Tt,{source:o??Dc[y].icon})),actionButtons:c||d?g.createElement(Wg,null,c&&g.createElement($t,Object.assign({onClick:c.onAction},c),c.content),d&&g.createElement($t,Object.assign({onClick:d.onAction},d),d.content)):null,dismissButton:l?g.createElement($t,{variant:"tertiary",icon:g.createElement("span",{className:go[b?"icon-secondary":S.icon]},g.createElement(Tt,{source:yg})),onClick:l,accessibilityLabel:m.translate("Polaris.Banner.dismissButton")}):null},L=h?g.createElement(ze,{as:"span",variant:"bodyMd"},h):null;return v?g.createElement(tb,C,L):b?g.createElement(eb,C,L):g.createElement(K5,C,L)}function K5({backgroundColor:r,textColor:o,bannerTitle:i,bannerIcon:l,actionButtons:c,dismissButton:d,children:f}){const{smUp:h}=Dl(),m=f||c;return g.createElement(Qe,{width:"100%"},g.createElement(Zr,{align:"space-between"},g.createElement(Qe,{background:r,color:o,borderStartStartRadius:h?"300":void 0,borderStartEndRadius:h?"300":void 0,borderEndStartRadius:!m&&h?"300":void 0,borderEndEndRadius:!m&&h?"300":void 0,padding:"300"},g.createElement(Ot,{align:"space-between",blockAlign:"center",gap:"200",wrap:!1},g.createElement(Ot,{gap:"100",wrap:!1},l,i),d)),m&&g.createElement(Qe,{padding:{xs:"300",md:"400"},paddingBlockStart:"300"},g.createElement(Zr,{gap:"200"},g.createElement("div",null,f),c))))}function eb({backgroundColor:r,bannerIcon:o,actionButtons:i,dismissButton:l,children:c}){const[d,f]=w.useState("center"),h=w.useRef(null),m=w.useRef(null),v=w.useRef(null),b=w.useCallback(()=>{var C,L,M;const y=(C=h.current)==null?void 0:C.offsetHeight,S=((L=m.current)==null?void 0:L.offsetHeight)||((M=v.current)==null?void 0:M.offsetHeight);!y||!S||(y>S?f("start"):f("center"))},[]);return w.useEffect(()=>b(),[b]),bu("resize",b),g.createElement(Qe,{width:"100%",padding:"300",borderRadius:"300"},g.createElement(Ot,{align:"space-between",blockAlign:d,wrap:!1},g.createElement(Qe,{width:"100%"},g.createElement(Ot,{gap:"200",wrap:!1,blockAlign:d},o?g.createElement("div",{ref:m},g.createElement(Qe,{background:r,borderRadius:"200",padding:"100"},o)):null,g.createElement(Qe,{ref:h,width:"100%"},g.createElement(Zr,{gap:"200"},g.createElement("div",null,c),i)))),g.createElement("div",{ref:v,className:go.DismissIcon},l)))}function tb({backgroundColor:r,textColor:o,bannerTitle:i,bannerIcon:l,actionButtons:c,dismissButton:d,children:f}){return g.createElement(Qe,{width:"100%",background:r,padding:"200",borderRadius:"200",color:o},g.createElement(Ot,{align:"space-between",blockAlign:"start",wrap:!1,gap:"200"},g.createElement(Ot,{gap:"150",wrap:!1},l,g.createElement(Qe,{width:"100%"},g.createElement(Zr,{gap:"200"},g.createElement(Zr,{gap:"050"},i,g.createElement("div",null,f)),c))),d))}var rb={Bleed:"Polaris-Bleed"};const nb=({marginInline:r,marginBlock:o,marginBlockStart:i,marginBlockEnd:l,marginInlineStart:c,marginInlineEnd:d,children:f})=>{const h=C=>{const L=["marginInlineStart","marginInlineEnd"],M=["marginBlockStart","marginBlockEnd"],z={marginBlockStart:i,marginBlockEnd:l,marginInlineStart:c,marginInlineEnd:d,marginInline:r,marginBlock:o};if(z[C])return z[C];if(L.includes(C)&&r)return z.marginInline;if(M.includes(C)&&o)return z.marginBlock},m=h("marginBlockStart"),v=h("marginBlockEnd"),b=h("marginInlineStart"),y=h("marginInlineEnd"),S={...Qr("bleed","margin-block-start","space",m),...Qr("bleed","margin-block-end","space",v),...Qr("bleed","margin-inline-start","space",b),...Qr("bleed","margin-inline-end","space",y)};return g.createElement("div",{className:rb.Bleed,style:pu(S)},f)};function ob({backAction:r}){const{content:o}=r;return g.createElement($t,{key:o,url:"url"in r?r.url:void 0,onClick:"onAction"in r?r.onAction:void 0,onPointerDown:Ul,icon:ug,accessibilityLabel:r.accessibilityLabel??o})}var Wi=(function(r){return r.Input="INPUT",r.Textarea="TEXTAREA",r.Select="SELECT",r.ContentEditable="contenteditable",r})(Wi||{});function ib(){if(document==null||document.activeElement==null)return!1;const{tagName:r}=document.activeElement;return r===Wi.Input||r===Wi.Textarea||r===Wi.Select||document.activeElement.hasAttribute(Wi.ContentEditable)}var vl={Pagination:"Polaris-Pagination",table:"Polaris-Pagination--table",TablePaginationActions:"Polaris-Pagination__TablePaginationActions"};function ab({hasNext:r,hasPrevious:o,nextURL:i,previousURL:l,onNext:c,onPrevious:d,nextTooltip:f,previousTooltip:h,nextKeys:m,previousKeys:v,accessibilityLabel:b,accessibilityLabels:y,label:S,type:C="page"}){const L=_r(),M=w.createRef(),z=b||L.translate("Polaris.Pagination.pagination"),B=(y==null?void 0:y.previous)||L.translate("Polaris.Pagination.previous"),R=(y==null?void 0:y.next)||L.translate("Polaris.Pagination.next"),H=g.createElement($t,{icon:fg,accessibilityLabel:B,url:l,onClick:d,disabled:!o,id:"previousURL"}),Z=h&&o?g.createElement(ta,{activatorWrapper:"span",content:h,preferredPosition:"below"},H):H,X=g.createElement($t,{icon:mg,accessibilityLabel:R,url:i,onClick:c,disabled:!r,id:"nextURL"}),te=f&&r?g.createElement(ta,{activatorWrapper:"span",content:f,preferredPosition:"below"},X):X,I=d||cm,D=v&&(l||d)&&o&&v.map(fe=>g.createElement(ra,{key:fe,keyCode:fe,handler:bl(l?sm("previousURL",M):I)})),U=c||cm,V=m&&(i||c)&&r&&m.map(fe=>g.createElement(ra,{key:fe,keyCode:fe,handler:bl(i?sm("nextURL",M):U)}));if(C==="table"){const fe=S?g.createElement(Qe,{padding:"300",paddingBlockStart:"0",paddingBlockEnd:"0"},g.createElement(ze,{as:"span",variant:"bodySm",fontWeight:"medium"},S)):null;return g.createElement("nav",{"aria-label":z,ref:M,className:Le(vl.Pagination,vl.table)},D,V,g.createElement(Qe,{background:"bg-surface-secondary",paddingBlockStart:"150",paddingBlockEnd:"150",paddingInlineStart:"300",paddingInlineEnd:"200"},g.createElement(Ot,{align:"center",blockAlign:"center"},g.createElement("div",{className:vl.TablePaginationActions,"data-buttongroup-variant":"segmented"},g.createElement("div",null,Z),fe,g.createElement("div",null,te)))))}const re=r&&o?g.createElement("span",null,S):g.createElement(ze,{tone:"subdued",as:"span"},S),ne=S?g.createElement(Qe,{padding:"300",paddingBlockStart:"0",paddingBlockEnd:"0"},g.createElement("div",{"aria-live":"polite"},re)):null;return g.createElement("nav",{"aria-label":z,ref:M,className:vl.Pagination},D,V,g.createElement(Wg,{variant:"segmented"},Z,ne,te))}function sm(r,o){return()=>{if(o.current==null)return;const i=o.current.querySelector(`#${r}`);i&&i.click()}}function bl(r){return()=>{ib()||r()}}function cm(){}var lb={Divider:"Polaris-Divider"};const sb=({borderColor:r="border-secondary",borderWidth:o="025"})=>{const i=r==="transparent"?r:`var(--p-color-${r})`;return g.createElement("hr",{className:lb.Divider,style:{borderBlockStart:`var(--p-border-width-${o}) solid ${i}`}})};function Vg(){const r=w.useContext(ig);if(!r)throw new Error("No mediaQuery was provided. Your application must be wrapped in an <AppProvider> component. See https://polaris.shopify.com/components/app-provider for implementation instructions.");return r}var ho={Layout:"Polaris-Layout",Section:"Polaris-Layout__Section","Section-fullWidth":"Polaris-Layout__Section--fullWidth","Section-oneHalf":"Polaris-Layout__Section--oneHalf","Section-oneThird":"Polaris-Layout__Section--oneThird",AnnotatedSection:"Polaris-Layout__AnnotatedSection",AnnotationWrapper:"Polaris-Layout__AnnotationWrapper",AnnotationContent:"Polaris-Layout__AnnotationContent",Annotation:"Polaris-Layout__Annotation"},um={TextContainer:"Polaris-TextContainer",spacingTight:"Polaris-TextContainer--spacingTight",spacingLoose:"Polaris-TextContainer--spacingLoose"};function cb({spacing:r,children:o}){const i=Le(um.TextContainer,r&&um[Rt("spacing",r)]);return g.createElement("div",{className:i},o)}function ub({children:r,title:o,description:i,id:l}){const c=typeof i=="string"?g.createElement(ze,{as:"p",variant:"bodyMd"},i):i;return g.createElement("div",{className:ho.AnnotatedSection},g.createElement("div",{className:ho.AnnotationWrapper},g.createElement("div",{className:ho.Annotation},g.createElement(cb,{spacing:"tight"},g.createElement(ze,{id:l,variant:"headingMd",as:"h2"},o),c&&g.createElement(Qe,{color:"text-secondary"},c))),g.createElement("div",{className:ho.AnnotationContent},r)))}function Gg({children:r,variant:o}){const i=Le(ho.Section,ho[`Section-${o}`]);return g.createElement("div",{className:i},r)}const kr=function({sectioned:o,children:i}){const l=o?g.createElement(Gg,null,i):i;return g.createElement("div",{className:ho.Layout},l)};kr.AnnotatedSection=ub;kr.Section=Gg;function Gi(r){return!w.isValidElement(r)&&r!==void 0}function kl(r){return w.isValidElement(r)&&r!==void 0}var yl={Page:"Polaris-Page",fullWidth:"Polaris-Page--fullWidth",narrowWidth:"Polaris-Page--narrowWidth",Content:"Polaris-Page__Content"},It={TitleWrapper:"Polaris-Page-Header__TitleWrapper",TitleWrapperExpand:"Polaris-Page-Header__TitleWrapperExpand",BreadcrumbWrapper:"Polaris-Page-Header__BreadcrumbWrapper",PaginationWrapper:"Polaris-Page-Header__PaginationWrapper",PrimaryActionWrapper:"Polaris-Page-Header__PrimaryActionWrapper",Row:"Polaris-Page-Header__Row",mobileView:"Polaris-Page-Header--mobileView",RightAlign:"Polaris-Page-Header__RightAlign",noBreadcrumbs:"Polaris-Page-Header--noBreadcrumbs",AdditionalMetaData:"Polaris-Page-Header__AdditionalMetaData",Actions:"Polaris-Page-Header__Actions",longTitle:"Polaris-Page-Header--longTitle",mediumTitle:"Polaris-Page-Header--mediumTitle",isSingleRow:"Polaris-Page-Header--isSingleRow"},Zo={Title:"Polaris-Header-Title",TitleWithSubtitle:"Polaris-Header-Title__TitleWithSubtitle",TitleWrapper:"Polaris-Header-Title__TitleWrapper",SubTitle:"Polaris-Header-Title__SubTitle",SubtitleCompact:"Polaris-Header-Title__SubtitleCompact",SubtitleMaxWidth:"Polaris-Header-Title__SubtitleMaxWidth"};function db({title:r,subtitle:o,titleMetadata:i,compactTitle:l,hasSubtitleMaxWidth:c}){const d=Le(Zo.Title,o&&Zo.TitleWithSubtitle),f=r?g.createElement("h1",{className:d},g.createElement(ze,{as:"span",variant:"headingLg",fontWeight:"bold"},r)):null,h=i?g.createElement(nb,{marginBlock:"100"},i):null,m=g.createElement("div",{className:Zo.TitleWrapper},f,h),v=o?g.createElement("div",{className:Le(Zo.SubTitle,l&&Zo.SubtitleCompact,c&&Zo.SubtitleMaxWidth)},g.createElement(ze,{as:"p",variant:"bodySm",tone:"subdued"},o)):null;return g.createElement(g.Fragment,null,m,v)}const fb=20,mb=8,dm=34;function gb({title:r,subtitle:o,pageReadyAccessibilityLabel:i,titleMetadata:l,additionalMetadata:c,titleHidden:d=!1,primaryAction:f,pagination:h,filterActions:m,backAction:v,secondaryActions:b=[],actionGroups:y=[],compactTitle:S=!1,onActionRollup:C}){const L=_r(),{isNavigationCollapsed:M}=Vg(),z=!f&&!h&&(Gi(b)&&!b.length||kl(b))&&!y.length,B=y.length>0||Gi(b)&&b.length>0||kl(b),R=v?g.createElement("div",{className:It.BreadcrumbWrapper},g.createElement(Qe,{maxWidth:"100%",paddingInlineEnd:"100",printHidden:!0},g.createElement(ob,{backAction:v}))):null,H=h&&!M?g.createElement("div",{className:It.PaginationWrapper},g.createElement(Qe,{printHidden:!0},g.createElement(ab,Object.assign({},h,{hasPrevious:h.hasPrevious,hasNext:h.hasNext})))):null,Z=g.createElement("div",{className:Le(It.TitleWrapper,!B&&It.TitleWrapperExpand)},g.createElement(db,{title:r,subtitle:o,titleMetadata:l,compactTitle:S,hasSubtitleMaxWidth:B})),X=i||r,te=X?g.createElement("div",{role:"status"},g.createElement(ze,{visuallyHidden:!0,as:"p"},L.translate("Polaris.Page.Header.pageReadyAccessibilityLabel",{title:X}))):void 0,I=f?g.createElement(hb,{primaryAction:f}):null;let D=null;Gi(b)&&(b.length>0||Q5(y))?D=g.createElement(G5,{actions:b,groups:y,rollup:M,rollupActionsLabel:r?L.translate("Polaris.Page.Header.rollupActionsLabel",{title:r}):void 0,onActionRollup:C}):kl(b)&&(D=g.createElement(g.Fragment,null,b));const U=R||H?g.createElement(Qe,{printHidden:!0,paddingBlockEnd:"100",paddingInlineEnd:D&&M?"1000":void 0},g.createElement(Ot,{gap:"400",align:"space-between",blockAlign:"center"},R,H)):null,V=c?g.createElement("div",{className:It.AdditionalMetaData},g.createElement(ze,{tone:"subdued",as:"span",variant:"bodySm"},c)):null,re=Le(z&&It.isSingleRow,U&&It.hasNavigation,D&&It.hasActionMenu,M&&It.mobileView,!v&&It.noBreadcrumbs,r&&r.length<dm&&It.mediumTitle,r&&r.length>dm&&It.longTitle),{slot1:ne,slot2:fe,slot3:oe,slot4:Ee,slot5:Ne}=vb({actionMenuMarkup:D,additionalMetadataMarkup:V,breadcrumbMarkup:R,isNavigationCollapsed:M,pageTitleMarkup:Z,paginationMarkup:H,primaryActionMarkup:I,title:r});return g.createElement(Qe,{position:"relative",paddingBlockStart:{xs:"400",md:"600"},paddingBlockEnd:{xs:"400",md:"600"},paddingInlineStart:{xs:"400",sm:"0"},paddingInlineEnd:{xs:"400",sm:"0"},visuallyHidden:d},te,g.createElement("div",{className:re},g.createElement(Vv,{filterActions:!!m},g.createElement(Bc,{condition:[ne,fe,oe,Ee].some(xl)},g.createElement("div",{className:It.Row},ne,fe,g.createElement(Bc,{condition:[oe,Ee].some(xl)},g.createElement("div",{className:It.RightAlign},g.createElement(A5,{condition:[oe,Ee].every(xl),wrapper:xe=>g.createElement("div",{className:It.Actions},xe)},oe,Ee))))),g.createElement(Bc,{condition:[Ne].some(xl)},g.createElement("div",{className:It.Row},g.createElement(Ot,{gap:"400"},Ne))))))}function hb({primaryAction:r}){const{isNavigationCollapsed:o}=Vg();let i;if(Gi(r)){const{primary:l,helpText:c}=r,d=l===void 0?!0:l,f=Pg(pb(o,r),{variant:d?"primary":void 0});i=c?g.createElement(ta,{content:c},f):f}else i=r;return g.createElement("div",{className:It.PrimaryActionWrapper},g.createElement(Qe,{printHidden:!0},i))}function pb(r,o){let{content:i,accessibilityLabel:l}=o;const{icon:c}=o;return c==null?{...o,icon:void 0}:(r&&(l=l||i,i=void 0),{...o,content:i,accessibilityLabel:l,icon:c})}function xl(r){return r!=null}function vb({actionMenuMarkup:r,additionalMetadataMarkup:o,breadcrumbMarkup:i,isNavigationCollapsed:l,pageTitleMarkup:c,paginationMarkup:d,primaryActionMarkup:f,title:h}){const m={mobileCompact:{slots:{slot1:null,slot2:c,slot3:r,slot4:f,slot5:o},condition:l&&i==null&&h!=null&&h.length<=mb},mobileDefault:{slots:{slot1:i,slot2:c,slot3:r,slot4:f,slot5:o},condition:l},desktopCompact:{slots:{slot1:i,slot2:c,slot3:r,slot4:f,slot5:o},condition:!l&&d==null&&r==null&&h!=null&&h.length<=fb},desktopDefault:{slots:{slot1:i,slot2:c,slot3:g.createElement(g.Fragment,null,r,f),slot4:d,slot5:o},condition:!l}};return(Object.values(m).find(b=>b.condition)||m.desktopDefault).slots}function Qg({children:r,fullWidth:o,narrowWidth:i,...l}){const c=Le(yl.Page,o&&yl.fullWidth,i&&yl.narrowWidth),d=l.title!=null&&l.title!==""||l.subtitle!=null&&l.subtitle!==""||l.primaryAction!=null||l.secondaryActions!=null&&(Gi(l.secondaryActions)&&l.secondaryActions.length>0||kl(l.secondaryActions))||l.actionGroups!=null&&l.actionGroups.length>0||l.backAction!=null,f=Le(!d&&yl.Content),h=d?g.createElement(gb,Object.assign({filterActions:!0},l)):null;return g.createElement("div",{className:c},h,g.createElement("div",{className:f},r))}const Zg=r=>r.includes("Warning:")||r.includes("React")?"react":r.includes("fetch")||r.includes("network")||r.includes("Failed to load")?"network":r.includes("TypeError")||r.includes("ReferenceError")||r.includes("SyntaxError")?"javascript":"unknown",bb="Warning:",yb="[WARNING]",xb="[CONSOLE ERROR]",wb=[/\.tsx?$/,/\.jsx?$/,/\/src\//],Yg=[/node_modules/,/\.vite/,/chunk-/,/deps/],Sb=r=>[/React Router Future Flag Warning/i,/future flag to opt-in early/i,/reactrouter\.com.*upgrading.*future/i,/v7_\w+.*future flag/i].some(i=>i.test(r)),Eb=r=>[/componentWillReceiveProps/,/componentWillMount/,/componentWillUpdate/,/UNSAFE_componentWill/].some(i=>i.test(r)),fm=r=>{if(!r)return!1;const o=r.split(`
`);return o.some(c=>wb.some(d=>d.test(c)))?!0:!o.every(c=>c.trim()===""||c.includes("Error")||Yg.some(d=>d.test(c)))};class Pb{constructor(){Wt(this,"reportedErrors",new Map);Wt(this,"deduplicationWindow",5e3);Wt(this,"cleanupInterval",6e4);Wt(this,"lastCleanup",Date.now())}calculatePrecedence(o){const i=this.hasRelevantSourceCode(o.stack),l=o.level==="warning",c=o.stack?o.stack.split(`
`).length:0;return{hasSourceCode:i,isWarning:l,stackDepth:c,timestamp:Date.now()}}hasRelevantSourceCode(o){return o?o.split(`
`).some(i=>/\.tsx?$/.test(i)||/\.jsx?$/.test(i)||/\/src\//.test(i)):!1}isHigherPrecedence(o,i){return o.hasSourceCode!==i.hasSourceCode?o.hasSourceCode:o.isWarning!==i.isWarning?o.isWarning:o.stackDepth!==i.stackDepth?o.stackDepth>i.stackDepth:o.timestamp>i.timestamp}generateSignature(o){let i=o.message.replace(/\[CONSOLE ERROR\]|\[WARNING\]/g,"").replace(/^Uncaught Error:\s*/i,"").replace(/^Error:\s*/i,"").replace(/%s.*?\n/g,"").replace(/\s+/g," ").trim();return i.includes("Maximum update depth exceeded")?i="Maximum update depth exceeded":i.includes("The result of getSnapshot should be cached")?i="The result of getSnapshot should be cached":i.includes("React Router caught the following error")&&(i="React Router caught error"),i}shouldReport(o,i=!1){this.maybeCleanup();const l=this.generateSignature(o),c=this.calculatePrecedence(o),d=this.reportedErrors.get(l),f=Date.now();return d?this.isHigherPrecedence(c,d.precedence)&&c.hasSourceCode&&!d.precedence.hasSourceCode?(d.precedence=c,d.timestamp=f,d.reported=!0,{shouldReport:!0}):f-d.timestamp<this.deduplicationWindow?{shouldReport:!1,reason:"duplicate_in_window"}:i&&!c.hasSourceCode?{shouldReport:!1,reason:"no_source_code"}:(d.timestamp=f,d.precedence=c,d.reported=!0,{shouldReport:!0}):i&&!c.hasSourceCode?{shouldReport:!1,reason:"no_source_code"}:(this.reportedErrors.set(l,{timestamp:f,precedence:c,reported:!0}),{shouldReport:!0})}maybeCleanup(){const o=Date.now();if(o-this.lastCleanup>this.cleanupInterval){const i=o-3e5;for(const[l,c]of this.reportedErrors.entries())c.timestamp<i&&this.reportedErrors.delete(l);this.lastCleanup=o}}}const Xg=new Pb;class kb{constructor(){Wt(this,"errorQueue",[]);Wt(this,"isReporting",!1);Wt(this,"maxQueueSize",10);Wt(this,"reportingEndpoint","/api/client-errors");Wt(this,"originalConsoleWarn",null);Wt(this,"originalConsoleError",null);Wt(this,"isInitialized",!1);if(!(typeof window>"u"))try{this.setupConsoleInterceptors(),this.setupGlobalErrorHandler(),this.setupUnhandledRejectionHandler(),this.isInitialized=!0}catch(o){console.error("[ErrorReporter] Failed to initialize:",o)}}setupGlobalErrorHandler(){const o=window.onerror;window.onerror=(i,l,c,d,f)=>{const h=typeof i=="string"?i:"Unknown error",m={message:h,stack:f==null?void 0:f.stack,source:l||void 0,level:"error",url:window.location.href};if(!this.filterError(m).shouldReport)return o?o(i,l,c,d,f):!0;const b=this.createErrorPayload({message:h,stack:f==null?void 0:f.stack,parsedStack:this.parseStackTrace(f==null?void 0:f.stack),source:l||void 0,lineno:c||void 0,colno:d||void 0,error:f});return this.report(b),o?o(i,l,c,d,f):!0}}setupUnhandledRejectionHandler(){window.addEventListener("unhandledrejection",o=>{const i=o.reason,l=(i==null?void 0:i.message)||"Unhandled Promise Rejection",c={message:l,stack:i==null?void 0:i.stack,level:"error",url:window.location.href};if(!this.filterError(c).shouldReport)return;const f=this.createErrorPayload({message:l,stack:i==null?void 0:i.stack,parsedStack:this.parseStackTrace(i==null?void 0:i.stack),error:i});this.report(f)})}createConsoleInterceptor(o,i,l){return(...c)=>{i.apply(console,c);try{const d=Jg(c),f=new Error().stack,h=o==="warn"&&d.includes(bb)?"warning":"error",m={message:`${l} ${d}`,stack:f,level:h,url:window.location.href};if(!this.filterError(m).shouldReport)return;const b=this.createErrorPayload({message:m.message,stack:f,parsedStack:this.parseStackTrace(f),level:h});this.report(b)}catch{}}}setupConsoleInterceptors(){this.originalConsoleWarn=console.warn,this.originalConsoleError=console.error;const o=console.warn,i=console.error;o.__errorReporterWrapped&&i.__errorReporterWrapped||(console.error=this.createConsoleInterceptor("error",this.originalConsoleError,xb),console.warn=this.createConsoleInterceptor("warn",this.originalConsoleWarn,yb))}createBaseErrorData(){return{url:window.location.href,userAgent:navigator.userAgent,timestamp:new Date().toISOString()}}createErrorPayload(o){return{...this.createBaseErrorData(),level:o.level??"error",category:Zg(o.message),...o}}filterError(o){const{message:i,stack:l,level:c,source:d}=o;if(i.includes("[ErrorReporter]"))return{shouldReport:!1,reason:"internal_debug"};if(Sb(i))return{shouldReport:!1,reason:"react_router_future_flag"};if(c==="warning"&&Eb(i))return{shouldReport:!1,reason:"deprecated_react_warning"};if(c==="error"&&i.includes("Uncaught Error")&&!fm(l))return{shouldReport:!1,reason:"no_relevant_source"};if(c==="error"&&d&&Yg.some(h=>h.test(d))&&!fm(l))return{shouldReport:!1,reason:"vendor_only_error"};const f=Xg.shouldReport(o,!1);return f.shouldReport?{shouldReport:!0}:{shouldReport:!1,reason:f.reason}}parseStackTrace(o){if(!o)return"";try{const i=o.split(`
`),l=[];for(const c of i){if(c.includes("Error")&&!c.includes("at "))continue;let d=c.trim();const f=c.match(/at (\w+) \(.*?\/src\/(.*?):(\d+):(\d+)\)/);if(f){const[,h,m,v,b]=f;d=`    at ${h} (${m}:${v}:${b})`}else{const h=c.match(/at.*?\/src\/(.*?):(\d+):(\d+)/);if(h){const[,m,v,b]=h;d=`    at ${m}:${v}:${b}`}else c.match(/at\s+(\w+)\s+\(/)&&(d=c)}d&&l.push(d)}return l.join(`
`)}catch{return o}}report(o){if(!(!this.isInitialized||typeof window>"u"))try{this.errorQueue.push(o),this.errorQueue.length>this.maxQueueSize&&this.errorQueue.shift(),this.processQueue()}catch{}}async processQueue(){if(this.isReporting||this.errorQueue.length===0)return;this.isReporting=!0;const o=[...this.errorQueue];this.errorQueue=[];try{for(const i of o)await this.sendError(i)}catch(i){console.error("[ErrorReporter] Failed to report errors:",i),this.errorQueue.unshift(...o)}finally{this.isReporting=!1}}async sendError(o){try{const i=await fetch(this.reportingEndpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});if(!i.ok)throw new Error(`Failed to report error: ${i.status} ${i.statusText}`);const l=await i.json();if(!l.success)throw new Error(l.error||"Unknown error occurred");console.log("[ErrorReporter] Error reported successfully:",o.message)}catch(i){throw console.error("[ErrorReporter] Failed to send error:",i),i}}dispose(){this.originalConsoleWarn&&(console.warn=this.originalConsoleWarn),this.originalConsoleError&&(console.error=this.originalConsoleError),this.isInitialized=!1}}const Jg=r=>r.map(o=>typeof o=="string"?o:typeof o=="object"&&o?JSON.stringify(o,null,2):String(o)).join(" "),Cb=(r,o)=>({message:r,stack:new Error().stack,url:window.location.href,userAgent:navigator.userAgent,timestamp:new Date().toISOString(),level:o,category:Zg(r)}),_b=r=>{const{message:o,stack:i,level:l}=r;if(o.includes("[ErrorReporter]")||[/React Router Future Flag Warning/i,/future flag to opt-in early/i,/reactrouter\.com.*upgrading.*future/i,/v7_\w+.*future flag/i].some(m=>m.test(o))||l==="warning"&&[/componentWillReceiveProps/,/componentWillMount/,/componentWillUpdate/,/UNSAFE_componentWill/].some(m=>m.test(o)))return!1;const f=i?i.split(`
`).some(m=>/\.tsx?$/.test(m)||/\.jsx?$/.test(m)||/\/src\//.test(m)):!1;return l==="error"&&o.includes("Uncaught Error")&&!f||o.includes("Maximum update depth exceeded")&&!f?!1:Xg.shouldReport(r,!0).shouldReport},Ib=async r=>{try{await fetch("/api/client-errors",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)})}catch{}};if(typeof window<"u"){const r=console.warn,o=console.error,i=(l,c,d)=>function(...f){l.apply(console,f);try{const h=Jg(f),m=new Error().stack,v=h.includes("Warning:")?"warning":d,b={message:`${c} ${h}`,stack:m,level:v,url:window.location.href};if(_b(b)){const y=Cb(b.message,v);Ib(y)}}catch{}};console.warn=i(r,"[WARNING]","warning"),console.warn.__errorReporterWrapped=!0,console.error=i(o,"[CONSOLE ERROR]","error"),console.error.__errorReporterWrapped=!0}const Cu=new kb;typeof window<"u"&&window.addEventListener("beforeunload",()=>{Cu.dispose()});var qg=function(o){return g.createElement("svg",Object.assign({viewBox:"0 0 20 20"},o),g.createElement("path",{d:"M10 6.75a.75.75 0 0 1 .75.75v3.5a.75.75 0 1 1-1.5 0v-3.5a.75.75 0 0 1 .75-.75Z"}),g.createElement("path",{d:"M11 13.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"}),g.createElement("path",{fillRule:"evenodd",d:"M10 3.5c-1.045 0-1.784.702-2.152 1.447a449.26 449.26 0 0 1-2.005 3.847l-.028.052a403.426 403.426 0 0 0-2.008 3.856c-.372.752-.478 1.75.093 2.614.57.863 1.542 1.184 2.464 1.184h7.272c.922 0 1.895-.32 2.464-1.184.57-.864.465-1.862.093-2.614-.21-.424-1.113-2.147-2.004-3.847l-.032-.061a429.497 429.497 0 0 1-2.005-3.847c-.368-.745-1.107-1.447-2.152-1.447Zm-.808 2.112c.404-.816 1.212-.816 1.616 0 .202.409 1.112 2.145 2.022 3.88a418.904 418.904 0 0 1 2.018 3.875c.404.817 0 1.633-1.212 1.633h-7.272c-1.212 0-1.617-.816-1.212-1.633.202-.408 1.113-2.147 2.023-3.883a421.932 421.932 0 0 0 2.017-3.872Z"}))};qg.displayName="AlertTriangleIcon";var Kg=function(o){return g.createElement("svg",Object.assign({viewBox:"0 0 20 20"},o),g.createElement("path",{d:"M10.75 6a.75.75 0 0 0-1.5 0v4c0 .199.079.39.22.53l2 2a.75.75 0 1 0 1.06-1.06l-1.78-1.78v-3.69Z"}),g.createElement("path",{fillRule:"evenodd",d:"M17 10a7 7 0 1 1-14 0 7 7 0 0 1 14 0Zm-1.5 0a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0Z"}))};Kg.displayName="ClockIcon";var eh=function(o){return g.createElement("svg",Object.assign({viewBox:"0 0 20 20"},o),g.createElement("path",{fillRule:"evenodd",d:"M8.344 3.692a2.25 2.25 0 0 1 3.312 0l3.854 4.19a3.75 3.75 0 0 1 .99 2.538v3.33a2.75 2.75 0 0 1-2.75 2.75h-1.75a1.5 1.5 0 0 1-1.5-1.5v-2h-1v2a1.5 1.5 0 0 1-1.5 1.5h-1.75a2.75 2.75 0 0 1-2.75-2.75v-3.33c0-.94.353-1.847.99-2.539l3.854-4.189Zm2.208 1.016a.75.75 0 0 0-1.104 0l-3.854 4.189a2.25 2.25 0 0 0-.594 1.523v3.33c0 .69.56 1.25 1.25 1.25h1.75v-2a1.5 1.5 0 0 1 1.5-1.5h1a1.5 1.5 0 0 1 1.5 1.5v2h1.75c.69 0 1.25-.56 1.25-1.25v-3.33a2.25 2.25 0 0 0-.594-1.523l-3.854-4.19Z"}))};eh.displayName="HomeIcon";var Fl=function(o){return g.createElement("svg",Object.assign({viewBox:"0 0 20 20"},o),g.createElement("path",{d:"M10.75 5.75c0-.414-.336-.75-.75-.75s-.75.336-.75.75v3.5h-3.5c-.414 0-.75.336-.75.75s.336.75.75.75h3.5v3.5c0 .414.336.75.75.75s.75-.336.75-.75v-3.5h3.5c.414 0 .75-.336.75-.75s-.336-.75-.75-.75h-3.5v-3.5Z"}))};Fl.displayName="PlusIcon";var _u=function(o){return g.createElement("svg",Object.assign({viewBox:"0 0 20 20"},o),g.createElement("path",{d:"M3.5 9.25a.75.75 0 0 0 1.5 0 3 3 0 0 1 3-3h6.566l-1.123 1.248a.75.75 0 1 0 1.114 1.004l2.25-2.5a.75.75 0 0 0-.027-1.032l-2.25-2.25a.75.75 0 1 0-1.06 1.06l.97.97h-6.44a4.5 4.5 0 0 0-4.5 4.5Z"}),g.createElement("path",{d:"M16.5 10.75a.75.75 0 0 0-1.5 0 3 3 0 0 1-3 3h-6.566l1.123-1.248a.75.75 0 1 0-1.114-1.004l-2.25 2.5a.75.75 0 0 0 .027 1.032l2.25 2.25a.75.75 0 0 0 1.06-1.06l-.97-.97h6.44a4.5 4.5 0 0 0 4.5-4.5Z"}))};_u.displayName="RefreshIcon";var th=function(o){return g.createElement("svg",Object.assign({viewBox:"0 0 20 20"},o),g.createElement("path",{d:"M11.128 4.123c-.453-.95-1.803-.95-2.256 0l-1.39 2.912-3.199.421c-1.042.138-1.46 1.422-.697 2.146l2.34 2.222-.587 3.172c-.192 1.034.901 1.828 1.825 1.327l2.836-1.54 2.836 1.54c.924.501 2.017-.293 1.825-1.327l-.587-3.172 2.34-2.222c.762-.724.345-2.008-.697-2.146l-3.2-.421-1.389-2.912Z"}))};th.displayName="StarFilledIcon";function eu({title:r="Oops! Something went wrong",message:o="We're aware of the issue and actively working to fix it. Your experience matters to us.",error:i,onRetry:l,onGoHome:c,showErrorDetails:d=!0,statusMessage:f="Our team has been notified"}){const[h,m]=g.useState(!1),v=()=>{l?l():window.location.reload()},b=()=>{c?c():window.location.href="/"};return se.jsx(Qg,{title:r,children:se.jsxs(kr,{children:[se.jsx(kr.Section,{children:se.jsx(Pu,{children:se.jsx("div",{style:{textAlign:"center",padding:"2rem"},children:se.jsxs(Zr,{gap:"loose",align:"center",children:[se.jsx("div",{style:{width:"64px",height:"64px",borderRadius:"16px",background:"linear-gradient(135deg, #ff6b6b, #ff8e8e)",display:"flex",alignItems:"center",justifyContent:"center"},children:se.jsx(Tt,{source:qg,tone:"base"})}),se.jsx(ze,{variant:"headingLg",as:"h1",children:r}),se.jsx(ze,{variant:"bodyLg",tone:"subdued",children:o}),f&&se.jsx($g,{status:"info",title:f}),se.jsxs(Zr,{gap:"tight",children:[se.jsx($t,{onClick:v,variant:"primary",icon:_u,children:"Try Again"}),se.jsx($t,{onClick:b,variant:"secondary",icon:eh,children:"Go to Homepage"})]}),!1]})})})}),se.jsx(kr.Section,{children:se.jsx("div",{style:{textAlign:"center",padding:"1rem"},children:se.jsx(ze,{variant:"bodyMd",tone:"subdued",children:"If this problem persists, please contact our support team"})})})]})})}class Rb extends w.Component{constructor(){super(...arguments);Wt(this,"state",{hasError:!1,error:null,errorInfo:null});Wt(this,"retry",()=>{this.setState({hasError:!1,error:null,errorInfo:null}),window.location.reload()});Wt(this,"goHome",()=>{window.location.href="/"})}static getDerivedStateFromError(i){return{hasError:!0,error:i,errorInfo:null}}componentDidCatch(i,l){this.setState({errorInfo:l}),Cu.report({message:i.message,stack:i.stack||"",componentStack:l.componentStack,errorBoundary:!0,errorBoundaryProps:{componentName:this.constructor.name},url:window.location.href,userAgent:navigator.userAgent,timestamp:new Date().toISOString(),level:"error"})}render(){return this.state.hasError&&this.state.error?this.props.fallback?this.props.fallback(this.state.error,this.state.errorInfo,this.retry):se.jsx(eu,{error:this.state.error,onRetry:this.retry,onGoHome:this.goHome}):this.props.children}}function Tb(){const r=Um();return w.useEffect(()=>{if(r){let o="Unknown route error",i="";bo(r)?(o=`Route Error ${r.status}: ${r.statusText}`,r.data&&(o+=` - ${JSON.stringify(r.data)}`)):r instanceof Error?(o=r.message,i=r.stack||""):typeof r=="string"?o=r:o=JSON.stringify(r),Cu.report({message:o,stack:i,url:window.location.href,userAgent:navigator.userAgent,timestamp:new Date().toISOString(),source:"react-router",error:r,level:"error"})}},[r]),bo(r)?se.jsx(eu,{title:`${r.status} ${r.statusText}`,message:"Sorry, an error occurred while loading this page.",error:r.data?{message:JSON.stringify(r.data,null,2)}:r,statusMessage:"Navigation error detected"}):se.jsx(eu,{title:"Unexpected Error",message:"An unexpected error occurred while loading this page.",error:r,statusMessage:"Routing error detected"})}function mm({title:r,description:o,badgeText:i,onAction:l}){return se.jsx(Pu,{children:se.jsx("div",{style:{padding:"1rem"},children:se.jsxs(Zr,{gap:"tight",children:[se.jsxs(Ot,{gap:"tight",align:"center",children:[se.jsx(ze,{variant:"headingMd",as:"h3",children:r}),i&&se.jsx(Ki,{tone:"success",children:i})]}),se.jsx(ze,{variant:"bodyMd",tone:"subdued",children:o}),l&&se.jsx($t,{variant:"primary",size:"slim",onClick:l,icon:Fl,children:"Action"})]})})})}const gm=r=>{let o;const i=new Set,l=(v,b)=>{const y=typeof v=="function"?v(o):v;if(!Object.is(y,o)){const S=o;o=b??(typeof y!="object"||y===null)?y:Object.assign({},o,y),i.forEach(C=>C(o,S))}},c=()=>o,h={setState:l,getState:c,getInitialState:()=>m,subscribe:v=>(i.add(v),()=>i.delete(v))},m=o=r(l,c,h);return h},Mb=(r=>r?gm(r):gm),Nb=r=>r;function Lb(r,o=Nb){const i=g.useSyncExternalStore(r.subscribe,g.useCallback(()=>o(r.getState()),[r,o]),g.useCallback(()=>o(r.getInitialState()),[r,o]));return g.useDebugValue(i),i}const hm=r=>{const o=Mb(r),i=l=>Lb(o,l);return Object.assign(i,o),i},rh=(r=>r?hm(r):hm),pm=r=>Symbol.iterator in r,vm=r=>"entries"in r,bm=(r,o)=>{const i=r instanceof Map?r:new Map(r.entries()),l=o instanceof Map?o:new Map(o.entries());if(i.size!==l.size)return!1;for(const[c,d]of i)if(!l.has(c)||!Object.is(d,l.get(c)))return!1;return!0},Fb=(r,o)=>{const i=r[Symbol.iterator](),l=o[Symbol.iterator]();let c=i.next(),d=l.next();for(;!c.done&&!d.done;){if(!Object.is(c.value,d.value))return!1;c=i.next(),d=l.next()}return!!c.done&&!!d.done};function zb(r,o){return Object.is(r,o)?!0:typeof r!="object"||r===null||typeof o!="object"||o===null||Object.getPrototypeOf(r)!==Object.getPrototypeOf(o)?!1:pm(r)&&pm(o)?vm(r)&&vm(o)?bm(r,o):Fb(r,o):bm({entries:()=>Object.entries(r)},{entries:()=>Object.entries(o)})}function Ab(r){const o=g.useRef(void 0);return i=>{const l=r(i);return zb(o.current,l)?o.current:o.current=l}}const ji=rh(r=>({isRunning:!1,elapsedMs:0,start:()=>r({isRunning:!0}),pause:()=>r({isRunning:!1}),reset:()=>r({elapsedMs:0,isRunning:!1}),tick:o=>r(i=>({elapsedMs:i.elapsedMs+o}))})),jc=rh(r=>({count:0,inc:()=>r(o=>({count:o.count+1})),reset:()=>r({count:0})}));function Ob(r){const o=Math.max(0,Math.floor(r/1e3)),i=Math.floor(o/60),l=o%60;return`${i}:${l.toString().padStart(2,"0")}`}function Bb(){const[r,o]=w.useState(!1),{isRunning:i,elapsedMs:l}=ji(Ab(S=>({isRunning:S.isRunning,elapsedMs:S.elapsedMs}))),c=ji(S=>S.start),d=ji(S=>S.pause),f=ji(S=>S.reset),h=jc(S=>S.count),m=jc(S=>S.inc),v=jc(S=>S.reset);w.useEffect(()=>{if(!i)return;let S=0,C=performance.now();const L=()=>{const M=performance.now(),z=M-C;C=M,ji.getState().tick(z),S=requestAnimationFrame(L)};return S=requestAnimationFrame(L),()=>cancelAnimationFrame(S)},[i]);const b=()=>{m(),o(!0),i?d():c()},y=Ob(l);return se.jsx(Qg,{title:"Creating your app",subtitle:"Your application would be ready soon",children:se.jsxs(kr,{children:[se.jsx(kr.Section,{children:r&&se.jsx($g,{title:i?"Building your app…":"Taking a short pause",status:i?"success":"info",onDismiss:()=>o(!1),children:se.jsx("p",{children:i?"Hang tight, we're setting everything up.":"We'll continue shortly."})})}),se.jsx(kr.Section,{children:se.jsx(Pu,{children:se.jsx("div",{style:{textAlign:"center",padding:"2rem"},children:se.jsxs(Zr,{gap:"loose",align:"center",children:[se.jsx("div",{style:{width:"64px",height:"64px",borderRadius:"16px",background:"linear-gradient(135deg, #667eea, #764ba2)",display:"flex",alignItems:"center",justifyContent:"center",boxShadow:"0 0 20px -5px rgba(99, 102, 241, 0.4)"},children:se.jsx(Tt,{source:th,tone:"base"})}),se.jsxs(ze,{variant:"heading2xl",as:"h1",children:["Creating your ",se.jsx(ze,{variant:"heading2xl",as:"span",tone:"success",children:"app"})]}),se.jsx(ze,{variant:"bodyLg",tone:"subdued",children:"Your application would be ready soon."}),se.jsx($t,{size:"large",onClick:b,variant:"primary",children:"Please Wait"}),se.jsx(sb,{}),se.jsxs(Ot,{gap:"loose",align:"center",children:[se.jsxs(Ot,{gap:"tight",align:"center",children:[se.jsx(Tt,{source:Kg,tone:"subdued"}),se.jsx(ze,{variant:"bodyMd",tone:"subdued",children:"Time elapsed:"}),se.jsx(Ki,{tone:"info",children:y})]}),se.jsxs(Ot,{gap:"tight",align:"center",children:[se.jsx(Tt,{source:Fl,tone:"subdued"}),se.jsx(ze,{variant:"bodyMd",tone:"subdued",children:"Coins:"}),se.jsx(Ki,{tone:"success",children:h})]})]}),se.jsxs(Ot,{gap:"tight",children:[se.jsx($t,{variant:"secondary",size:"slim",onClick:()=>{f(),v(),o(!0)},icon:_u,children:"Reset"}),se.jsx($t,{variant:"secondary",size:"slim",onClick:()=>{m(),o(!0)},icon:Fl,children:"Add Coin"})]})]})})})}),se.jsxs(kr.Section,{children:[se.jsx(kr.SectionOneHalf,{children:se.jsx(mm,{title:"Shopify Polaris",description:"This is an example of a Polaris Card component showcasing the design system.",badgeText:"New",onAction:()=>m()})}),se.jsx(kr.SectionOneHalf,{children:se.jsx(mm,{title:"React + TypeScript",description:"Built with modern React patterns and TypeScript for type safety.",badgeText:"Modern"})})]}),se.jsx(kr.Section,{children:se.jsx("div",{style:{textAlign:"center",padding:"1rem"},children:se.jsx(ze,{variant:"bodyMd",tone:"subdued",children:"Powered by Cloudflare"})})})]})})}qp();const Db=w2([{path:"/",element:se.jsx(Bb,{}),errorElement:se.jsx(Tb,{})}]);i1.createRoot(document.getElementById("root")).render(se.jsx(w.StrictMode,{children:se.jsx(Iv,{children:se.jsx(Rb,{children:se.jsx(T2,{router:Db})})})}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
